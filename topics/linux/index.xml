<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on </title>
    <link>http://wyb0.com/topics/linux/</link>
    <description>Recent content in Linux on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017 Reber. All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 10 Mar 2017 10:34:40 +0800</lastBuildDate>
    <atom:link href="http://wyb0.com/topics/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>在vps上搭建Shadowsocks</title>
      <link>http://wyb0.com/posts/%E5%9C%A8vps%E4%B8%8A%E6%90%AD%E5%BB%BAShadowsocks/</link>
      <pubDate>Fri, 10 Mar 2017 10:34:40 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/%E5%9C%A8vps%E4%B8%8A%E6%90%AD%E5%BB%BAShadowsocks/</guid>
      <description>

&lt;blockquote&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/anime/anime005.jpg&#34; alt=&#34;某科学的超电磁炮&#34;&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;h3 id=&#34;0x00-环境:b1b2822ac73153f8fee4a8255ec12774&#34;&gt;0x00 环境&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Ubuntu 14.04.1 LTS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-安装与配置:b1b2822ac73153f8fee4a8255ec12774&#34;&gt;0x01 安装与配置&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;reber@localhost:~$ sudo apt-get update
reber@localhost:~$ python --version
Python 2.7.6
reber@localhost:~$ sudo apt-get install python-gevent python-pip
reber@localhost:~$ sudo pip install shadowsocks
reber@localhost:~$ vim /home/reber/shadowsocks.json
    {
        &amp;quot;server&amp;quot;:&amp;quot;服务器 IP 地址&amp;quot;, # 服务器 IP (IPv4/IPv6)
        &amp;quot;server_port&amp;quot;:8388, # 监听的服务器端口
        &amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;, # 本地监听的 IP 地址
        &amp;quot;local_port&amp;quot;:1080, # 本地端端口
        &amp;quot;password&amp;quot;:&amp;quot;mypassword&amp;quot;, # 密码
        #&amp;quot;port_password&amp;quot;:
        #{
        #    &amp;quot;40001&amp;quot;: &amp;quot;password1&amp;quot;,
        #    &amp;quot;40002&amp;quot;: &amp;quot;password2&amp;quot;,
        #    &amp;quot;40003&amp;quot;: &amp;quot;password3&amp;quot;
        #},
        #&amp;quot;_comment&amp;quot;:
        #{
        #    &amp;quot;40001&amp;quot;: &amp;quot;xiaoming&amp;quot;,
        #    &amp;quot;40002&amp;quot;: &amp;quot;lilei&amp;quot;,
        #    &amp;quot;40003&amp;quot;: &amp;quot;mike&amp;quot;
        #}
        &amp;quot;timeout&amp;quot;:300, # 超时时间（秒）
        &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;, # 加密方式
        # 若Linux内核在3.7+，可开启fast_open降低延迟
        # 开启方法：echo 3 &amp;gt; /proc/sys/net/ipv4/tcp_fastopen
        &amp;quot;fast_open&amp;quot;: false, 
        &amp;quot;workers&amp;quot;: 1 # works数量，默认为 1
    }
reber@localhost:~$ sudo apt-get install python-m2crypto
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-服务端启动:b1b2822ac73153f8fee4a8255ec12774&#34;&gt;0x02 服务端启动&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 前台运行
reber@localhost:~$ sudo ssserver -c /home/reber/shadowsocks.json
# 后台运行
reber@localhost:~$ sudo nohup ssserver -c /home/reber/shadowsocks.json &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
# 关闭服务
reber@localhost:~$ sudo killall ssserver 
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;0x03-本地使用:b1b2822ac73153f8fee4a8255ec12774&#34;&gt;0x03 本地使用&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;添加如下配置

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/use_ss.png&#34; alt=&#34;使用Shadowsocks&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Tmux的使用</title>
      <link>http://wyb0.com/posts/Tmux%E7%9A%84%E4%BD%BF%E7%94%A8/</link>
      <pubDate>Sat, 10 Sep 2016 16:24:18 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Tmux%E7%9A%84%E4%BD%BF%E7%94%A8/</guid>
      <description>

&lt;h3 id=&#34;0x00-tmux的快捷键前缀:f89a7f12279c08beb35a8f290996f94e&#34;&gt;0x00 Tmux的快捷键前缀&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Tmux 提供了一个快捷键前缀。当想要使用快捷键时，需要先按下快捷键前缀，然后再按下快捷键。比如想按快捷键c时，你需要：先按ctrl+b，松开后再按c&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-会话:f89a7f12279c08beb35a8f290996f94e&#34;&gt;0x01 会话&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_new_session1.png&#34; alt=&#34;新建会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_new_session2.png&#34; alt=&#34;新建会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_view_all_session.png&#34; alt=&#34;查看当前所有会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_in_session1.png&#34; alt=&#34;进入会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_in_session2.png&#34; alt=&#34;进入会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_select_session.png&#34; alt=&#34;选择会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_select_session_.png&#34; alt=&#34;选择会话&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-窗口和窗格:f89a7f12279c08beb35a8f290996f94e&#34;&gt;0x02 窗口和窗格&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_windows_and_panes.gif&#34; alt=&#34;窗口和窗格&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_windows.png&#34; alt=&#34;简介&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Linux下SSH连接</title>
      <link>http://wyb0.com/posts/Linux%E4%B8%8BSSH%E8%BF%9E%E6%8E%A5/</link>
      <pubDate>Wed, 10 Aug 2016 11:46:13 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B8%8BSSH%E8%BF%9E%E6%8E%A5/</guid>
      <description>

&lt;h3 id=&#34;0x00-ssh相关选项:e269c2bc9ccc66fa2c170f02752c5233&#34;&gt;0x00 SSH相关选项&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;-V 显示版本
-f 输入密码后进入后台模式
-N 不执行远程命令，用于端口转发
-D socket5代理
-L tcp转发
-C 使用数据压缩，网速快时会影响速度
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-ssh免密码登陆:e269c2bc9ccc66fa2c170f02752c5233&#34;&gt;0x01 SSH免密码登陆&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;A主机免密码登陆B主机：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;A主机运行：
    ssh-keygen -t rsa
    会生成两个文件~/.ssh/id_rsa和~/.ssh/id_rsa.pub
    将id_rsa.pub中的内容复制到B主机的~/.ssh/authorized_keys中
注：
    要确保B主机~/.ssh/authorized_keys权限为600
    要确保B主机~/.ssh/文件夹权限为700
    要确保上述两个文件属主是当前用户
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_no_pwd_login_create_keys.png&#34; alt=&#34;A主机生成密钥对.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_no_pwd_login_write_pub_key_to_b.png&#34; alt=&#34;将A主机产生的公钥写入B主机.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_no_pwd_login_check_authorized_keys_permissions.png&#34; alt=&#34;检查B主机authorized_keys权限.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_no_pwd_login_a_login_b.png&#34; alt=&#34;A主机免密码登陆主机B.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-ssh反向连接:e269c2bc9ccc66fa2c170f02752c5233&#34;&gt;0x02 SSH反向连接&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;主机A要通过SSH连接主机B：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;B上先运行：
ssh -NfR 8888:localhost:22 reber@A-IP
输入主机A的用户reber的密码后即可在A主机监听一个8888端口，它与主机B的22端口绑定
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_reverse_conn_b_run_command.png&#34; alt=&#34;主机B反向连接主机A.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;A主机运行：
ssh root@127.0.0.1 -p 8888
输入本机的root的密码即可登入主机B的root用户
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_reverse_conn_a_run_command.png&#34; alt=&#34;主机A连接主机B.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x03-ssh-socks5代理:e269c2bc9ccc66fa2c170f02752c5233&#34;&gt;0x03 SSH Socks5代理&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_socks5_proxy_set.png&#34; alt=&#34;设置ssh socks5.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_socks5_proxy_set_firefox.png&#34; alt=&#34;设置ssh socks5.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ssh_socks5_proxy_firefox_internet.png&#34; alt=&#34;火狐通过代理可以上网.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>CGI与FastCGI与PHP-FPM</title>
      <link>http://wyb0.com/posts/CGI%E4%B8%8EFastCGI%E4%B8%8EPHP-FPM/</link>
      <pubDate>Tue, 02 Aug 2016 10:45:14 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/CGI%E4%B8%8EFastCGI%E4%B8%8EPHP-FPM/</guid>
      <description>

&lt;h3 id=&#34;0x01-cgi协议:611254adb271e8e84612e5312ce3c5c5&#34;&gt;0x01 CGI协议&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;中间件在收到请求时会去找php解析器处理，cgi是规定了要传递哪些数据(比如url、header、post数据等)的协议&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;0x02-fastcgi:611254adb271e8e84612e5312ce3c5c5&#34;&gt;0x02 FastCGI&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;服务端收到请求时会启动对应的cgi程序(如php-cgi)，即php的解析器，php解析器会解析php.ini文件、初始化执行环境，然后执行请求，每次都是这样，性能比较低&lt;/p&gt;

&lt;p&gt;fastcgi是cgi的升级版，它会启动一个master解析php.ini、初始化执行环节，然后启动多个worker直接依次处理多个web server的连接，不用每次都解析php.ini等&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x03-fastcgi工作流程:611254adb271e8e84612e5312ce3c5c5&#34;&gt;0x03 FastCGI工作流程&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;一般情况下，FastCGI的整个工作流程是这样的：&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ol&gt;
&lt;li&gt;Web Server启动时载入FastCGI进程管理器（IIS ISAPI或Apache Module)&lt;/li&gt;
&lt;li&gt;FastCGI进程管理器自身初始化，启动多个CGI解释器进程(可见多个php-cgi)并等待WebServer的连接。&lt;/li&gt;
&lt;li&gt;当客户端请求到达Web Server时，FastCGI进程管理器选择并连接到一个CGI解释器。 Web server将CGI环境变量和标准输入发送到FastCGI子进程php-cgi。&lt;/li&gt;
&lt;li&gt;FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回Web Server。当FastCGI子进程关闭连接时，请求便告处理完成。FastCGI子进程接着等待并处理来自FastCGI进程管理器(运行在Web Server中)的下一个连接。在CGI模式中，php-cgi在此便退出了。&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;0x04-php-fpm:611254adb271e8e84612e5312ce3c5c5&#34;&gt;0x04 PHP-FPM&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;php-fpm就是fastcgi的实现，是一个php fastcgi进程管理器&lt;/li&gt;
&lt;li&gt;php-fpm在php5.2之后默认添加&lt;/li&gt;
&lt;li&gt;千万不要把fastcgi端口对公网暴露&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>iptables简单配置DMZ</title>
      <link>http://wyb0.com/posts/iptables%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AEDMZ/</link>
      <pubDate>Tue, 05 Jul 2016 09:56:35 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/iptables%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AEDMZ/</guid>
      <description>

&lt;h2 id=&#34;要求:048f0b8adabe78f01c35e47696f601c8&#34;&gt;要求&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;内网可以访问外网&lt;/li&gt;
&lt;li&gt;内网可以访问DMZ区&lt;/li&gt;
&lt;li&gt;外网不能访问内网&lt;/li&gt;
&lt;li&gt;外网能访问DMZ区的服务&lt;/li&gt;
&lt;li&gt;DMZ区不能访问内网&lt;/li&gt;
&lt;li&gt;DMZ区不能主动访问外网&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;拓扑:048f0b8adabe78f01c35e47696f601c8&#34;&gt;拓扑&lt;/h2&gt;

&lt;blockquote&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_topology.png&#34; alt=&#34;iptables简单配置DMZ的拓扑.png&#34;&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;h2 id=&#34;个主机ip信息:048f0b8adabe78f01c35e47696f601c8&#34;&gt;个主机IP信息&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;内网网段为：192.168.1.0/24&lt;br /&gt;
DMZ区网段为：172.16.1.0/24

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_ip_info.png&#34; alt=&#34;iptables简单配置DMZ的ip信息.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;iptables的策略:048f0b8adabe78f01c35e47696f601c8&#34;&gt;iptables的策略&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;新建iptables.sh,内容如下：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#!/bin/bash

iptables –F #清空此表中的规则
iptables –X #清空此表中的自定义规则
iptables –Z #清空此表中的计数器为0
iptables -P INPUT DROP
iptables -P OUTPUT DROP
iptables -P FORWARD DROP

iptables -F -t nat
iptables -X -t nat
iptables -Z -t nat
iptables -t nat -P PREROUTING ACCEPT
iptables -t nat -P POSTROUTING ACCEPT
iptables -t nat -P OUTPUT ACCEPT

#添加必要的模块
modprobe ip_nat_ftp
modprobe iptable_nat
modprobe ip_conntrack
modprobe ip_conntrack_ftp
#开启转发功能
echo &amp;quot;1&amp;quot; &amp;gt; /proc/sys/net/ipv4/ip_forward
#********************************************************************
#PREROUTING：
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 80 -j DNAT --to-destination 172.16.1.1
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 21 -j DNAT --to-destination 172.16.1.1
iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 10000:10100 -j DNAT --to-destination 172.16.1.1
iptables -t nat -A PREROUTING -i eth2 -p tcp -d 172.16.1.1 --dport 80 -j DNAT --to-destination 172.16.1.1
iptables -t nat -A PREROUTING -i eth2 -p tcp --dport 80 -j DNAT --to-destination 192.168.2.144
#********************************************************************
#FORWARD：
iptables -A FORWARD -m state --state INVALID -j DROP
iptables -A FORWARD -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i eth0 -o eth1 -m state --state NEW -j ACCEPT
iptables -A FORWARD -i eth2 -o eth0 -m state --state NEW -j ACCEPT
iptables -A FORWARD -i eth2 -o eth1 -m state --state NEW -j ACCEPT
#********************************************************************
#INPUT：
iptables -A INPUT -m state --state INVALID -j DROP
iptables -A INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A INPUT -i lo -j ACCEPT
iptables -A INPUT -i eth0 -p tcp --dport 80 -j ACCEPT
iptables -A INPUT -i eth0 -p tcp –m multiport --dports 20,21 -j ACCEPT
iptables -A INPUT -i eth2 -s 192.168.1.0/24 -j ACCEPT
#********************************************************************
#OUTPUT：
iptables -A OUTPUT -m state --state INVALID -j DROP
iptables -A OUTPUT -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A OUTPUT -o eth1 -p tcp --dport 80 -m state --state NEW -j ACCEPT
iptables -A OUTPUT -o eth1 -p tcp --dport 20 -m state --state NEW -j ACCEPT
iptables -A OUTPUT -o eth1 -p tcp --dport 21 -m state --state NEW -j ACCEPT
iptables -A OUTPUT -o eth1 -p tcp --dport 10000:10100 -m state --state NEW -j ACCEPT
#********************************************************************
#POSTROUTING：
iptables -t nat -A POSTROUTING -o eth0 -s 192.168.1.0/24 -j SNAT --to-source 192.168.2.144
iptables -t nat -A POSTROUTING -o eth0 -s 172.16.1.0/24 -j SNAT --to-source 192.168.2.144
#********************************************************************
service iptables save
service iptables restart
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h2 id=&#34;测试:048f0b8adabe78f01c35e47696f601c8&#34;&gt;测试&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;内网可以访问外网

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_lan_to_internet.png&#34; alt=&#34;内网可以访问外网.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;内网可以访问DMZ

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_lan_to_dmz_www.png&#34; alt=&#34;内网可以访问DMZ的www.png&#34;&gt;
&lt;/div&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_lan_to_dmz_ftp.png&#34; alt=&#34;内网可以访问DMZ的ftp.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;外网不能访问内网

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_internet_not_to_lan.png&#34; alt=&#34;外网不能访问内网.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;外网可以访问DMZ

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_internet_to_dmz_www.png&#34; alt=&#34;外网可以访问DMZ的www.png&#34;&gt;
&lt;/div&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_internet_to_dmz_ftp.png&#34; alt=&#34;外网可以访问DMZ的ftp.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DMZ不能访问内网

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_dmz_not_to_lan.png&#34; alt=&#34;DMZ不能访问内网.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;DMZ不能访问外网

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/iptables_dmz_dmz_not_to_internet.png&#34; alt=&#34;DMZ不能访问外网.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu下使用ShadowSocks</title>
      <link>http://wyb0.com/posts/Ubuntu%E4%B8%8B%E4%BD%BF%E7%94%A8ShadowSocks/</link>
      <pubDate>Mon, 13 Jun 2016 09:14:45 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Ubuntu%E4%B8%8B%E4%BD%BF%E7%94%A8ShadowSocks/</guid>
      <description>

&lt;h4 id=&#34;环境:2a2e8e594b671aec2bafdb3321025e68&#34;&gt;环境：&lt;/h4&gt;

&lt;p&gt;ubuntu14.4&lt;/p&gt;

&lt;h2 id=&#34;安装shadowsocks-qt5:2a2e8e594b671aec2bafdb3321025e68&#34;&gt;安装shadowsocks-qt5&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo add-apt-repository ppa:hzwhuang/ss-qt5（添加源）
sudo apt-get update （更新你的软件库）
sudo apt-get install shadowsocks-qt5 (正式安装)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;配置客户端:2a2e8e594b671aec2bafdb3321025e68&#34;&gt;配置客户端&lt;/h2&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_open_client.png&#34; alt=&#34;打开shadowsocks客户端&#34;&gt;
&lt;/div&gt;



&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_add_config.png&#34; alt=&#34;shadowsocks添加配置&#34;&gt;
&lt;/div&gt;



&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_config.png&#34; alt=&#34;配置shadowsocks&#34;&gt;
&lt;/div&gt;


&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_connection.png&#34; alt=&#34;连接shadowsocks&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;配置火狐:2a2e8e594b671aec2bafdb3321025e68&#34;&gt;配置火狐&lt;/h2&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/firfox_config_agent.png&#34; alt=&#34;火狐配置代理&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;访问youtube:2a2e8e594b671aec2bafdb3321025e68&#34;&gt;访问YouTube&lt;/h2&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_go_youtube.png&#34; alt=&#34;访问YouTube&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>conky配置</title>
      <link>http://wyb0.com/posts/conky%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</link>
      <pubDate>Sat, 04 Jun 2016 20:26:21 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/conky%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/</guid>
      <description>

&lt;h3 id=&#34;0x00-效果:646d257b96363a28a302cc3ac52c48c7&#34;&gt;0x00 效果&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;使用软件conky可以在linux上看到系统的运行状态，效果如下：

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/Conky.png&#34; alt=&#34;conky效果图&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-安装与配置:646d257b96363a28a302cc3ac52c48c7&#34;&gt;0x01 安装与配置&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先安装conky：&lt;br /&gt;
sudo apt-get install conky&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在/home/username/下创建文件.conkyrc&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使conky开机自启&lt;br /&gt;
在/etc/profile最下面添加：/usr/bin/conky &amp;amp;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;0x03-配置文件-conkyrc内容如下:646d257b96363a28a302cc3ac52c48c7&#34;&gt;0x03 配置文件.conkyrc内容如下&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# set to yes if you want Conky to be forked in the background
background no
cpu_avg_samples 2
net_avg_samples 2
out_to_console no
# X font when Xft is disabled, you can pick one with program xfontsel
#font 7x12
#font 6x10
#font 7x13
#font 8x13
#font 7x12
#font *mintsmild.se*
#font -*-*-*-*-*-*-34-*-*-*-*-*-*-*
#font -artwiz-snap-normal-r-normal-*-*-100-*-*-p-*-iso8859-1
# Use Xft?
use_xft yes
# Xft font when Xft is enabled
xftfont Sans:size=11  
own_window_argb_visual yes
#own_window_colour hotpink
# Text alpha when using Xft
xftalpha 0.8
# on_bottom yes
# mail spool
mail_spool $MAIL
# Update interval in seconds
update_interval 1
# Create own window instead of using desktop (required in nautilus)
own_window yes
own_window_transparent yes
own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager
#own_window_type override
own_window_type normal
# Use double buffering (reduces flicker, may not work for everyone)
double_buffer yes
# Minimum size of text area
minimum_size 260 5
maximum_width 400
# Draw shades?
draw_shades no
# Draw outlines?
draw_outline no
# Draw borders around text
draw_borders no
# Stippled borders?
stippled_borders no
# border margins
border_margin 4
# border width
border_width 1
# Default colors and also border colors
default_color white
default_shade_color white
default_outline_color white
# Text alignment, other possible values are commented
#alignment top_left
#minimum_size 10 10
gap_x 10
gap_y 35
alignment top_right
#alignment bottom_left
#alignment bottom_right
# Gap between borders of screen and text
# Add spaces to keep things from moving about?  This only affects
# certain objects.
use_spacer none
# Subtract file system buffers from used memory?
no_buffers yes
# set to yes if you want all text to be in uppercase
uppercase no
# none, xmms, bmp, audacious, infopipe (default is none)
# xmms_player bmp


TEXT
${color red}SYSTEM ${hr 1}
#Time:$alignr${time %Y.%m.%d}$alignc   ${time %H:%M:%S}$alignr   Week:${time %w}
Hostname: $alignr$nodename
Kernel: $alignr$kernel
Machine:$alignr$machine
Uptime: $alignr$uptime
Temp: ${alignr}${acpitemp} °C
Battery:$alignr${battery BAT0}
#Battery:$alignr${battery_percent BAT0}%  
###############
${color green}NETWORK ${hr 1}
IP:${addr eth0}
GateWay:$gw_ip
Down ${downspeed eth0} /s ${alignr}Up ${upspeed eth0} /s
#${downspeedgraph eth0 25,107} ${alignr}${upspeedgraph eth0 25,107}
Total ${totaldown eth0} ${alignr}Total ${totalup eth0}
#############
${color #9932CC}MEMORY ${hr 1}
Ram ${alignr}$mem / $memmax ($memperc%)
${membar 4}
swap ${alignr}$swap / $swapmax ($swapperc%)
${swapbar 4}
Highest MEM $alignr MEM%
${top_mem name 1}$alignr ${top_mem mem 1}
${top_mem name 2}$alignr ${top_mem mem 2}
${top_mem name 3}$alignr ${top_mem mem 3}
##############
${color #ffd700}CPU ${hr 1}
Frequency: ${alignr}${freq dyn} MHz
Processes: ${alignr}$processes ($running_processes running)
Load: ${alignr}$loadavg
CPU1 ${alignr}${cpu cpu1}%
${cpubar 4 cpu1}
CPU2 ${alignr}${cpu cpu2}%
${cpubar 4 cpu2}
Highest CPU $alignr CPU%
${top name 1}$alignr${top cpu 1}
${top name 2}$alignr${top cpu 2}
${top name 3}$alignr${top cpu 3}
##############
${color grey}FILE SYSTEM ${hr 1}
Disk I/O:$diskio
Root: ${alignr}${fs_free /} / ${fs_size /}
${fs_bar 4 /}
Home: ${alignr}${fs_free /home} / ${fs_size /home}
${fs_bar 4 /home}
#############
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>win/ubuntu双系统分区设置</title>
      <link>http://wyb0.com/posts/win&#43;ubuntu%E5%88%86%E5%8C%BA/</link>
      <pubDate>Tue, 31 May 2016 23:35:06 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/win&#43;ubuntu%E5%88%86%E5%8C%BA/</guid>
      <description>

&lt;h2 id=&#34;win10和ubuntu双系统分区设置:3e030af796631eb52143202ed95ab205&#34;&gt;win10和ubuntu双系统分区设置&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;硬盘采用uefi格式&lt;/li&gt;
&lt;li&gt;硬盘首部留400M空间，是FAT16的格式，用来存放win的引导信息&lt;/li&gt;
&lt;li&gt;在硬盘末尾给ubuntu划分50G左右空间&lt;/li&gt;
&lt;li&gt;ubuntu的/分区，格式为ext4，空间为40G&lt;/li&gt;
&lt;li&gt;ubuntu的/home分区，格式为ext4，空间为10G&lt;/li&gt;
&lt;li&gt;ubuntu的/boot分区，格式为ext4,空间为200M&lt;/li&gt;
&lt;li&gt;ubuntu的/swap分区，格式为swap，空间为200M&lt;/li&gt;
&lt;li&gt;ubuntu的引导分区为/boot&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/hard_disk_partition1.png&#34; alt=&#34;双系统磁盘分区&#34;&gt;
&lt;/div&gt;

&amp;nbsp;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/hard_disk_partition2.png&#34; alt=&#34;双系统磁盘分区&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Nessus的安装</title>
      <link>http://wyb0.com/posts/Nessus%E7%9A%84%E5%AE%89%E8%A3%85/</link>
      <pubDate>Wed, 11 May 2016 17:09:10 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Nessus%E7%9A%84%E5%AE%89%E8%A3%85/</guid>
      <description>

&lt;h2 id=&#34;下载nessus的deb安装包:f47fb430295d6aa52337b7e6f9734ca3&#34;&gt;下载Nessus的deb安装包:&lt;/h2&gt;

&lt;p&gt;去【&lt;a href=&#34;http://www.tenable.com/products/nessus/select-your-operating-system&#34;&gt;这里&lt;/a&gt;】，选择家庭版，然后下载对应的安装包

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/Nessus_Home.png&#34; alt=&#34;选择家庭版的nessus&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/select_nessus_deb.png&#34; alt=&#34;选择适合kali的deb安装包&#34;&gt;
&lt;/div&gt;


&lt;h2 id=&#34;本地安装nessus:f47fb430295d6aa52337b7e6f9734ca3&#34;&gt;本地安装nessus:&lt;/h2&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/install_nessus.png&#34; alt=&#34;通过本地deb包安装nessus&#34;&gt;
&lt;/div&gt;


&lt;h2 id=&#34;执行后续安装步骤:f47fb430295d6aa52337b7e6f9734ca3&#34;&gt;执行后续安装步骤:&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;启动nessus

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/start_nessus.png&#34; alt=&#34;启动nessus&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;web访问nessus服务

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/web_nessus.png&#34; alt=&#34;通过web访问https://localhost:8834&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;设置账户和密码

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/setaccount.png&#34; alt=&#34;设置nessus登陆帐号和密码&#34;&gt;
&lt;/div&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/code.png&#34; alt=&#34;被要求输入code&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;申请code，可以在【&lt;a href=&#34;http://www.tenable.com/products/nessus-home&#34;&gt;这里&lt;/a&gt;】申请

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/register_code.png&#34; alt=&#34;申请一个code&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;去邮箱查找code

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/get_code.png&#34; alt=&#34;去邮箱查看code&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将code填入，然后等待插件的下载

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/input_code.png&#34; alt=&#34;输入code&#34;&gt;
&lt;/div&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/wait_download.png&#34; alt=&#34;等插件的下载安装&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;登陆nessus:f47fb430295d6aa52337b7e6f9734ca3&#34;&gt;登陆Nessus:&lt;/h2&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sign_in_nessus1.png&#34; alt=&#34;登陆nessus1&#34;&gt;
&lt;/div&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sign_in_nessus2.png&#34; alt=&#34;登陆nessus2&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu下安装sublime text 3</title>
      <link>http://wyb0.com/posts/Ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85sublime_text3/</link>
      <pubDate>Sun, 08 May 2016 00:04:42 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Ubuntu%E4%B8%8B%E5%AE%89%E8%A3%85sublime_text3/</guid>
      <description>

&lt;h4 id=&#34;环境:f2b5994137532c467d26c4afc116aa08&#34;&gt;环境：&lt;/h4&gt;

&lt;p&gt;ubuntu14.4&lt;/p&gt;

&lt;h2 id=&#34;安装:f2b5994137532c467d26c4afc116aa08&#34;&gt;安装&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;添加Sublime Text 3的仓库&lt;br /&gt;
sudo add-apt-repository ppa:webupd8team/sublime-text-3&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;更新软件库&lt;br /&gt;
sudo apt-get update&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装Sublime Text 3&lt;br /&gt;
sudo apt-get install sublime-text-installer&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;解决不能输入中文的问题:f2b5994137532c467d26c4afc116aa08&#34;&gt;解决不能输入中文的问题&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建sublime_imfix.c(位于～目录)，写入如下内容&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;gtk/gtkimcontext.h&amp;gt;
void gtk_im_context_set_client_window (GtkIMContext *context,GdkWindow  *window)
{
GtkIMContextClass *klass;
g_return_if_fail (GTK_IS_IM_CONTEXT (context));
klass = GTK_IM_CONTEXT_GET_CLASS (context);
if (klass-&amp;gt;set_client_window)
klass-&amp;gt;set_client_window (context, window);
g_object_set_data(G_OBJECT(context),&amp;quot;window&amp;quot;,window);
if(!GDK_IS_WINDOW (window))
return;
int width = gdk_window_get_width(window);
int height = gdk_window_get_height(window);
if(width != 0 &amp;amp;&amp;amp; height !=0)
gtk_im_context_focus_in(context);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将上一步的代码编译成共享库libsublime-imfix.so&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~  
sudo apt-get install gtk+-2.0  
gcc -shared -o libsublime-imfix.so sublime_imfix.c  `pkg-config --libs --cflags gtk+-2.0` -fPIC
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将libsublime-imfix.so拷贝到sublime_text所在文件夹&lt;br /&gt;
&lt;code&gt;sudo mv libsublime-imfix.so /opt/sublime_text/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改文件/usr/bin/subl的内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /usr/bin/subl  
将  
#!/bin/sh  
exec /opt/sublime_text/sublime_text &amp;quot;$@&amp;quot;  
修改为  
#!/bin/sh  
LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text &amp;quot;$@&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用鼠标右键打开文件时能够使用中文输入&lt;br /&gt;
sudo vim /usr/share/applications/sublime_text.desktop&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;将[Desktop Entry]中的字符串  
Exec=/opt/sublime_text/sublime_text %F  
修改为  
Exec=bash -c &amp;quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text %F&amp;quot;  


将[Desktop Action Window]中的字符串  
Exec=/opt/sublime_text/sublime_text -n  
修改为  
Exec=bash -c &amp;quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text -n&amp;quot;  


将[Desktop Action Document]中的字符串  
Exec=/opt/sublime_text/sublime_text --command new_file  
修改为  
Exec=bash -c &amp;quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text --command new_file&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;插件:f2b5994137532c467d26c4afc116aa08&#34;&gt;插件&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;|Anaconda|ConvertToUTF8|Emmet|&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu初接触(包括搭建LAMP)</title>
      <link>http://wyb0.com/posts/Ubuntu%E5%88%9D%E6%8E%A5%E8%A7%A6/</link>
      <pubDate>Sat, 07 May 2016 21:37:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Ubuntu%E5%88%9D%E6%8E%A5%E8%A7%A6/</guid>
      <description>

&lt;p&gt;我是在虚拟机中安装14.04.4版的ubuntu：
下载地址：&lt;a href=&#34;http://mirrors.163.com/ubuntu-releases/14.04.4/ubuntu-14.04.4-desktop-amd64.iso&#34;&gt;http://mirrors.163.com/ubuntu-releases/14.04.4/ubuntu-14.04.4-desktop-amd64.iso&lt;/a&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h2 id=&#34;1-配源或选择最快的更新服务器:1636a7d87e0e53b76e78b5e173fae0b5&#34;&gt;1.配源或选择最快的更新服务器&lt;/h2&gt;

&lt;p&gt;选择最快的更新服务器:&lt;br /&gt;
    System Settings &amp;ndash;&amp;gt; Software &amp;amp; Updates &amp;ndash;&amp;gt; Download from:other &amp;ndash;&amp;gt; Select Best Server &amp;ndash;&amp;gt; Choose Serve &amp;ndash;&amp;gt; Close&lt;/p&gt;

&lt;p&gt;配源:&lt;br /&gt;
    reber@ubuntu:~$ cp /etc/apt/sources.list /etc/apt/sources.list.bak&lt;br /&gt;
    reber@ubuntu:~$ vim /etc/apt/sources.list&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;中科大源：
deb http://debian.ustc.edu.cn/ubuntu/ trusty main restricted universe multiverse
deb http://debian.ustc.edu.cn/ubuntu/ trusty-security main restricted universe multiverse
deb http://debian.ustc.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse
deb http://debian.ustc.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse
deb http://debian.ustc.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse
deb-src http://debian.ustc.edu.cn/ubuntu/ trusty main restricted universe multiverse
deb-src http://debian.ustc.edu.cn/ubuntu/ trusty-security main restricted universe multiverse
deb-src http://debian.ustc.edu.cn/ubuntu/ trusty-updates main restricted universe multiverse
deb-src http://debian.ustc.edu.cn/ubuntu/ trusty-proposed main restricted universe multiverse
deb-src http://debian.ustc.edu.cn/ubuntu/ trusty-backports main restricted universe multiverse

阿里源：
deb http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ trusty-security main multiverse restricted universe
deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main multiverse restricted universe
deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main multiverse restricted universe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;reber@ubuntu:~$ sudo apt-get update&lt;/p&gt;

&lt;h2 id=&#34;2-简单配置:1636a7d87e0e53b76e78b5e173fae0b5&#34;&gt;2.简单配置&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;$ sudo apt-get install open-vm-tools-desktop fuse
$ sudo apt-get install vim
$ sudo apt-get install nautilus-open-terminal  #注销,再次登陆即可任意地方右键打开终端
$ vim /etc/default/apport   #更改enabled=0可解决开机总是提示有错误
$ vim ~/.bashrc  #添加alias c=&#39;clear&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;3-安装输入法:1636a7d87e0e53b76e78b5e173fae0b5&#34;&gt;3.安装输入法&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;apt-get -f install可解决依赖问题
reber@ubuntu:~$ apt-get install ibus-sunpinyin   #安装后重启系统
进入设置：system setting-&amp;gt;text entry-&amp;gt;添加sunpinyin
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;4-配置apache-mysql-php:1636a7d87e0e53b76e78b5e173fae0b5&#34;&gt;4.配置Apache/MySQL/PHP&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;sudo apt-get install apache2
sudo apt-get install mysql-client mysql-server
sudo apt-get install php5
sudo apt-get install php5-gd php5-mysql
sudo apt-get install libapache2-mod-php5
sudo apt-get install libapache2-mod-auth-mysql 
sudo chmod 777 /var/www   #为了方便


解决乱码问题：
apache：sudo vim /etc/apache2/apache2.conf
    最后添加AddDefaultCharset UTF-8
mysql：编辑数据库配置文件
    在[client]下面添加：
        default-character-set=utf8
    在[mysqld]在下面添加
        character_set_server=utf8

测试数据库连接：
编辑mysql_test.php代码如下：
&amp;lt;?php
    $link = mysql_connect(&amp;quot;localhost&amp;quot;, &amp;quot;root&amp;quot;, &amp;quot;password&amp;quot;);
    if(!$link)
        die(&#39;Could not connect: &#39; . mysql_error());
    else
        echo &amp;quot;Mysql 配置正确!&amp;quot;;
    mysql_close($link);
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;5-管理开机自启:1636a7d87e0e53b76e78b5e173fae0b5&#34;&gt;5.管理开机自启&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;ubuntu管理软件自启一般用rcconf：sudo apt-get install rcconf
ubuntu添加mysql自启可以在/etc/rc.local添加/etc/init.d/mysql start
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;6-调时间:1636a7d87e0e53b76e78b5e173fae0b5&#34;&gt;6.调时间&lt;/h2&gt;
</description>
    </item>
    
    <item>
      <title>Linux之文本处理软件awk</title>
      <link>http://wyb0.com/posts/Linux%E4%B9%8B%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E8%BD%AF%E4%BB%B6awk/</link>
      <pubDate>Wed, 20 Apr 2016 15:54:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B9%8B%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86%E8%BD%AF%E4%BB%B6awk/</guid>
      <description>

&lt;p&gt;&lt;center&gt;
awk默认是以行为单位处理文本的，对test.txt中的每一行都执行后面 &amp;ldquo;{ }&amp;rdquo; 中的语句。
&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;若有一个需要重新格式化的字典test.txt(用户名、密码、地址)：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xiaosan sadasdw jiaozuo
234wer  asdfasd asdas
1111    aaaa    cccc
2222    aaaa    degd
1111    aaaa    cccc
3333    aaaa    dfger
21asd   sdfsd   sadasd
dwqx    asds    sasdfcv
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;要求：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.里面有重复数据，使用命令去重
2.提取出用户名和密码 每一行前面加上id数字，递增。
3.只提取出密码作为爆破字典
4.某些公司都是一个公司前缀+姓名简写，所以为用户名一栏全部改为uv_用户名
5.提取出密码一列，有些密码爆破成功率高，所以增加一列，标出密码出现次数
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;去重:42bebd4d9e7287de331693a6d85c474f&#34;&gt;去重：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39;
[wyb@localhost ~]$ cat test.txt | uniq //作用和上面命令相同
aosan sadasdw jiaozuo
234wer  asdfasd asdas
1111    aaaa    cccc
2222    aaaa    degd
3333    aaaa    dfger
21asd   sdfsd   sadasd
dwqx    asds    sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重-添加id:42bebd4d9e7287de331693a6d85c474f&#34;&gt;去重、添加id：&lt;/h2&gt;

&lt;p&gt;一般字典不需要id、user、pass等标示符，这里只是为了便于观看&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;id:&amp;quot;NR&amp;quot;\tuser:&amp;quot;$1&amp;quot;\tpass:&amp;quot;$2&amp;quot;\taddress:&amp;quot;$3}&#39; | column -t  //最后一个命令可以将列对齐
id:1    user:aosan      pass:sadasdw    address:jiaozuo
id:2    user:234wer     pass:asdfasd    address:asdas
id:3    user:1111       pass:aaaa       address:cccc
id:4    user:2222       pass:aaaa       address:degd
id:5    user:3333       pass:aaaa       address:dfger
id:6    user:21asd      pass:sdfsd      address:sadasd
id:7    user:dwqx       pass:asds       address:sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重-添加id-添加公司前缀:42bebd4d9e7287de331693a6d85c474f&#34;&gt;去重、添加id、添加公司前缀：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;id:&amp;quot;NR&amp;quot;\tuser:uv_&amp;quot;$1&amp;quot;\tpass:&amp;quot;$2&amp;quot;\taddress:&amp;quot;$3}&#39;
id:1    user:uv_aosan   pass:sadasdw    address:jiaozuo
id:2    user:uv_234wer  pass:asdfasd    address:asdas
id:3    user:uv_1111    pass:aaaa       address:cccc
id:4    user:uv_2222    pass:aaaa       address:degd
id:5    user:uv_3333    pass:aaaa       address:dfger
id:6    user:uv_21asd   pass:sdfsd      address:sadasd
id:7    user:uv_dwqx    pass:asds       address:sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重然后输出密码:42bebd4d9e7287de331693a6d85c474f&#34;&gt;去重然后输出密码：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;pass:&amp;quot;$2}&#39;
pass:sadasdw
pass:asdfasd
pass:aaaa
pass:aaaa
pass:aaaa
pass:sdfsd
pass:asds
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;输出密码-得到密码出现次数:42bebd4d9e7287de331693a6d85c474f&#34;&gt;输出密码、得到密码出现次数：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;下面的&#39;a[$1]++&#39;是按第一列来去重的,若有两条数据只有第一列重复则成功，可以用$0按行来去重
[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print $2}&#39; | awk &#39;{a[$1]++} END {for (j in a) print a[j],j}&#39;
1 sadasdw
1 sdfsd
1 asdfasd
1 asds
3 aaaa

uniq 只能去除挨着的重复数据，所以先sort升序排序，然后uniq -c统计重复，再sort -r降序排序
cat test.txt | awk &#39;{print $2}&#39; | sed &#39;1d&#39; |sort | uniq -c |sort -r
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;其他:42bebd4d9e7287de331693a6d85c474f&#34;&gt;其他：&lt;/h2&gt;

&lt;h4 id=&#34;对-a-1-的解释如下:42bebd4d9e7287de331693a6d85c474f&#34;&gt;对&amp;rsquo;!a[$1]++&amp;lsquo;的解释如下：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;a[e54r56wer]为空，!a[e54r56wer]为真，可以输出，然后++&lt;/li&gt;
&lt;li&gt;若再来一个a[e54r56wer]，因为上一步已经++，此时值为1，!a[e54r56wer]为假，不输出，再++&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;对for输出数组的解释如下:42bebd4d9e7287de331693a6d85c474f&#34;&gt;对for输出数组的解释如下：&lt;/h4&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;awk &amp;lsquo;{a[$1]++} END {for (j in a) print a[j],j}&amp;rsquo; test.txt&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在遍历完文件后，通过END把后面的句子连起来&lt;/li&gt;
&lt;li&gt;for (j in a) 是指打印数组a的下标，并定义下标为变量j&lt;/li&gt;
&lt;li&gt;最后print a[j],j就是打印数组下标和数组，这样就相同的$1排重并计数&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux之文本处理</title>
      <link>http://wyb0.com/posts/Linux%E4%B9%8B%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/</link>
      <pubDate>Wed, 20 Apr 2016 07:58:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B9%8B%E6%96%87%E6%9C%AC%E5%A4%84%E7%90%86/</guid>
      <description>

&lt;p&gt;这里介绍3种方式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;==&amp;gt;awk  
==&amp;gt;grep  
==&amp;gt;sed
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;awk处理文本-最常用:007bb002f88c52764f350befc73a2d85&#34;&gt;awk处理文本(&lt;em&gt;最常用&lt;/em&gt;)：&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;作用：awk对数据以行分析并生成报告时显得很强大，它将行进行切片，再处理分开的切片，可对格式化的数据重新进行格式化&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;awk命令格式：awk [F filed-separator] &amp;lsquo;commands&amp;rsquo; input-fiel(s)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;参数-F：可以添加任意的分割符，比较重要&lt;br /&gt;
awk工作流程是这样的：&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;读入有&amp;rsquo;\n&amp;rsquo;换行符分割的一条记录，然后将记录按-F指定的域分隔符划分域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是&amp;rdquo;空白键&amp;rdquo; 或 &amp;ldquo;[tab]键&amp;rdquo;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;1-入门示例:007bb002f88c52764f350befc73a2d85&#34;&gt;1. 入门示例：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost temp]$ head -n 5 /etc/passwd
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
[wyb@localhost temp]$ head -n 5 /etc/passwd | awk -F &#39;:&#39; &#39;{print $1}&#39;  //输出第1列，域分隔符为：
root
bin
daemon
adm
lp
[wyb@localhost temp]$ head -n 5 /etc/passwd | awk -F &#39;:&#39;  &#39;{pri
nt &amp;quot;id:&amp;quot;$1&amp;quot;\tshell:&amp;quot;$7}&#39;    //输出第1、7列且给予列名
id:root shell:/bin/bash
id:bin  shell:/sbin/nologin
id:daemon       shell:/sbin/nologin
id:adm  shell:/sbin/nologin
id:lp   shell:/sbin/nologin
[wyb@localhost temp]$ head -n 5 /etc/passwd | awk -F &#39;:&#39;  &#39;BEGIN {print &amp;quot;====begin=====&amp;quot;} {print &amp;quot;id:&amp;quot;$1&amp;quot;\tshell:&amp;quot;$7} END {print &amp;quot;====end====&amp;quot;}&#39;
====begin=====
id:root shell:/bin/bash
id:bin  shell:/sbin/nologin
id:daemon       shell:/sbin/nologin
id:adm  shell:/sbin/nologin
id:lp   shell:/sbin/nologin
====end====
[wyb@localhost temp]$ awk -F: &#39;/root/&#39; /etc/passwd  //搜索含有root关键字的所有行
root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin
[wyb@localhost temp]$ awk -F: &#39;/root/{print $7}&#39; /etc/passwd    //匹配root并输出对应shell
/bin/bash
/sbin/nologin
[wyb@localhost temp]$ awk -F: &#39;/^root/&#39; /etc/passwd //匹配以root开头的行
root:x:0:0:root:/root:/bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-内置变量:007bb002f88c52764f350befc73a2d85&#34;&gt;2. 内置变量：&lt;/h3&gt;

&lt;table&gt;
    &lt;tr&gt;
        &lt;td bgcolor=black&gt;
ARGC&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令行参数个数&lt;br/&gt;
ARGV&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令行参数排列&lt;br/&gt;
ENVIRON&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;支持队列中系统环境变量的使用&lt;br/&gt;
FILENAME&amp;nbsp;&amp;nbsp;&amp;nbsp;awk浏览的文件名&lt;br/&gt;
FNR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览文件的记录数&lt;br/&gt;
FS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;设置输入域分隔符，等价于命令行 -F选项&lt;br/&gt;
NF&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览记录的域的个数&lt;br/&gt;
NR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;已读的记录数&lt;br/&gt;
OFS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出域分隔符&lt;br/&gt;
ORS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出记录分隔符&lt;br/&gt;
RS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;控制记录分隔符
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost temp]$ awk -F: &#39;{print &amp;quot;filename:&amp;quot; FILENAME &amp;quot;,linenumber:&amp;quot; NR &amp;quot;,columns:&amp;quot; NF &amp;quot;,linecontent:&amp;quot;$0}&#39; a.txt
filename:a.txt,linenumber:1,columns:1,linecontent:1     root    12sf34s56
filename:a.txt,linenumber:2,columns:1,linecontent:2     admin   ksdjfiweurf
filename:a.txt,linenumber:3,columns:1,linecontent:3     dome    skd89453
filename:a.txt,linenumber:4,columns:1,linecontent:4     tomkd   3jkke34
filename:a.txt,linenumber:5,columns:1,linecontent:5     jarry   sdkj89ry4
filename:a.txt,linenumber:6,columns:1,linecontent:6     canki   sdkj834
filename:a.txt,linenumber:7,columns:1,linecontent:7     lola    er8f7734
filename:a.txt,linenumber:8,columns:1,linecontent:8     marry   j8jkf78
filename:a.txt,linenumber:9,columns:1,linecontent:9     candy   kd89943
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-awk编程:007bb002f88c52764f350befc73a2d85&#34;&gt;3. awk编程：&lt;/h3&gt;

&lt;h5 id=&#34;3-1-变量和赋值:007bb002f88c52764f350befc73a2d85&#34;&gt;3.1 变量和赋值：&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost temp]$ head -n 5 /etc/passwd | awk -F &#39;:&#39;  &#39;BEGIN {count=0} {count++; print &amp;quot;username:&amp;quot;$1} END {print &amp;quot;count:&amp;quot;count}&#39;
username:root
username:bin
username:daemon
username:adm
username:lp
count:5
[wyb@localhost ~]$ ls -l aaa/ettercap-0.8.2 | awk &#39;BEGIN {size=0;} {size=size+5;} END {print &amp;quot;[end]size is:&amp;quot;,size,&amp;quot;byte&amp;quot;}&#39;
[end]size is: 160 byte
[wyb@localhost ~]$ ls -l aaa/ettercap-0.8.2 | awk &#39;BEGIN {size=0;} {size=size+5;} END {print &amp;quot;[end]size is:&amp;quot;,size/1024/1024,&amp;quot;M&amp;quot;}&#39;
[end]size is: 0.000152588 M
[wyb@localhost ~]$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-2条件语句:007bb002f88c52764f350befc73a2d85&#34;&gt;3.2条件语句：&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ head -n 6 /etc/passwd | awk -F &#39;:&#39; &#39;{if($1==&amp;quot;root&amp;quot;) print &amp;quot;root bash is:&amp;quot;$7}&#39;
root bash is:/bin/bash
[wyb@localhost ~]$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;grep处理文本:007bb002f88c52764f350befc73a2d85&#34;&gt;Grep处理文本：&lt;/h2&gt;

&lt;p&gt;匹配到时输出一行
常用参数：nrABC
&lt;table&gt;
    &lt;tr&gt;
        &lt;td bgcolor=black&gt;
-n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出匹配到的字符串所在行数&lt;br/&gt;
-r&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;遍历子目录文件查找字符串&lt;br/&gt;
-A 3&amp;nbsp;&amp;nbsp;显示匹配行及下面3行&lt;br/&gt;
-B 4&amp;nbsp;&amp;nbsp;显示匹配行及上面4行&lt;br/&gt;
-C 4&amp;nbsp;&amp;nbsp;显示匹配行及上下4行&lt;br/&gt;
-i&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;不区分大小写&lt;br/&gt;
-v&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;显示所有不包含字符的行
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ grep root /etc/passwd    //查找root这个字符
root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin
[wyb@localhost ~]$ grep -n root /etc/passwd //查找root字符串并输出所在行数
1:root:x:0:0:root:/root:/bin/bash
11:operator:x:11:0:operator:/root:/sbin/nologin
[wyb@localhost ~]$ grep -n root /etc/passwd --color //给字符串不同颜色
1:root:x:0:0:root:/root:/bin/bash
11:operator:x:11:0:operator:/root:/sbin/nologin
[wyb@localhost temp]$ ls
aa  b.txt
[wyb@localhost temp]$ grep -r -n root /home/wyb/temp/ --color   在temp目录及子目录查找字符串root
/home/wyb/temp/b.txt:4:sdkrootwe
/home/wyb/temp/b.txt:6:fsdkfjroot
/home/wyb/temp/b.txt:9:root
/home/wyb/temp/aa/a.txt:1:1     root    12sf34s56
[wyb@localhost temp]$ grep -r -n &amp;quot;^root&amp;quot; /etc/passwd --color    正则查找字符串root
1:root:x:0:0:root:/root:/bin/bash
[wyb@localhost temp]$ grep -r -n &amp;quot;root&amp;quot; /etc/passwd --color -c  匹配的行的数
2
[wyb@localhost temp]$ ps aux | grep &amp;quot;^wyb&amp;quot;
wyb        2185  0.0  0.1  99952  1840 ?        S    16:33   0:02 sshd: wyb@pts/0  
wyb        2186  0.0  0.1 108464  1944 pts/0    Ss   16:33   0:00 -bash
wyb        3229  2.0  0.1 110232  1136 pts/0    R+   18:27   0:00 ps aux
wyb        3230  0.0  0.0 103244   828 pts/0    S+   18:27   0:00 grep ^wyb
[wyb@localhost temp]$ ps aux | grep ora
wyb        3233  0.0  0.0 103244   828 pts/0    S+   18:28   0:00 grep ora
[wyb@localhost temp]$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sed处理文本:007bb002f88c52764f350befc73a2d85&#34;&gt;sed处理文本&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;处理大文本很好用，上几十万、上百万行的数据&lt;/li&gt;
&lt;li&gt;sed主要以行为单位，可以将数据行进行替换、删除、新增、选取等&lt;/li&gt;
&lt;li&gt;sed语法 参数 动作 文件&lt;/li&gt;
&lt;li&gt;-n只把匹配到的输出&lt;/li&gt;

&lt;li&gt;&lt;p&gt;主要参数是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a 在下面插入数据&lt;/li&gt;
&lt;li&gt;d 删除&lt;/li&gt;
&lt;li&gt;i 在上面插入数据&lt;/li&gt;
&lt;li&gt;p 输出数据&lt;/li&gt;
&lt;li&gt;c 替换字符串，后面可跟字符串，字符串替换n1到n2之间的行&lt;br/&gt;
s 替换字符串，通常搭配正则&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;字符的删除&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ nl a.txt | sed &#39;3,8d&#39;   //不输出3-8行
     1  1     root      12sf34s56
     2  2     admin     ksdjfiweurf
     9  9     candy     kd89943
[wyb@localhost aa]$ nl a.txt | sed &#39;3,$d&#39;   //从第三行删到最后一行
     1  1     root      12sf34s56
     2  2     admin     ksdjfiweurf
[wyb@localhost aa]$ nl a.txt | sed &#39;/root/d&#39;    //正则删除带root的行
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
     5  5     jarry     sdkj89ry4
     6  6     canki     sdkj834
     7  7     lola      er8f7734
     8  8     marry     j8jkf78
     9  9     candy     kd89943
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;a插入字符&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ nl a.txt | sed &#39;2a aaaaaa&#39; | head -n 5  //在第二行下面插入一行字符串aaaaaa
     1  1     root      12sf34s56
     2  2     admin     ksdjfiweurf
aaaaaa
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
[wyb@localhost aa]$ nl a.txt | sed &#39;2i aaaaaa&#39; | head -n 5  //在第二行上面插入一行字符串aaaaaa
     1  1     root      12sf34s56
aaaaaa
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
[wyb@localhost aa]$ nl a.txt | sed &#39;2i aaaaaa \     //增加多行用\
bbbbb\
ccccc\
dddddd&#39; | head -n 7
     1  1     root      12sf34s56
aaaaaa 
bbbbb
ccccc
dddddd
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;p输出字符&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ nl a.txt | sed &#39;2,5p&#39;
     1  1     root      12sf34s56
     2  2     admin     ksdjfiweurf
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
     4  4     tomkd     3jkke34
     5  5     jarry     sdkj89ry4
     5  5     jarry     sdkj89ry4
     6  6     canki     sdkj834
     7  7     lola      er8f7734
     8  8     marry     j8jkf78
     9  9     candy     kd89943
[wyb@localhost aa]$ nl a.txt | sed -n &#39;2,5p&#39;    //加-n去除其余行
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
     5  5     jarry     sdkj89ry4
[wyb@localhost aa]$ nl a.txt | sed -n &#39;/root/p&#39; //正则匹配root
     1  1     root      12sf34s56
[wyb@localhost bbb]$ nl /etc/passwd | sed -n &#39;/root/{s/root/111111/;p}&#39;查找root，然后将行中的第一个root替换为abcdefg  -n代表不输出所有的
     1  111111:x:0:0:root:/root:/bin/bash
    11  operator:x:11:0:operator:/111111:/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;c和s替换字符&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ nl a.txt | sed &#39;2,5c aaaaaa&#39;    //将第2-5行替换
     1  1     root      12sf34s56
aaaaaa
     6  6     canki     sdkj834
     7  7     lola      er8f7734
     8  8     marry     j8jkf78
     9  9     candy     kd89943
[wyb@localhost aa]$ nl /etc/passwd | sed -n &#39;/root/{s/root/1111/g;p}&#39;查找root，然后将全局的root替换为1111
     1  1111:x:0:0:1111:/1111:/bin/bash
    11  operator:x:11:0:operator:/1111:/sbin/nologin
[wyb@localhost aa]$ nl /etc/passwd | sed -n &#39;1,3{s/root/1111/g;p}&#39;前五行查找root，然后将全局的root替换为1111
     1  1111:x:0:0:1111:/1111:/bin/bash
     2  bin:x:1:1:bin:/bin:/sbin/nologin
     3  daemon:x:2:2:daemon:/sbin:/sbin/nologin
[wyb@localhost aa]$ nl /etc/passwd | sed -n &#39;1,5{s/root/1111/g;p;q}&#39;前五行查找root，然后将整行的root替换为1111,查找到一个就退出
     1  1111:x:0:0:1111:/1111:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;实例&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ ifconfig eth0
eth0      Link encap:Ethernet  HWaddr 00:0C:29:56:B4:10  
          inet addr:192.168.63.131  Bcast:192.168.63.255  Mask:255.255.255.0
          inet6 addr: fe80::20c:29ff:fe56:b410/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:11732 errors:0 dropped:0 overruns:0 frame:0
          TX packets:7223 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:1148256 (1.0 MiB)  TX bytes:1192150 (1.1 MiB)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ ifconfig eth0 | grep &#39;inet add&#39; 
          inet addr:192.168.63.131  Bcast:192.168.63.255  Mask:255.255.255.0
[wyb@localhost aa]$ ifconfig eth0 | grep &#39;inet add&#39; | sed &#39;s/Bcast.*$//g&#39;
          inet addr:192.168.63.131  
[wyb@localhost aa]$ 


[wyb@localhost aa]$ nl /etc/passwd | sed &#39;3,$d&#39;
     1  root:x:0:0:root:/root:/bin/bash
     2  bin:x:1:1:bin:/bin:/sbin/nologin
[wyb@localhost aa]$ nl /etc/passwd | sed &#39;3,$d&#39; | sed -n &#39;s/bash/buleshell/p&#39;
     1  root:x:0:0:root:/root:/bin/buleshell


[wyb@localhost aa]$ nl /etc/passwd | sed -e &#39;3,$d&#39; -e &#39;s/bash/buleshell/p&#39;
     1  root:x:0:0:root:/root:/bin/buleshell
     1  root:x:0:0:root:/root:/bin/buleshell
     2  bin:x:1:1:bin:/bin:/sbin/nologin
[wyb@localhost aa]$ 


[wyb@localhost aa]$ nl /etc/passwd | sed -e &#39;3,$d&#39; -e &#39;s/bash/buleshell/p&#39;
     1  root:x:0:0:root:/root:/bin/buleshell
     1  root:x:0:0:root:/root:/bin/buleshell
     2  bin:x:1:1:bin:/bin:/sbin/nologin
[wyb@localhost aa]$ nl /etc/passwd | sed -e &#39;3,$d&#39; -e &#39;s/bash/buleshell/p&#39; &amp;gt; test.txt
[wyb@localhost aa]$ cat test.txt 
     1  root:x:0:0:root:/root:/bin/buleshell
     1  root:x:0:0:root:/root:/bin/buleshell
     2  bin:x:1:1:bin:/bin:/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux之tar</title>
      <link>http://wyb0.com/posts/Linux%E4%B9%8B%E5%8E%8B%E7%BC%A9%E8%BD%AF%E4%BB%B6/</link>
      <pubDate>Tue, 19 Apr 2016 21:30:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B9%8B%E5%8E%8B%E7%BC%A9%E8%BD%AF%E4%BB%B6/</guid>
      <description>

&lt;h3 id=&#34;tar主要参数:8a1d6da71f5001f41baab34e82b27f5e&#34;&gt;tar主要参数：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;-c  创建一个新的压缩文件
-x  解压
-t  查看压缩文件的内容
-f  指定档案文件的名字
-v  显示过程信息
-r  增加文件到指定的包
-C  指定解压后的路径
-z  使用gzip
-j  使用bzip2
-Z  使用compress
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;tar示例:8a1d6da71f5001f41baab34e82b27f5e&#34;&gt;tar示例：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost temp]$ ls
aaa
[wyb@localhost temp]$ tar -cvf 1.tar aaa/   *打包不压缩*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]$ tar -zcvf 1.tar.gz aaa/   *打包且以gzip压缩*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]$ tar -jcvf 1.tar.bz2 aaa/  *打包且以bzip2压缩*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]tar -zxvf aa.tar.gz /home/aaa --exclude=dir  //排除目录
[wyb@localhost temp]$ ls -l
total 24
-rw-r--r--. 1 wyb root 10240 Apr 19 07:47 1.tar
-rw-r--r--. 1 wyb root   265 Apr 19 07:48 1.tar.bz2
-rw-r--r--. 1 wyb root   253 Apr 19 07:48 1.tar.gz
drwxr-xr-x. 2 wyb root  4096 Apr 19 07:22 aaa
[wyb@localhost temp]$ file 1.tar.gz     *查看文件类型*
1.tar.gz: gzip compressed data, from Unix, last modified: Tue Apr 19 07:48:01 2016
[wyb@localhost temp]$ tar -ztvf 1.tar.gz    *查看压缩包内容*
drwxr-xr-x wyb/root          0 2016-04-19 07:22 aaa/
-rw-r--r-- wyb/root          0 2016-04-19 05:05 aaa/b.txt
-rw-r--r-- wyb/root          0 2016-04-19 05:05 aaa/c.txt
-rw-r--r-- wyb/root         84 2016-04-19 05:50 aaa/test.txt
-rw-r--r-- wyb/root          0 2016-04-19 05:05 aaa/a.txt
[wyb@localhost temp]$ ls
1.tar  1.tar.bz2  1.tar.gz  aaa
[wyb@localhost temp]$ rm -rf aaa/
[wyb@localhost temp]$ ls
1.tar  1.tar.bz2  1.tar.gz
[wyb@localhost temp]$ tar -zxvf 1.tar.gz    *解压到当前目录*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]$ ls
1.tar  1.tar.bz2  1.tar.gz  aaa
[wyb@localhost temp]$ ls aaa/
a.txt  b.txt  c.txt  test.txt
[wyb@localhost temp]$ ls /tmp/
111.txt  aa
[wyb@localhost temp]$ tar -zxvf 1.tar.gz -C /tmp/aa *解压到指定路径*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;zip:8a1d6da71f5001f41baab34e82b27f5e&#34;&gt;zip：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[reber@localhost ~]$ ls aaa/
a.txt  b.txt  c.txt
[reber@localhost ~]$ zip -re aaa.zip aaa/   //加密压缩
Enter password: 
Verify password: 
  adding: aaa/ (stored 0%)
  adding: aaa/b.txt (stored 0%)
  adding: aaa/c.txt (stored 0%)
  adding: aaa/a.txt (stored 0%)
[reber@localhost ~]$ rm aaa/*
[reber@localhost ~]$ ls aaa/
[reber@localhost ~]$ unzip aaa.zip   //解压缩
Archive:  aaa.zip
[aaa.zip] aaa/b.txt password: 
 extracting: aaa/b.txt         
 extracting: aaa/c.txt               
 extracting: aaa/a.txt   
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux之安装ettercap</title>
      <link>http://wyb0.com/posts/Linux%E4%B9%8B%E5%AE%89%E8%A3%85ettercap/</link>
      <pubDate>Tue, 19 Apr 2016 20:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B9%8B%E5%AE%89%E8%A3%85ettercap/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;操作系统：CentOS&lt;br /&gt;
首先，ettercap安装时需要4个依赖包，而且安装包里面也已经提供了&lt;br /&gt;
执行：sudo yum groupinstall &amp;ldquo;Development tools&amp;rdquo;    &lt;em&gt;源码安装软件就需要安装这个&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;一-下载解压:34c81a6ef52c6fc9b50ea74b9a01b394&#34;&gt;一、下载解压&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;可用wget下载&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;二-查看需要的依赖项:34c81a6ef52c6fc9b50ea74b9a01b394&#34;&gt;二、查看需要的依赖项&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost ettercap-0.8.2]$ vim INSTALL

 #### Bundled libraries  
 Ettercap now bundles the following libraries with the source distribution:  
   libnet 1.1.6  
   curl 7.41.0  
   luajit 2.0.3  
   check 0.9.14  
[wyb@localhost ettercap-0.8.2]$ cd bundled_deps/  
[wyb@localhost bundled_deps]$ ls  
check  curl  libnet  luajit
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;三-安装依赖包:34c81a6ef52c6fc9b50ea74b9a01b394&#34;&gt;三、安装依赖包&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装check&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost check]$ cd check-0.9.14
[wyb@localhost check-0.9.14]$ ls
[wyb@localhost check-0.9.14]$ ./configure 
[wyb@localhost check-0.9.14]$ make
[wyb@localhost check-0.9.14]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装curl&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost check-0.9.14]$ cd ..
[wyb@localhost curl-7.41.0]$ cd curl/
[wyb@localhost curl-7.41.0]$ cd curl-7.41.0
[wyb@localhost curl-7.41.0]$ make
[wyb@localhost curl-7.41.0]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装libnet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost curl-7.41.0]$ cd ../../libnet/
[wyb@localhost libnet]$ tar -zxvf libnet-1.1.6.tar.gz
[wyb@localhost libnet]$ cd libnet-1.1.6
[wyb@localhost libnet-1.1.6]$ ./configure 
[wyb@localhost libnet-1.1.6]$ make
[wyb@localhost libnet-1.1.6]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装luajit&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost luajit]$ tar -zxvf LuaJIT-2.0.3.tar.gz 
[wyb@localhost luajit]$ make
[wyb@localhost luajit]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装ettercap&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ettercap-0.8.2]$ cd ettercap-0.8.2 
[wyb@localhost ettercap-0.8.2]$ mkdir build                   
[wyb@localhost ettercap-0.8.2]$ cd build  
[wyb@localhost build]$ cmake ../    *cmake ettercap时提示未安装cmake*  
-bash: cmake: command not found  
[wyb@localhost build]$ sudo yum install cmake   *安装cmake*  
[wyb@localhost build]$ cmake ../    *提示未安装curses*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
-- Check for working C compiler: /usr/bin/cc -- works  
.....  
.....  
CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:108 (message):  
  Could NOT find Curses (missing: CURSES_LIBRARY CURSES_INCLUDE_PATH)  
.....  
.....  
[wyb@localhost build]$ yum search curses    *查找curses*  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Determining fastest mirrors  
 * base: mirrors.yun-idc.com  
 * extras: mirrors.opencas.cn  
 * updates: mirrors.btte.net
============================= N/S Matched: curses   ==============================  
ncurses.x86_64 : Ncurses support utilities  
ncurses-devel.i686 : Development files for the ncurses library  
ncurses-devel.x86_64 : Development files for the ncurses library  
ncurses-libs.x86_64 : Ncurses libraries  
ncurses-libs.i686 : Ncurses libraries  
ncurses-static.x86_64 : Static libraries for the ncurses library  
ocaml-curses.x86_64 : OCaml bindings for ncurses    
ocaml-curses-devel.x86_64 : Development files for ocaml-curses  
ncurses-base.x86_64 : Descriptions of common terminals  
ncurses-term.x86_64 : Terminal descriptions  
  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.  
[wyb@localhost build]$ sudo yum install ncurses ncurses-devel   *安装ncurses开发包*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *出错，缺少依赖包GTK*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
......  
......  
CMake Error at /usr/share/cmake/Modules/FindGTK2.cmake:429 (message):  
  Could not find GTK2 include directory  
....  
....  
[wyb@localhost build]$ yum search gtk  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Loading mirror speeds from cached hostfile  
 * base: mirrors.yun-idc.com  
.....  
.....  
gtk2.x86_64 : The GIMP ToolKit (GTK+), a library for creating GUIs for X  
gtk2.i686 : The GIMP ToolKit (GTK+), a library for creating GUIs for X  
gtk2-devel.i686 : Development files for GTK+   
.... 
....  
[wyb@localhost build]$ sudo yum install gtk2 gtk2-devel *安装gtk及开发包* 
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *缺少依赖包OpenSSL*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
-- Check for working C compiler: /usr/bin/cc -- works  
-- Detecting C compiler ABI info  
-- Detecting C compiler ABI info - done  
-- Check if the system is big endian  
.....  
.....  
CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:108 (message):  
  Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the  
  system variable OPENSSL_ROOT_DIR (missing: OPENSSL_LIBRARIES OPENSSL_INCLUDE_DIR)    
.....  
.....  
[wyb@localhost build]$ yum search openssl   *查找openssl*  
[wyb@localhost build]$ sudo yum install openssl openssl-devel   *安装openss及其开发包*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *依赖libpcap*  
......  
......  
-- Looking for inet_aton  
-- Looking for inet_aton - found  
CMake Error at cmake/Modules/EttercapLibCheck.cmake:191 (message):  
  libpcap not found!  
....  
....  
[wyb@localhost build]$ yum search libpcap   *查找libpcap*  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Loading mirror speeds from cached hostfile  
 * base: mirrors.yun-idc.com   
 * extras: mirrors.opencas.cn  
 * updates: mirrors.btte.net  
============================= N/S Matched: libpcap =============================  
libpcap-devel.i686 : Libraries and header files for the libpcap library  
libpcap-devel.x86_64 : Libraries and header files for the libpcap library  
libpcap.x86_64 : A system-independent interface for user-level packet capture  
libpcap.i686 : A system-independent interface for user-level packet capture  
  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.  
[wyb@localhost build]$ sudo yum install libpcap-devel   *安装libpcap-devel*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *cmake成功*  
[wyb@localhost build]$ make *make*  
....  
....  
Linking C executable etterlog  
[100%] Built target etterlog  
Scanning dependencies of target man  
[100%] Built target man  
[wyb@localhost build]$ sudo make install    *make install*  
.....  
.....   
-- Installing: /usr/local/share/man/man8/ettercap_curses.8  
-- Installing: /usr/local/share/man/man8/ettercap-pkexec.8  
-- Installing: /usr/local/share/man/man5/etter.conf.5  
[wyb@localhost build]$ cd  
[wyb@localhost ~]$ ettercap -v  *查看版本且能查看，证明安装成功*  
ettercap 0.8.2 copyright 2001-2015 Ettercap Development Team  
ettercap 0.8.2  
[wyb@localhost ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>