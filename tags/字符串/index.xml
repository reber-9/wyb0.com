<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>字符串 on </title>
    <link>http://wyb0.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
    <description>Recent content in 字符串 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017 Reber. All Rights Reserved.</copyright>
    <lastBuildDate>Sat, 21 May 2016 23:16:28 +0800</lastBuildDate>
    <atom:link href="http://wyb0.com/tags/%E5%AD%97%E7%AC%A6%E4%B8%B2/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>PHP之字符串</title>
      <link>http://wyb0.com/posts/PHP%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/</link>
      <pubDate>Sat, 21 May 2016 23:16:28 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/PHP%E4%B9%8B%E5%AD%97%E7%AC%A6%E4%B8%B2/</guid>
      <description>

&lt;h2 id=&#34;特点:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;特点&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;字符串可以使用数组的处理函数操作，但并不是真正的数组&lt;/li&gt;

&lt;li&gt;&lt;p&gt;双引号中的变量用{}括起来，因为字符串中若遇到$符号，解析器会尽可能多的获取后面的字符以组成一个合法的变量名&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
    $lamp = array(&#39;os&#39; =&amp;gt; &#39;Linux&#39;, &#39;webserver&#39; =&amp;gt; &#39;Apache&#39;, &#39;db&#39; =&amp;gt; &#39;Mysql&#39;, &#39;language&#39; =&amp;gt; &#39;PHP&#39;);


    echo &amp;quot;A OS is $lamp[os].&amp;quot;;  // ok
    echo &amp;quot;A OS is $lamp[&#39;os&#39;].&amp;quot;;  // false
    echo &amp;quot;A OS is {$lamp[&#39;os&#39;]}.&amp;quot;;  //ok
    echo &amp;quot;A OS is {$lamp[os]}.&amp;quot;;  // ok


    echo &amp;quot;This square is $square-&amp;gt;width meters broad.&amp;quot;; //ok
    echo &amp;quot;This square is $square-&amp;gt;width meters broad.&amp;quot;; //ok
    echo &amp;quot;This square is $square-&amp;gt;width meters broad.&amp;quot;; //ok
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;常用字符串输出函数:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;常用字符串输出函数&lt;/h2&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;函数名&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;功能描述&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;echo&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;输出字符串&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;print()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;输出一个或多个字符串&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;die()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;输出一条消息，并退出当前脚本&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;printf()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;输出格式化字符串&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;sprintf()&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;把格式化字符串写入到一个变量中&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&#34;函数echo:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;函数echo()&lt;/h2&gt;

&lt;p&gt;输出一个或多个字符串&lt;br /&gt;
void echo(string arg1 [,string &amp;hellip;])&lt;/p&gt;

&lt;h2 id=&#34;函数print:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;函数print()&lt;/h2&gt;

&lt;p&gt;功能和echo()一样，它有返回值，若成功则返回1,否则返回0&lt;/p&gt;

&lt;h2 id=&#34;函数die:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;函数die()&lt;/h2&gt;

&lt;p&gt;该函数是exit()函数的别名&lt;br /&gt;
若参数为字符串，则函数会在推出前输出它&lt;br /&gt;
若参数为整数(0~254)，则值会被用作推出状态&lt;/p&gt;

&lt;h2 id=&#34;函数printf:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;函数printf()&lt;/h2&gt;

&lt;p&gt;输出格式化的字符串，和C语言中同名的函数用法一样&lt;br /&gt;
第一个参数为必选项，是规定的字符串及如何格式化其中的变量&lt;br /&gt;
可以有多个可选参数，是规定插入到第一个参数的格式化字符串中对应%符号处的参数&lt;/p&gt;

&lt;h2 id=&#34;函数sprintf:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;函数sprintf()&lt;/h2&gt;

&lt;p&gt;用法和Printf()类似，但他并不是输出字符串，而是格式化的字符串以返回值的形式写入到一个变量中&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;常用字符串格式化函数:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;常用字符串格式化函数&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;ltrim()：从字符串左删除空格或其他预定义字符串
rtrim()：从字符串的末端开始删除空白字符串或其它预定义字符
trim()：从字符串的两端删除空白字符和其他预定字符

strtolower()：把字符串转换为小写
strtoupper()：把字符串转换为大写
ucfirst()：把字符串中的首字符转为大写
ucwords():把字符串中每个单词的首自负转换为大写

nl2br()：在字符串的每个新行之前插入HTML换行符
htmlentities()：把字符转换为HTML实体
htmlspecialchars()：把一些预定义的字符转换为HTML实体
Stripslashes()：删除由addcslashes()函数添加的反斜杠
number_format()：能过千位分组来格式化数字
strip_tags()：剥去HTML,XML以及PHP的标签

strrev()：反转字符串
str_pad()：把字符串填充为新的长度
md5()：将一个字符串进行MD5计算
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;过滤字符:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;过滤字符&lt;/h2&gt;

&lt;p&gt;ltrim()、rtrim()、trim()&lt;br /&gt;
第一个参数为待处理字符串，为必选项&lt;br /&gt;
第二个参数是可选项，用于指定希望取出的字符，默认为：&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;rdquo;&amp;ldquo;：空格&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;ldquo;\0&amp;rdquo;：NULL&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;ldquo;\t&amp;rdquo;：制表符&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;ldquo;\n&amp;rdquo;：新行&lt;br /&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;ldquo;\r&amp;rdquo;：回车&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
    $str = &amp;quot;123 This is a test ...&amp;quot;; //测试的字符串
    echo ltrim($str,&amp;quot;0..9&amp;quot;); //过滤左侧的数字，输出This is a test ...
    echo rtrim($str,&amp;quot;.&amp;quot;); //过滤右侧所有&amp;quot;.&amp;quot;,输出123 This is a test
    echo trim $str,&amp;quot;0..9 A..Z .&amp;quot;; //过滤掉字符串两端的数字和大写字母还有&amp;quot;.&amp;quot;,输出:his is a test
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;大小写转换:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;大小写转换&lt;/h2&gt;

&lt;p&gt;strtolower()：把字符串转换为小写&lt;br /&gt;
strtoupper()：把字符串转换为大写&lt;br /&gt;
ucfirst()：把字符串中的首字符转为大写&lt;br /&gt;
ucwords():把字符串中每个单词的首自负转换为大写&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
    $lamp = &amp;quot;lamp is composed of Linux、Apache、MySQL and PHP&amp;quot;;
    echo strtolower($lamp);
    //输出：lamp is composed of linux apache mysql and php
    echo strtoupper($lamp);
    //输出：LAMP IS CONPOSED OF LINUX、APACHE MYSQL AND PHP
    echo ucfirst($lamp);
    //输出：Lamp is composed of Linux、Apache MySQL and PHP
    echo ucwords($lamp);
    //输出：Lamp Is Composed Of Linux、Apache、MySQL And PHP
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;函数nl2br:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;函数nl2br()&lt;/h2&gt;

&lt;p&gt;在字符串中的每个新行&amp;rdquo;\n&amp;rdquo;之前插入HTML换行符&amp;rdquo;&lt;code&gt;&amp;lt;br /&amp;gt;&lt;/code&gt;&amp;ldquo;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
    echo nl2br(&amp;quot;One line.\nAnother line.&amp;quot;);
    // 在“\n”前加上&amp;quot;&amp;lt;br /&amp;gt;&amp;quot;标记
    /*输出以下两行结果
    One line.&amp;lt;br/&amp;gt;
    Another line.
    */
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;函数htmlspecialchars:c5ba7528507e708f70023ec7ac6408f9&#34;&gt;函数htmlspecialchars()&lt;/h2&gt;

&lt;p&gt;第一个参数是带有HTML标记待处理的字符串&lt;br /&gt;
第二个参数用来决定引号的转换方式&lt;br /&gt;
string htmlspecialchars(string string [,int quote_style[,string charset]])&lt;br /&gt;
将HTML标记中的以下特殊字符转换成HTML实体：&lt;/p&gt;

&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;left&#34;&gt;特殊字符&lt;/th&gt;
&lt;th align=&#34;left&#34;&gt;HTML实体&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;

&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;amp;(和号)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;amp;amp;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;rdquo;(双引号)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;rsquo;(单引号)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;amp;#309;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;lt;(小于)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;amp;lt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td align=&#34;left&#34;&gt;&amp;gt;(大于)&lt;/td&gt;
&lt;td align=&#34;left&#34;&gt;&lt;code&gt;&amp;amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;?php
        $str = &amp;quot;&amp;lt;B&amp;gt;WebServer:&amp;lt;/B&amp;gt; &amp;amp; &#39;Linux&#39; &amp;amp; &#39;Apache&#39;&amp;quot;;
        //将有HTML标记和单引号的字符串
        echo htmlspecialchars($str,ENT_COMPAT);
        //转换为HTML标记和转换双引号
        echo &amp;quot;&amp;lt;br&amp;gt;\n&amp;quot;;
        echo htmlspecialchars($str,ENT_QUOTES);
        //转换HTML标记和转换两种引号
        echo &amp;quot;&amp;lt;br&amp;gt;\n&amp;quot;;
        echo htmlspecialchars($str,ENT_NOQUOTES);
        //转换HTML标记和不对引号转换
        echo &amp;quot;&amp;lt;br&amp;gt;\n&amp;quot;;
    ?&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>