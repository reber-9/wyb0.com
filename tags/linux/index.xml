<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Linux on </title>
    <link>http://wyb0.com/tags/linux/</link>
    <description>Recent content in Linux on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017 Reber. All Rights Reserved.</copyright>
    <lastBuildDate>Wed, 20 Apr 2016 15:54:07 +0800</lastBuildDate>
    <atom:link href="http://wyb0.com/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Linux之文本处理软件awk</title>
      <link>http://wyb0.com/posts/linux-text-processing-software-awk/</link>
      <pubDate>Wed, 20 Apr 2016 15:54:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-text-processing-software-awk/</guid>
      <description>

&lt;p&gt;&lt;center&gt;
awk默认是以行为单位处理文本的，对test.txt中的每一行都执行后面 &amp;ldquo;{ }&amp;rdquo; 中的语句。
&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;若有一个需要重新格式化的字典test.txt(用户名、密码、地址)：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xiaosan sadasdw jiaozuo
234wer  asdfasd asdas
1111    aaaa    cccc
2222    aaaa    degd
1111    aaaa    cccc
3333    aaaa    dfger
21asd   sdfsd   sadasd
dwqx    asds    sasdfcv
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;要求：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.里面有重复数据，使用命令去重
2.提取出用户名和密码 每一行前面加上id数字，递增。
3.只提取出密码作为爆破字典
4.某些公司都是一个公司前缀+姓名简写，所以为用户名一栏全部改为uv_用户名
5.提取出密码一列，有些密码爆破成功率高，所以增加一列，标出密码出现次数
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;去重:82cb9728d4bd305553ce02dec4025c54&#34;&gt;去重：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39;
[wyb@localhost ~]$ cat test.txt | uniq //作用和上面命令相同
aosan sadasdw jiaozuo
234wer  asdfasd asdas
1111    aaaa    cccc
2222    aaaa    degd
3333    aaaa    dfger
21asd   sdfsd   sadasd
dwqx    asds    sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重-添加id:82cb9728d4bd305553ce02dec4025c54&#34;&gt;去重、添加id：&lt;/h2&gt;

&lt;p&gt;一般字典不需要id、user、pass等标示符，这里只是为了便于观看&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;id:&amp;quot;NR&amp;quot;\tuser:&amp;quot;$1&amp;quot;\tpass:&amp;quot;$2&amp;quot;\taddress:&amp;quot;$3}&#39; | column -t  //最后一个命令可以将列对齐
id:1    user:aosan      pass:sadasdw    address:jiaozuo
id:2    user:234wer     pass:asdfasd    address:asdas
id:3    user:1111       pass:aaaa       address:cccc
id:4    user:2222       pass:aaaa       address:degd
id:5    user:3333       pass:aaaa       address:dfger
id:6    user:21asd      pass:sdfsd      address:sadasd
id:7    user:dwqx       pass:asds       address:sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重-添加id-添加公司前缀:82cb9728d4bd305553ce02dec4025c54&#34;&gt;去重、添加id、添加公司前缀：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;id:&amp;quot;NR&amp;quot;\tuser:uv_&amp;quot;$1&amp;quot;\tpass:&amp;quot;$2&amp;quot;\taddress:&amp;quot;$3}&#39;
id:1    user:uv_aosan   pass:sadasdw    address:jiaozuo
id:2    user:uv_234wer  pass:asdfasd    address:asdas
id:3    user:uv_1111    pass:aaaa       address:cccc
id:4    user:uv_2222    pass:aaaa       address:degd
id:5    user:uv_3333    pass:aaaa       address:dfger
id:6    user:uv_21asd   pass:sdfsd      address:sadasd
id:7    user:uv_dwqx    pass:asds       address:sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重然后输出密码:82cb9728d4bd305553ce02dec4025c54&#34;&gt;去重然后输出密码：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;pass:&amp;quot;$2}&#39;
pass:sadasdw
pass:asdfasd
pass:aaaa
pass:aaaa
pass:aaaa
pass:sdfsd
pass:asds
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;输出密码-得到密码出现次数:82cb9728d4bd305553ce02dec4025c54&#34;&gt;输出密码、得到密码出现次数：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;下面的&#39;a[$1]++&#39;是按第一列来去重的,若有两条数据只有第一列重复则成功，可以用$0按行来去重
[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print $2}&#39; | awk &#39;{a[$1]++} END {for (j in a) print a[j],j}&#39;
1 sadasdw
1 sdfsd
1 asdfasd
1 asds
3 aaaa

uniq 只能去除挨着的重复数据，所以先sort升序排序，然后uniq -c统计重复，再sort -r降序排序
cat test.txt | awk &#39;{print $2}&#39; | sed &#39;1d&#39; |sort | uniq -c |sort -r
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;其他:82cb9728d4bd305553ce02dec4025c54&#34;&gt;其他：&lt;/h2&gt;

&lt;h4 id=&#34;对-a-1-的解释如下:82cb9728d4bd305553ce02dec4025c54&#34;&gt;对&amp;rsquo;!a[$1]++&amp;lsquo;的解释如下：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;a[e54r56wer]为空，!a[e54r56wer]为真，可以输出，然后++&lt;/li&gt;
&lt;li&gt;若再来一个a[e54r56wer]，因为上一步已经++，此时值为1，!a[e54r56wer]为假，不输出，再++&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;对for输出数组的解释如下:82cb9728d4bd305553ce02dec4025c54&#34;&gt;对for输出数组的解释如下：&lt;/h4&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;awk &amp;lsquo;{a[$1]++} END {for (j in a) print a[j],j}&amp;rsquo; test.txt&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在遍历完文件后，通过END把后面的句子连起来&lt;/li&gt;
&lt;li&gt;for (j in a) 是指打印数组a的下标，并定义下标为变量j&lt;/li&gt;
&lt;li&gt;最后print a[j],j就是打印数组下标和数组，这样就相同的$1排重并计数&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux之文本处理</title>
      <link>http://wyb0.com/posts/linux-text-processing/</link>
      <pubDate>Wed, 20 Apr 2016 07:58:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-text-processing/</guid>
      <description>

&lt;p&gt;这里介绍3种方式：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;==&amp;gt;awk  
==&amp;gt;grep  
==&amp;gt;sed
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;awk处理文本-最常用:41aa65d1606d0ccf42df40ed1832e8e7&#34;&gt;awk处理文本(&lt;em&gt;最常用&lt;/em&gt;)：&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;作用：awk对数据以行分析并生成报告时显得很强大，它将行进行切片，再处理分开的切片，可对格式化的数据重新进行格式化&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;awk命令格式：awk [F filed-separator] &amp;lsquo;commands&amp;rsquo; input-fiel(s)&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;参数-F：可以添加任意的分割符，比较重要&lt;br /&gt;
awk工作流程是这样的：&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;读入有&amp;rsquo;\n&amp;rsquo;换行符分割的一条记录，然后将记录按-F指定的域分隔符划分域，$0则表示所有域,$1表示第一个域,$n表示第n个域。默认域分隔符是&amp;rdquo;空白键&amp;rdquo; 或 &amp;ldquo;[tab]键&amp;rdquo;。&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;1-入门示例:41aa65d1606d0ccf42df40ed1832e8e7&#34;&gt;1. 入门示例：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost temp]$ head -n 5 /etc/passwd
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
[wyb@localhost temp]$ head -n 5 /etc/passwd | awk -F &#39;:&#39; &#39;{print $1}&#39;  //输出第1列，域分隔符为：
root
bin
daemon
adm
lp
[wyb@localhost temp]$ head -n 5 /etc/passwd | awk -F &#39;:&#39;  &#39;{pri
nt &amp;quot;id:&amp;quot;$1&amp;quot;\tshell:&amp;quot;$7}&#39;    //输出第1、7列且给予列名
id:root shell:/bin/bash
id:bin  shell:/sbin/nologin
id:daemon       shell:/sbin/nologin
id:adm  shell:/sbin/nologin
id:lp   shell:/sbin/nologin
[wyb@localhost temp]$ head -n 5 /etc/passwd | awk -F &#39;:&#39;  &#39;BEGIN {print &amp;quot;====begin=====&amp;quot;} {print &amp;quot;id:&amp;quot;$1&amp;quot;\tshell:&amp;quot;$7} END {print &amp;quot;====end====&amp;quot;}&#39;
====begin=====
id:root shell:/bin/bash
id:bin  shell:/sbin/nologin
id:daemon       shell:/sbin/nologin
id:adm  shell:/sbin/nologin
id:lp   shell:/sbin/nologin
====end====
[wyb@localhost temp]$ awk -F: &#39;/root/&#39; /etc/passwd  //搜索含有root关键字的所有行
root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin
[wyb@localhost temp]$ awk -F: &#39;/root/{print $7}&#39; /etc/passwd    //匹配root并输出对应shell
/bin/bash
/sbin/nologin
[wyb@localhost temp]$ awk -F: &#39;/^root/&#39; /etc/passwd //匹配以root开头的行
root:x:0:0:root:/root:/bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-内置变量:41aa65d1606d0ccf42df40ed1832e8e7&#34;&gt;2. 内置变量：&lt;/h3&gt;

&lt;table&gt;
    &lt;tr&gt;
        &lt;td bgcolor=black&gt;
ARGC&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令行参数个数&lt;br/&gt;
ARGV&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;命令行参数排列&lt;br/&gt;
ENVIRON&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;支持队列中系统环境变量的使用&lt;br/&gt;
FILENAME&amp;nbsp;&amp;nbsp;&amp;nbsp;awk浏览的文件名&lt;br/&gt;
FNR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览文件的记录数&lt;br/&gt;
FS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;设置输入域分隔符，等价于命令行 -F选项&lt;br/&gt;
NF&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;浏览记录的域的个数&lt;br/&gt;
NR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;已读的记录数&lt;br/&gt;
OFS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出域分隔符&lt;br/&gt;
ORS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出记录分隔符&lt;br/&gt;
RS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;控制记录分隔符
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost temp]$ awk -F: &#39;{print &amp;quot;filename:&amp;quot; FILENAME &amp;quot;,linenumber:&amp;quot; NR &amp;quot;,columns:&amp;quot; NF &amp;quot;,linecontent:&amp;quot;$0}&#39; a.txt
filename:a.txt,linenumber:1,columns:1,linecontent:1     root    12sf34s56
filename:a.txt,linenumber:2,columns:1,linecontent:2     admin   ksdjfiweurf
filename:a.txt,linenumber:3,columns:1,linecontent:3     dome    skd89453
filename:a.txt,linenumber:4,columns:1,linecontent:4     tomkd   3jkke34
filename:a.txt,linenumber:5,columns:1,linecontent:5     jarry   sdkj89ry4
filename:a.txt,linenumber:6,columns:1,linecontent:6     canki   sdkj834
filename:a.txt,linenumber:7,columns:1,linecontent:7     lola    er8f7734
filename:a.txt,linenumber:8,columns:1,linecontent:8     marry   j8jkf78
filename:a.txt,linenumber:9,columns:1,linecontent:9     candy   kd89943
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-awk编程:41aa65d1606d0ccf42df40ed1832e8e7&#34;&gt;3. awk编程：&lt;/h3&gt;

&lt;h5 id=&#34;3-1-变量和赋值:41aa65d1606d0ccf42df40ed1832e8e7&#34;&gt;3.1 变量和赋值：&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost temp]$ head -n 5 /etc/passwd | awk -F &#39;:&#39;  &#39;BEGIN {count=0} {count++; print &amp;quot;username:&amp;quot;$1} END {print &amp;quot;count:&amp;quot;count}&#39;
username:root
username:bin
username:daemon
username:adm
username:lp
count:5
[wyb@localhost ~]$ ls -l aaa/ettercap-0.8.2 | awk &#39;BEGIN {size=0;} {size=size+5;} END {print &amp;quot;[end]size is:&amp;quot;,size,&amp;quot;byte&amp;quot;}&#39;
[end]size is: 160 byte
[wyb@localhost ~]$ ls -l aaa/ettercap-0.8.2 | awk &#39;BEGIN {size=0;} {size=size+5;} END {print &amp;quot;[end]size is:&amp;quot;,size/1024/1024,&amp;quot;M&amp;quot;}&#39;
[end]size is: 0.000152588 M
[wyb@localhost ~]$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h5 id=&#34;3-2条件语句:41aa65d1606d0ccf42df40ed1832e8e7&#34;&gt;3.2条件语句：&lt;/h5&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ head -n 6 /etc/passwd | awk -F &#39;:&#39; &#39;{if($1==&amp;quot;root&amp;quot;) print &amp;quot;root bash is:&amp;quot;$7}&#39;
root bash is:/bin/bash
[wyb@localhost ~]$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;grep处理文本:41aa65d1606d0ccf42df40ed1832e8e7&#34;&gt;Grep处理文本：&lt;/h2&gt;

&lt;p&gt;匹配到时输出一行
常用参数：nrABC
&lt;table&gt;
    &lt;tr&gt;
        &lt;td bgcolor=black&gt;
-n&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;输出匹配到的字符串所在行数&lt;br/&gt;
-r&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;遍历子目录文件查找字符串&lt;br/&gt;
-A 3&amp;nbsp;&amp;nbsp;显示匹配行及下面3行&lt;br/&gt;
-B 4&amp;nbsp;&amp;nbsp;显示匹配行及上面4行&lt;br/&gt;
-C 4&amp;nbsp;&amp;nbsp;显示匹配行及上下4行&lt;br/&gt;
-i&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;不区分大小写&lt;br/&gt;
-v&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;显示所有不包含字符的行
        &lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ grep root /etc/passwd    //查找root这个字符
root:x:0:0:root:/root:/bin/bash
operator:x:11:0:operator:/root:/sbin/nologin
[wyb@localhost ~]$ grep -n root /etc/passwd //查找root字符串并输出所在行数
1:root:x:0:0:root:/root:/bin/bash
11:operator:x:11:0:operator:/root:/sbin/nologin
[wyb@localhost ~]$ grep -n root /etc/passwd --color //给字符串不同颜色
1:root:x:0:0:root:/root:/bin/bash
11:operator:x:11:0:operator:/root:/sbin/nologin
[wyb@localhost temp]$ ls
aa  b.txt
[wyb@localhost temp]$ grep -r -n root /home/wyb/temp/ --color   在temp目录及子目录查找字符串root
/home/wyb/temp/b.txt:4:sdkrootwe
/home/wyb/temp/b.txt:6:fsdkfjroot
/home/wyb/temp/b.txt:9:root
/home/wyb/temp/aa/a.txt:1:1     root    12sf34s56
[wyb@localhost temp]$ grep -r -n &amp;quot;^root&amp;quot; /etc/passwd --color    正则查找字符串root
1:root:x:0:0:root:/root:/bin/bash
[wyb@localhost temp]$ grep -r -n &amp;quot;root&amp;quot; /etc/passwd --color -c  匹配的行的数
2
[wyb@localhost temp]$ ps aux | grep &amp;quot;^wyb&amp;quot;
wyb        2185  0.0  0.1  99952  1840 ?        S    16:33   0:02 sshd: wyb@pts/0  
wyb        2186  0.0  0.1 108464  1944 pts/0    Ss   16:33   0:00 -bash
wyb        3229  2.0  0.1 110232  1136 pts/0    R+   18:27   0:00 ps aux
wyb        3230  0.0  0.0 103244   828 pts/0    S+   18:27   0:00 grep ^wyb
[wyb@localhost temp]$ ps aux | grep ora
wyb        3233  0.0  0.0 103244   828 pts/0    S+   18:28   0:00 grep ora
[wyb@localhost temp]$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;sed处理文本:41aa65d1606d0ccf42df40ed1832e8e7&#34;&gt;sed处理文本&lt;/h2&gt;

&lt;ul&gt;
&lt;li&gt;处理大文本很好用，上几十万、上百万行的数据&lt;/li&gt;
&lt;li&gt;sed主要以行为单位，可以将数据行进行替换、删除、新增、选取等&lt;/li&gt;
&lt;li&gt;sed语法 参数 动作 文件&lt;/li&gt;
&lt;li&gt;-n只把匹配到的输出&lt;/li&gt;

&lt;li&gt;&lt;p&gt;主要参数是：&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;a 在下面插入数据&lt;/li&gt;
&lt;li&gt;d 删除&lt;/li&gt;
&lt;li&gt;i 在上面插入数据&lt;/li&gt;
&lt;li&gt;p 输出数据&lt;/li&gt;
&lt;li&gt;c 替换字符串，后面可跟字符串，字符串替换n1到n2之间的行&lt;br/&gt;
s 替换字符串，通常搭配正则&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;字符的删除&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ nl a.txt | sed &#39;3,8d&#39;   //不输出3-8行
     1  1     root      12sf34s56
     2  2     admin     ksdjfiweurf
     9  9     candy     kd89943
[wyb@localhost aa]$ nl a.txt | sed &#39;3,$d&#39;   //从第三行删到最后一行
     1  1     root      12sf34s56
     2  2     admin     ksdjfiweurf
[wyb@localhost aa]$ nl a.txt | sed &#39;/root/d&#39;    //正则删除带root的行
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
     5  5     jarry     sdkj89ry4
     6  6     canki     sdkj834
     7  7     lola      er8f7734
     8  8     marry     j8jkf78
     9  9     candy     kd89943
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;a插入字符&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ nl a.txt | sed &#39;2a aaaaaa&#39; | head -n 5  //在第二行下面插入一行字符串aaaaaa
     1  1     root      12sf34s56
     2  2     admin     ksdjfiweurf
aaaaaa
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
[wyb@localhost aa]$ nl a.txt | sed &#39;2i aaaaaa&#39; | head -n 5  //在第二行上面插入一行字符串aaaaaa
     1  1     root      12sf34s56
aaaaaa
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
[wyb@localhost aa]$ nl a.txt | sed &#39;2i aaaaaa \     //增加多行用\
bbbbb\
ccccc\
dddddd&#39; | head -n 7
     1  1     root      12sf34s56
aaaaaa 
bbbbb
ccccc
dddddd
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;p输出字符&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ nl a.txt | sed &#39;2,5p&#39;
     1  1     root      12sf34s56
     2  2     admin     ksdjfiweurf
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
     4  4     tomkd     3jkke34
     5  5     jarry     sdkj89ry4
     5  5     jarry     sdkj89ry4
     6  6     canki     sdkj834
     7  7     lola      er8f7734
     8  8     marry     j8jkf78
     9  9     candy     kd89943
[wyb@localhost aa]$ nl a.txt | sed -n &#39;2,5p&#39;    //加-n去除其余行
     2  2     admin     ksdjfiweurf
     3  3     dome      skd89453
     4  4     tomkd     3jkke34
     5  5     jarry     sdkj89ry4
[wyb@localhost aa]$ nl a.txt | sed -n &#39;/root/p&#39; //正则匹配root
     1  1     root      12sf34s56
[wyb@localhost bbb]$ nl /etc/passwd | sed -n &#39;/root/{s/root/111111/;p}&#39;查找root，然后将行中的第一个root替换为abcdefg  -n代表不输出所有的
     1  111111:x:0:0:root:/root:/bin/bash
    11  operator:x:11:0:operator:/111111:/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;c和s替换字符&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ nl a.txt | sed &#39;2,5c aaaaaa&#39;    //将第2-5行替换
     1  1     root      12sf34s56
aaaaaa
     6  6     canki     sdkj834
     7  7     lola      er8f7734
     8  8     marry     j8jkf78
     9  9     candy     kd89943
[wyb@localhost aa]$ nl /etc/passwd | sed -n &#39;/root/{s/root/1111/g;p}&#39;查找root，然后将全局的root替换为1111
     1  1111:x:0:0:1111:/1111:/bin/bash
    11  operator:x:11:0:operator:/1111:/sbin/nologin
[wyb@localhost aa]$ nl /etc/passwd | sed -n &#39;1,3{s/root/1111/g;p}&#39;前五行查找root，然后将全局的root替换为1111
     1  1111:x:0:0:1111:/1111:/bin/bash
     2  bin:x:1:1:bin:/bin:/sbin/nologin
     3  daemon:x:2:2:daemon:/sbin:/sbin/nologin
[wyb@localhost aa]$ nl /etc/passwd | sed -n &#39;1,5{s/root/1111/g;p;q}&#39;前五行查找root，然后将整行的root替换为1111,查找到一个就退出
     1  1111:x:0:0:1111:/1111:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;实例&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ ifconfig eth0
eth0      Link encap:Ethernet  HWaddr 00:0C:29:56:B4:10  
          inet addr:192.168.63.131  Bcast:192.168.63.255  Mask:255.255.255.0
          inet6 addr: fe80::20c:29ff:fe56:b410/64 Scope:Link
          UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
          RX packets:11732 errors:0 dropped:0 overruns:0 frame:0
          TX packets:7223 errors:0 dropped:0 overruns:0 carrier:0
          collisions:0 txqueuelen:1000 
          RX bytes:1148256 (1.0 MiB)  TX bytes:1192150 (1.1 MiB)
&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost aa]$ ifconfig eth0 | grep &#39;inet add&#39; 
          inet addr:192.168.63.131  Bcast:192.168.63.255  Mask:255.255.255.0
[wyb@localhost aa]$ ifconfig eth0 | grep &#39;inet add&#39; | sed &#39;s/Bcast.*$//g&#39;
          inet addr:192.168.63.131  
[wyb@localhost aa]$ 


[wyb@localhost aa]$ nl /etc/passwd | sed &#39;3,$d&#39;
     1  root:x:0:0:root:/root:/bin/bash
     2  bin:x:1:1:bin:/bin:/sbin/nologin
[wyb@localhost aa]$ nl /etc/passwd | sed &#39;3,$d&#39; | sed -n &#39;s/bash/buleshell/p&#39;
     1  root:x:0:0:root:/root:/bin/buleshell


[wyb@localhost aa]$ nl /etc/passwd | sed -e &#39;3,$d&#39; -e &#39;s/bash/buleshell/p&#39;
     1  root:x:0:0:root:/root:/bin/buleshell
     1  root:x:0:0:root:/root:/bin/buleshell
     2  bin:x:1:1:bin:/bin:/sbin/nologin
[wyb@localhost aa]$ 


[wyb@localhost aa]$ nl /etc/passwd | sed -e &#39;3,$d&#39; -e &#39;s/bash/buleshell/p&#39;
     1  root:x:0:0:root:/root:/bin/buleshell
     1  root:x:0:0:root:/root:/bin/buleshell
     2  bin:x:1:1:bin:/bin:/sbin/nologin
[wyb@localhost aa]$ nl /etc/passwd | sed -e &#39;3,$d&#39; -e &#39;s/bash/buleshell/p&#39; &amp;gt; test.txt
[wyb@localhost aa]$ cat test.txt 
     1  root:x:0:0:root:/root:/bin/buleshell
     1  root:x:0:0:root:/root:/bin/buleshell
     2  bin:x:1:1:bin:/bin:/sbin/nologin
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux之tar</title>
      <link>http://wyb0.com/posts/linux-compression-software/</link>
      <pubDate>Tue, 19 Apr 2016 21:30:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-compression-software/</guid>
      <description>

&lt;h3 id=&#34;tar主要参数:bd387bd851701deda83f57f973898ec2&#34;&gt;tar主要参数：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;-c  创建一个新的压缩文件
-x  解压
-t  查看压缩文件的内容
-f  指定档案文件的名字
-v  显示过程信息
-r  增加文件到指定的包
-C  指定解压后的路径
-z  使用gzip
-j  使用bzip2
-Z  使用compress
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;tar示例:bd387bd851701deda83f57f973898ec2&#34;&gt;tar示例：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost temp]$ ls
aaa
[wyb@localhost temp]$ tar -cvf 1.tar aaa/   *打包不压缩*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]$ tar -zcvf 1.tar.gz aaa/   *打包且以gzip压缩*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]$ tar -jcvf 1.tar.bz2 aaa/  *打包且以bzip2压缩*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]tar -zxvf aa.tar.gz /home/aaa --exclude=dir  //排除目录
[wyb@localhost temp]$ ls -l
total 24
-rw-r--r--. 1 wyb root 10240 Apr 19 07:47 1.tar
-rw-r--r--. 1 wyb root   265 Apr 19 07:48 1.tar.bz2
-rw-r--r--. 1 wyb root   253 Apr 19 07:48 1.tar.gz
drwxr-xr-x. 2 wyb root  4096 Apr 19 07:22 aaa
[wyb@localhost temp]$ file 1.tar.gz     *查看文件类型*
1.tar.gz: gzip compressed data, from Unix, last modified: Tue Apr 19 07:48:01 2016
[wyb@localhost temp]$ tar -ztvf 1.tar.gz    *查看压缩包内容*
drwxr-xr-x wyb/root          0 2016-04-19 07:22 aaa/
-rw-r--r-- wyb/root          0 2016-04-19 05:05 aaa/b.txt
-rw-r--r-- wyb/root          0 2016-04-19 05:05 aaa/c.txt
-rw-r--r-- wyb/root         84 2016-04-19 05:50 aaa/test.txt
-rw-r--r-- wyb/root          0 2016-04-19 05:05 aaa/a.txt
[wyb@localhost temp]$ ls
1.tar  1.tar.bz2  1.tar.gz  aaa
[wyb@localhost temp]$ rm -rf aaa/
[wyb@localhost temp]$ ls
1.tar  1.tar.bz2  1.tar.gz
[wyb@localhost temp]$ tar -zxvf 1.tar.gz    *解压到当前目录*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]$ ls
1.tar  1.tar.bz2  1.tar.gz  aaa
[wyb@localhost temp]$ ls aaa/
a.txt  b.txt  c.txt  test.txt
[wyb@localhost temp]$ ls /tmp/
111.txt  aa
[wyb@localhost temp]$ tar -zxvf 1.tar.gz -C /tmp/aa *解压到指定路径*
aaa/
aaa/b.txt
aaa/c.txt
aaa/test.txt
aaa/a.txt
[wyb@localhost temp]$ 
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;zip:bd387bd851701deda83f57f973898ec2&#34;&gt;zip：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[reber@localhost ~]$ ls aaa/
a.txt  b.txt  c.txt
[reber@localhost ~]$ zip -re aaa.zip aaa/   //加密压缩
Enter password: 
Verify password: 
  adding: aaa/ (stored 0%)
  adding: aaa/b.txt (stored 0%)
  adding: aaa/c.txt (stored 0%)
  adding: aaa/a.txt (stored 0%)
[reber@localhost ~]$ rm aaa/*
[reber@localhost ~]$ ls aaa/
[reber@localhost ~]$ unzip aaa.zip   //解压缩
Archive:  aaa.zip
[aaa.zip] aaa/b.txt password: 
 extracting: aaa/b.txt         
 extracting: aaa/c.txt               
 extracting: aaa/a.txt   
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux之安装ettercap</title>
      <link>http://wyb0.com/posts/linux-install-ettercap/</link>
      <pubDate>Tue, 19 Apr 2016 20:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-install-ettercap/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;操作系统：CentOS&lt;br /&gt;
首先，ettercap安装时需要4个依赖包，而且安装包里面也已经提供了&lt;br /&gt;
执行：sudo yum groupinstall &amp;ldquo;Development tools&amp;rdquo;    &lt;em&gt;源码安装软件就需要安装这个&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;一-下载解压:64159d09041fb8e703b24c4e7a1ab35d&#34;&gt;一、下载解压&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;可用wget下载&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;二-查看需要的依赖项:64159d09041fb8e703b24c4e7a1ab35d&#34;&gt;二、查看需要的依赖项&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost ettercap-0.8.2]$ vim INSTALL

 #### Bundled libraries  
 Ettercap now bundles the following libraries with the source distribution:  
   libnet 1.1.6  
   curl 7.41.0  
   luajit 2.0.3  
   check 0.9.14  
[wyb@localhost ettercap-0.8.2]$ cd bundled_deps/  
[wyb@localhost bundled_deps]$ ls  
check  curl  libnet  luajit
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;三-安装依赖包:64159d09041fb8e703b24c4e7a1ab35d&#34;&gt;三、安装依赖包&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装check&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost check]$ cd check-0.9.14
[wyb@localhost check-0.9.14]$ ls
[wyb@localhost check-0.9.14]$ ./configure 
[wyb@localhost check-0.9.14]$ make
[wyb@localhost check-0.9.14]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装curl&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost check-0.9.14]$ cd ..
[wyb@localhost curl-7.41.0]$ cd curl/
[wyb@localhost curl-7.41.0]$ cd curl-7.41.0
[wyb@localhost curl-7.41.0]$ make
[wyb@localhost curl-7.41.0]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装libnet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost curl-7.41.0]$ cd ../../libnet/
[wyb@localhost libnet]$ tar -zxvf libnet-1.1.6.tar.gz
[wyb@localhost libnet]$ cd libnet-1.1.6
[wyb@localhost libnet-1.1.6]$ ./configure 
[wyb@localhost libnet-1.1.6]$ make
[wyb@localhost libnet-1.1.6]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装luajit&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost luajit]$ tar -zxvf LuaJIT-2.0.3.tar.gz 
[wyb@localhost luajit]$ make
[wyb@localhost luajit]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装ettercap&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ettercap-0.8.2]$ cd ettercap-0.8.2 
[wyb@localhost ettercap-0.8.2]$ mkdir build                   
[wyb@localhost ettercap-0.8.2]$ cd build  
[wyb@localhost build]$ cmake ../    *cmake ettercap时提示未安装cmake*  
-bash: cmake: command not found  
[wyb@localhost build]$ sudo yum install cmake   *安装cmake*  
[wyb@localhost build]$ cmake ../    *提示未安装curses*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
-- Check for working C compiler: /usr/bin/cc -- works  
.....  
.....  
CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:108 (message):  
  Could NOT find Curses (missing: CURSES_LIBRARY CURSES_INCLUDE_PATH)  
.....  
.....  
[wyb@localhost build]$ yum search curses    *查找curses*  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Determining fastest mirrors  
 * base: mirrors.yun-idc.com  
 * extras: mirrors.opencas.cn  
 * updates: mirrors.btte.net
============================= N/S Matched: curses   ==============================  
ncurses.x86_64 : Ncurses support utilities  
ncurses-devel.i686 : Development files for the ncurses library  
ncurses-devel.x86_64 : Development files for the ncurses library  
ncurses-libs.x86_64 : Ncurses libraries  
ncurses-libs.i686 : Ncurses libraries  
ncurses-static.x86_64 : Static libraries for the ncurses library  
ocaml-curses.x86_64 : OCaml bindings for ncurses    
ocaml-curses-devel.x86_64 : Development files for ocaml-curses  
ncurses-base.x86_64 : Descriptions of common terminals  
ncurses-term.x86_64 : Terminal descriptions  
  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.  
[wyb@localhost build]$ sudo yum install ncurses ncurses-devel   *安装ncurses开发包*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *出错，缺少依赖包GTK*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
......  
......  
CMake Error at /usr/share/cmake/Modules/FindGTK2.cmake:429 (message):  
  Could not find GTK2 include directory  
....  
....  
[wyb@localhost build]$ yum search gtk  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Loading mirror speeds from cached hostfile  
 * base: mirrors.yun-idc.com  
.....  
.....  
gtk2.x86_64 : The GIMP ToolKit (GTK+), a library for creating GUIs for X  
gtk2.i686 : The GIMP ToolKit (GTK+), a library for creating GUIs for X  
gtk2-devel.i686 : Development files for GTK+   
.... 
....  
[wyb@localhost build]$ sudo yum install gtk2 gtk2-devel *安装gtk及开发包* 
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *缺少依赖包OpenSSL*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
-- Check for working C compiler: /usr/bin/cc -- works  
-- Detecting C compiler ABI info  
-- Detecting C compiler ABI info - done  
-- Check if the system is big endian  
.....  
.....  
CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:108 (message):  
  Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the  
  system variable OPENSSL_ROOT_DIR (missing: OPENSSL_LIBRARIES OPENSSL_INCLUDE_DIR)    
.....  
.....  
[wyb@localhost build]$ yum search openssl   *查找openssl*  
[wyb@localhost build]$ sudo yum install openssl openssl-devel   *安装openss及其开发包*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *依赖libpcap*  
......  
......  
-- Looking for inet_aton  
-- Looking for inet_aton - found  
CMake Error at cmake/Modules/EttercapLibCheck.cmake:191 (message):  
  libpcap not found!  
....  
....  
[wyb@localhost build]$ yum search libpcap   *查找libpcap*  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Loading mirror speeds from cached hostfile  
 * base: mirrors.yun-idc.com   
 * extras: mirrors.opencas.cn  
 * updates: mirrors.btte.net  
============================= N/S Matched: libpcap =============================  
libpcap-devel.i686 : Libraries and header files for the libpcap library  
libpcap-devel.x86_64 : Libraries and header files for the libpcap library  
libpcap.x86_64 : A system-independent interface for user-level packet capture  
libpcap.i686 : A system-independent interface for user-level packet capture  
  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.  
[wyb@localhost build]$ sudo yum install libpcap-devel   *安装libpcap-devel*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *cmake成功*  
[wyb@localhost build]$ make *make*  
....  
....  
Linking C executable etterlog  
[100%] Built target etterlog  
Scanning dependencies of target man  
[100%] Built target man  
[wyb@localhost build]$ sudo make install    *make install*  
.....  
.....   
-- Installing: /usr/local/share/man/man8/ettercap_curses.8  
-- Installing: /usr/local/share/man/man8/ettercap-pkexec.8  
-- Installing: /usr/local/share/man/man5/etter.conf.5  
[wyb@localhost build]$ cd  
[wyb@localhost ~]$ ettercap -v  *查看版本且能查看，证明安装成功*  
ettercap 0.8.2 copyright 2001-2015 Ettercap Development Team  
ettercap 0.8.2  
[wyb@localhost ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Linux之软件的安装</title>
      <link>http://wyb0.com/posts/linux-software-installation/</link>
      <pubDate>Tue, 19 Apr 2016 19:07:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-software-installation/</guid>
      <description>

&lt;h2 id=&#34;linux上的软件安装可以分为三种方式:6f56884fa7aa3a710d475f797cec45e2&#34;&gt;Linux上的软件安装可以分为三种方式：&lt;/h2&gt;

&lt;h3 id=&#34;1-yum安装:6f56884fa7aa3a710d475f797cec45e2&#34;&gt;1. yum安装&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;yum基于RPM包管理，一次性安装所有依赖包，提供了查找、安装、删除一个、一组
至全部软件包的命令，配置文件在/etc/yum.repos.d/下
主要命令：
yum install gcc g++
yum remove wget
yum list installed //显示已经安装过的软件
yum list   //显示所有可以安装的包
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ wget -h  //验证有没有安装wget
-bash: /usr/bin/wget: No such file or directory
[wyb@localhost ~]$ sudo yum search wget  //通过yum查找wget，看有没有这个软件包
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
============================== N/S Matched: wget ===============================
wget.x86_64 : A utility for retrieving files using the HTTP or FTP protocols

  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.
[wyb@localhost ~]$ sudo yum deplist wget  //列出安装包的依赖项
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
Finding dependencies: 
package: wget.x86_64 1.12-5.el6_6.1
  dependency: libssl.so.10()(64bit)
   provider: openssl.x86_64 1.0.1e-42.el6
   provider: openssl.x86_64 1.0.1e-42.el6_7.1
   provider: openssl.x86_64 1.0.1e-42.el6_7.2
   provider: openssl.x86_64 1.0.1e-42.el6_7.4
[wyb@localhost ~]$ sudo yum install wget  //安装一个或两个软件包
Loaded plugins: fastestmirror, refresh-packagekit, security
Loading mirror speeds from cached hostfile
 * base: mirrors.yun-idc.com
 * extras: mirrors.pubyun.com
 * updates: mirrors.yun-idc.com
Setting up Install Process
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package wget.x86_64 0:1.12-5.el6_6.1 will be installed
--&amp;gt; Finished Dependency Resolution
[wyb@localhost ~]$ sudo yum remove wget   //移除wget
[sudo] password for wyb: 
Loaded plugins: fastestmirror, refresh-packagekit, security
Setting up Remove Process
Resolving Dependencies
--&amp;gt; Running transaction check
---&amp;gt; Package wget.x86_64 0:1.12-5.el6_6.1 will be erased
--&amp;gt; Finished Dependency Resolution
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;2-rpm安装:6f56884fa7aa3a710d475f797cec45e2&#34;&gt;2. rpm安装&lt;/h3&gt;

&lt;p&gt;分为：二进制包和源代码包&lt;br /&gt;
二进制包可直接安装，源码包会由rpm自动编译、安装，安装包常以src、rpm做为后缀&lt;/p&gt;

&lt;h4 id=&#34;主要参数:6f56884fa7aa3a710d475f797cec45e2&#34;&gt;主要参数：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;-ivh *.rpm  安装并显示安装进度
-Uvh *.rpm  升级软件包
-qpl *.rpm  查看rpm软件包内的包含的文件，显示安装后文件释放的绝对路径
-qpi *.rpm  列出rpm软件包的描述信息

-qa 查找所有通过rpm安装的软件
-qf /etc/httpd/conf/httpd.conf  查找文件属于那个安装包
-va 检验软件包有没有丢失信息
-e 软件名    移除软件包
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;用rpm安装软件:6f56884fa7aa3a710d475f797cec45e2&#34;&gt;用rpm安装软件：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ wget http://192.168.1.7/wget-1.12-5.el6_6.1.x86_64.rpm   //使用wget下载软件
--2016-04-18 04:31:27--  http://192.168.1.7/wget-1.12-5.el6_6.1.x86_64.rpm
Connecting to 192.168.1.7:80... connected.
HTTP request sent, awaiting response... 200 OK
Length: 494884 (483K) [application/x-rpm]
Saving to: 鈝get-1.12-5.el6_6.1.x86_64.rpm?

100%[======================================&amp;gt;] 494,884     1006K/s   in 0.5s    

2016-04-18 04:31:27 (1006 KB/s) - 鈝get-1.12-5.el6_6.1.x86_64.rpm鈙aved [494884/494884]
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&#34;先yum-remove-wget卸载wget-然后用rpm安装软件:6f56884fa7aa3a710d475f797cec45e2&#34;&gt;先yum remove wget卸载wget，然后用rpm安装软件&lt;/h6&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ ls
wget-1.12-5.el6_6.1.x86_64.rpm
[wyb@localhost ~]$ sudo rpm -ivh wget-1.12-5.el6_6.1.x86_64.rpm     //安装wget
Preparing...                ########################################### [100%]
   1:wget                   ########################################### [100%]
[wyb@localhost ~]$ sudo rpm -qpl wget-1.12-5.el6_6.1.x86_64.rpm     //查看软件包内的内容
/etc/wgetrc
/usr/bin/wget
/usr/share/doc/wget-1.12
/usr/share/doc/wget-1.12/AUTHORS
/usr/share/doc/wget-1.12/COPYING
/usr/share/doc/wget-1.12/MAILING-LIST
/usr/share/doc/wget-1.12/NEWS
/usr/share/doc/wget-1.12/README
/usr/share/doc/wget-1.12/sample.wgetrc
/usr/share/info/wget.info.gz
/usr/share/locale/be/LC_MESSAGES/wget.mo
/usr/share/locale/bg/LC_MESSAGES/wget.mo
[wyb@localhost ~]$ sudo rpm -qpi wget-1.12-5.el6_6.1.x86_64.rpm     //列出包的描述信息
Name        : wget                         Relocations: (not relocatable)
Version     : 1.12                              Vendor: CentOS
Release     : 5.el6_6.1                     Build Date: Thu 30 Oct 2014 10:22:02 AM PDT
Install Date: (not installed)               Build Host: c6b8.bsys.dev.centos.org
Group       : Applications/Internet         Source RPM: wget-1.12-5.el6_6.1.src.
[wyb@localhost ~]$ rpm -qa |grep wget  //-qa查看所有安装的软件，用grep筛选出来，看有没有安装wget
wget-1.12-5.el6_6.1.x86_64
[wyb@localhost ~]$ which wget
/usr/bin/wget
[wyb@localhost ~]$ sudo rpm -qf /usr/bin/wget   //查看wget这个文件属于那个软件
wget-1.12-5.el6_6.1.x86_64
[wyb@localhost ~]$ sudo rpm -e wget     //写在软件wget
[wyb@localhost ~]$ wget -h
-bash: /usr/bin/wget: No such file or directory
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;3-源码安装:6f56884fa7aa3a710d475f797cec45e2&#34;&gt;3. 源码安装&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;sudo yum groupinstall &amp;quot;Development tools&amp;quot;  //如果你源码安装软件就需要安装这个
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;源代码安装软件：
1、./configure，对系统进行检测然后生成makefile，为下一步的编译做准备
./configure -prefix=/usr软件将安装在/usr下面，可执行文件则会安装在/usr/bin,默认安装在/usr/local/bin
2、make，这一步就是编译，大多数的源码包都经过这一步进行编译，这时软件已经可以用了，不过要通过全路径来执行
实际上它不是编译工具，其实是一个构建工具
3、make install 进行安装，一般你要拥有root权限，因为要向系统写入东西，相当与配环境变量、将二进制文件拷贝到/usr/local/bin下面
4、make clean将由make产生的过程文件清除
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;h3 id=&#34;ps:6f56884fa7aa3a710d475f797cec45e2&#34;&gt;PS:&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;curl -o wget.rpm url可以访问网页，它同时还保存了文件，文件名为wget.rpm
wget url也能下载，文件名为全名
Linux下的env可查看环境变量
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux之基础命令</title>
      <link>http://wyb0.com/posts/linux-basic-command/</link>
      <pubDate>Tue, 19 Apr 2016 10:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-basic-command/</guid>
      <description>

&lt;h3 id=&#34;0x00-ls-显示文件:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x00 ls：显示文件&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ ls
a  a.txt
[wyb@localhost tmp]$ ls -l
total 4
drwxr-xr-x. 2 wyb root 4096 Apr 17 18:23 a
-rw-r--r--. 1 wyb root    0 Apr 17 18:23 a.txt
[wyb@localhost tmp]$ ls -a
.  ..  a  a.txt  .esd-500  .ICE-unix
[wyb@localhost tmp]$ ls -al
total 20
drwxrwxrwt.  5 root root 4096 Apr 17 18:23 .
dr-xr-xr-x. 22 root root 4096 Apr 17 16:31 ..
drwxr-xr-x.  2 wyb  root 4096 Apr 17 18:23 a
-rw-r--r--.  1 wyb  root    0 Apr 17 18:23 a.txt
drwx------.  2 wyb  wyb  4096 Apr 10 19:15 .esd-500
drwxrwxrwt.  2 root root 4096 Apr 17 16:31 .ICE-unix
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-pwd-查看当前工作路径:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x02 pwd：查看当前工作路径&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ pwd  
/home/wyb
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x03-cd-切换目录:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x03 cd：切换目录&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ ls
Desktop  Documents  Downloads  Music  Pictures  Public  Templates  Videos
[wyb@localhost ~]$ cd Desktop/     //相对路径
[wyb@localhost Desktop]$ cd /tmp/a    //绝对路径
[wyb@localhost a]$ pwd
/tmp/a
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x04-mkdir-新建文件夹:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x04 mkdir：新建文件夹&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ ls
a  a.txt
[wyb@localhost tmp]$ mkdir bbb
[wyb@localhost tmp]$ ls
a  a.txt  bbb
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x05-touch-vim-新建文件:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x05 touch/vim：新建文件&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ ls
a  a.txt  bbb
[wyb@localhost tmp]$ touch bbb.txt
[wyb@localhost tmp]$ ls
a  a.txt  bbb  bbb.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x06-rm-删除文件:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x06 rm：删除文件&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ ls
a  a.txt  bbb  bbb.txt  c.txt
[wyb@localhost tmp]$ rm c.txt   //删除文件c.txt
[wyb@localhost tmp]$ ls
a  a.txt  bbb  bbb.txt
[wyb@localhost tmp]$ rm a   //删除文件夹a，结果不能删除
rm: cannot remove `a&#39;: Is a directory
[wyb@localhost tmp]$ rm -r a   //加上-r才能删除文件夹
[wyb@localhost tmp]$ ls
a.txt  bbb  bbb.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x07-ifconfig-查看网卡的信息:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x07 ifconfig：查看网卡的信息&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ ifconfig
eth0    Link encap:Ethernet  HWaddr 00:0C:29:56:B4:10  
        inet addr:192.168.63.131  Bcast:192.168.63.255  Mask:255.255.255.0
        inet6 addr: fe80::20c:29ff:fe56:b410/64 Scope:Link
        UP BROADCAST RUNNING MULTICAST  MTU:1500  Metric:1
        RX packets:67099 errors:0 dropped:0 overruns:0 frame:0
        TX packets:34939 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:1000 
        RX bytes:94042525 (89.6 MiB)  TX bytes:1995748 (1.9 MiB)

lo      Link encap:Local Loopback  
        inet addr:127.0.0.1  Mask:255.0.0.0
        inet6 addr: ::1/128 Scope:Host
        UP LOOPBACK RUNNING  MTU:16436  Metric:1
        RX packets:0 errors:0 dropped:0 overruns:0 frame:0
        TX packets:0 errors:0 dropped:0 overruns:0 carrier:0
        collisions:0 txqueuelen:0 
        RX bytes:0 (0.0 b)  TX bytes:0 (0.0 b)
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x08-netstat-查找网络连接信息:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x08 netstat：查找网络连接信息&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;netstat -l   //listen状态的
netstat -an  //显示所有的连接信息，且以ip地址代替名称
netstat -t   //显示tcp连接信息
netstat -u   //显示udp连接信息
LISTENING   //监听端口状态
ESTABLSHED  //建立连接
CLOSE_WAIT  //对方主动断开连接，此时我方就会变为这个状态，我方要调用close()
TIME_WAIT   //我方主动调用close(),对方收到后变为CLOSE_WAIT
[root@localhost ~]# netstat -l -n
Active Internet connections (only servers)
Proto Recv-Q Send-Q Local Address               Foreign Address远程         State      
tcp        0      0 0.0.0.0:22                  0.0.0.0:*                   LISTEN  所有ip均可连接22
tcp        0      0 127.0.0.1:631               0.0.0.0:*                   LISTEN
tcp        0      0 127.0.0.1:25                0.0.0.0:*                   LISTEN  只有127.0.0.1连接25端口
tcp        0      0 :::22                       :::*                        LISTEN      
tcp        0      0 ::1:631                     :::*                        LISTEN  
Active UNIX domain sockets (only servers)
Proto RefCnt Flags       Type       State         I-Node Path
unix  2      [ ACC ]     STREAM     LISTENING     14229  public/cleanup
unix  2      [ ACC ]     STREAM     LISTENING     14236  private/tlsmgr
unix  2      [ ACC ]     STREAM     LISTENING     14240  private/rewrite
unix  2      [ ACC ]     STREAM     LISTENING     14244  private/bounce
unix  2      [ ACC ]     STREAM     LISTENING     14248  private/defer
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x09-nslookup-查看dns信息:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x09 nslookup：查看DNS信息&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;nslookup 查看ip和域名的相互映射
nslookup www.baidu.com   //返回一些信息
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0a-ping:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x0A ping&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;ping -c 3 www.baidu.com   //指定ping百度3次
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0b-last-查看近期的登陆信息:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x0B last：查看近期的登陆信息&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[root@localhost ~]# last
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0c-find-查找文件:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x0C find：查找文件&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;which vim   //查看可执行文件的位置
*which是通过 PATH环境变量到该路径内查找可执行文件，所以基本的功能是寻找可执行文件* 

whereis、locate也可查找文件,它们是使用数据库来搜索数据

find . -name 1.txt  //查找当前文件夹及子目录下的1.txt、
find . -name *.txt  //使用通配符
find /bin -perm 755 //返回的都是755权限的文件  
find /bin -perm 4755  //返回有gid(即s权限)的文件    2是gid
[wyb@localhost tmp]$ sudo find / -name *.log    //根目录下查找名字以log结尾的文件
/var/spool/plymouth/boot.log
/var/log/wpa_supplicant.log
/var/log/dracut.log
/var/log/vmware-tools-upgrader.log
[wyb@localhost ~]$ find /bin -perm 755 | xargs ls -al   //前一个命令的输出作为后一个命令的输入
-rwxr-xr-x. 1 root root    123 Feb 21  2013 /bin/alsaunmute
-rwxr-xr-x. 1 root root  27776 Jun 22  2012 /bin/arch
-rwxr-xr-x. 1 root root  26264 Jun 22  2012 /bin/basename
-rwxr-xr-x. 1 root root 938768 Feb 21  2013 /bin/bash
-rwxr-xr-x. 1 root root  48568 Jun 22  2012 /bin/cat
-rwxr-xr-x. 1 root root  55472 Jun 22  2012 /bin/chgrp
-rwxr-xr-x. 1 root root  52472 Jun 22  2012 /bin/chmod
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0d-grep:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x0D grep&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;//可以遍历查询mkr文件夹下含有字符串&amp;quot;reber&amp;quot;的文件及字符串所在行
reber@WYB:~$ grep -Rn &amp;quot;reber&amp;quot; mkdir   
mkr/cc:3:reber
mkr/a/a.txt:3:reber
mkr/a/b.txt:16:reber
mkr/b/xx:8:reber
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0e-cat-nl:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x0E cat/nl&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;前者显示
后者显示的同时有行号
[wyb@localhost tmp]$ cat &amp;gt; a.txt  //创建文件同时写入数据
this is a.txt
^C
[wyb@localhost tmp]$ cat &amp;gt; b.txt
this is b.txt
^C
[wyb@localhost tmp]$ cat a.txt b.txt &amp;gt; c.txt   //合并文件
[wyb@localhost tmp]$ cat c.txt 
this is a.txt
this is b.txt
[wyb@localhost tmp]$ cat -n c.txt   //获取文件内容切添加行号
 1  this is a.txt
 2  this is b.txt
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0f-head:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x0F head&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ head /etc/passwd   //默认显示前10行
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin
lp:x:4:7:lp:/var/spool/lpd:/sbin/nologin
sync:x:5:0:sync:/sbin:/bin/sync
shutdown:x:6:0:shutdown:/sbin:/sbin/shutdown
halt:x:7:0:halt:/sbin:/sbin/halt
mail:x:8:12:mail:/var/spool/mail:/sbin/nologin
uucp:x:10:14:uucp:/var/spool/uucp:/sbin/nologin

[wyb@localhost tmp]$ head -n 4 /etc/passwd  //设置显示前4行
root:x:0:0:root:/root:/bin/bash
bin:x:1:1:bin:/bin:/sbin/nologin
daemon:x:2:2:daemon:/sbin:/sbin/nologin
adm:x:3:4:adm:/var/adm:/sbin/nologin

[wyb@localhost tmp]$ head -c 100 d.txt //显示前100个字节
     1  this is a.txt
     2  this is b.txt
this is add content
     1  this is a.txt
     2  this is b.[wyb@localhost tmp]$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x10-tail:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x10 tail&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ tail -f a.txt  //实时显示文件后10行
this is a.txt
111111
aaaaaa
^C

[wyb@localhost tmp]$ tail -n 3 d.txt //显示文件后3行
     1  this is a.txt
     2  this is b.txt
this is add content

[wyb@localhost tmp]$ tail -c 100 d.txt //显示后100个字节
  2     this is b.txt
this is add content
     1  this is a.txt
     2  this is b.txt
this is add content
[wyb@localhost tmp]$ 
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x11-scp:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x11 scp&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;向远程服务器put文件和文件夹，默认就是22端口
scp -P 22 ./aa.txt reber@123.206.78.220:/home/reber
scp -r ./bb reber@123.206.78.220:/home/reber

从服务器下载文件和文件夹
scp -P 2222 ubuntu@123.22.38.215:/home/reber/a.txt D:/a.txt
scp -P 2222 ubuntu@123.22.38.215:/home/reber/test D:/test/
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x12-磁盘:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x12 磁盘&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;fdisk /dev/sdb
sudo mkfs.ext3 /dev/sdb1
mount -t ext3 -o rw /dev/sdb1 /home/aaa  //-o指定权限
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x13-finger:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x13 finger&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;finger可以查看用户登录情况
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x14-时间同步:21b2668fb5ccdace1a704ef1fc5c2ed0&#34;&gt;0x14 时间同步&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;ntpdate time.nist.gov //需要root权限
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Linux之服务和计划任务</title>
      <link>http://wyb0.com/posts/linux-service-and-planning-tasks/</link>
      <pubDate>Tue, 19 Apr 2016 10:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-service-and-planning-tasks/</guid>
      <description>

&lt;h2 id=&#34;服务:644df5cd1dfd501e2750a3124a977820&#34;&gt;服务：&lt;/h2&gt;

&lt;p&gt;在后台运行的软件就叫服务
参数：
start
stop
restart&lt;/p&gt;

&lt;p&gt;apache启动后默认降权&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;service httpd start实际调用的是/etc/init.d/httpd这个shell脚本
而/etc/init.d是软连接文件夹，实际在/etc/rc.d/init.d
[wyb@localhost ~]$ ls -al /etc/init.d
lrwxrwxrwx. 1 root root 11 Apr 11 02:54 /etc/init.d -&amp;gt; rc.d/init.d
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;添加服务:644df5cd1dfd501e2750a3124a977820&#34;&gt;添加服务：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;将脚本放在/etc/init.d/下即可
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;若要自启则:644df5cd1dfd501e2750a3124a977820&#34;&gt;若要自启则：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;chkconfig --list   //查看chk管理的自启动项
chkconfig --add httpd   添加到chk管理里面
chkconfig --del httpd   将httpd移出chk管理
chkcofnig --level 35 httpd on  init的345将开启
chkcofnig --level 345 httpd off
/etc/rc.d/rc3.d和rc5.d里将有httpd
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;计划任务:644df5cd1dfd501e2750a3124a977820&#34;&gt;计划任务：&lt;/h2&gt;

&lt;p&gt;启动方式：
系统启动时将有一个脚本将cron服务开启，启动后cron命令会搜索全局型配置文件/etc/crontab和位于/var/spool/corn目录下以用户名命名的文件&lt;/p&gt;

&lt;p&gt;cron：每分钟醒来依次查看当前是否有需要运行的命令，最小单位就是分钟&lt;/p&gt;

&lt;h4 id=&#34;添加任务:644df5cd1dfd501e2750a3124a977820&#34;&gt;添加任务：&lt;/h4&gt;

&lt;p&gt;格式：分(0-59) 时 日 月 周(0-6) 命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;第一种方法：
crontab -e  //任何权限都可以运行这个命令，针对某个用户

[wyb@localhost spool]$ crontab -e   //进入编辑，实际是写入到/var/spool/cron/username这个文件中
no crontab for wyb - using an empty one
*/1 * * * * date &amp;gt;&amp;gt; /tmp/date.txt   //每一分钟都向date.txt写入
1 * * * * date &amp;gt;&amp;gt; /tmp/date1.txt        //在第一分钟时将数据写入
~
~
~
&amp;quot;/tmp/crontab.T8sDqC&amp;quot; 1L, 34C written
crontab: installing new crontab
[wyb@localhost spool]$ sudo ls /var/spool/cron/
wyb
[wyb@localhost spool]$ sudo cat /var/spool/cron/wyb
*/1 * * * * date &amp;gt;&amp;gt; /tmp/date.txt
1 * * * * date &amp;gt;&amp;gt; /tmp/date1.txt
[wyb@localhost spool]$ 

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;第二种方法：
编辑/etc/crontab文件    //要具有root权限，针对系统任务
vim /etc/crontab会以root权限执行，不推荐使用
01 * * * *　用户名　命令 date &amp;gt;&amp;gt; /tmp/date2.txt在每个小时的第一分钟执行
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;查看用户任务:644df5cd1dfd501e2750a3124a977820&#34;&gt;查看用户任务：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ sudo cat /var/spool/cron/wyb   //用户的计划任务
*/1 * * * * date &amp;gt;&amp;gt; /tmp/date.txt
[wyb@localhost tmp]$ sudo tail -5 /etc/crontab   //系统计划任务
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
*/1 * * * * wyb date &amp;gt;&amp;gt; /tmp/wyb.txt
[wyb@localhost tmp]$ crontab -l   //只能显示普通用户定义的任务
*/1 * * * * date &amp;gt;&amp;gt; /tmp/date.txt
[wyb@localhost tmp]$ crontab -r   //移除用户所有计划任务，不能移除系统定的计划任务，即不能移除在/etc/crontab中的任务
[wyb@localhost tmp]$ crontab -l
no crontab for wyb
[wyb@localhost tmp]$ sudo tail -3 /etc/crontab 
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
*/1 * * * * wyb date &amp;gt;&amp;gt; /tmp/wyb.txt
[wyb@localhost tmp]$ 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux之用户组</title>
      <link>http://wyb0.com/posts/linux-user-group/</link>
      <pubDate>Sun, 17 Apr 2016 20:48:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-user-group/</guid>
      <description>&lt;p&gt;初始组只有一个就是/etc/passwd里gid显示的，有效组可以有多个
&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;useradd xm   用户xm会默认加到xm组
useradd -g fans xm  将xm的所属组改为fans
useradd -G fans xm  初始组为xm，有效组为fans
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;useradd xiaoming
usermod -g fans xiaoming  只有一个初始组，被修改为fans
useradd xm
usermod -G fans xm    xm用户会有两个组，初始组为xm，又添加一个有效组fans
usermod -G fans1 xm    xm用户两个组，初始组为xm，有效组更改为fans1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br/&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;用户创建的文件拥有者是初始组
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux之网络配置</title>
      <link>http://wyb0.com/posts/linux-network-configuration/</link>
      <pubDate>Sun, 17 Apr 2016 17:58:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-network-configuration/</guid>
      <description>

&lt;h2 id=&#34;第一种方法:73541a4387943c0c56a4988ab81ab165&#34;&gt;第一种方法&lt;/h2&gt;

&lt;h3 id=&#34;分5步:73541a4387943c0c56a4988ab81ab165&#34;&gt;分5步：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;1. 启动网卡：  
$ ifconfig eth0 up/down
2. 配置ip：  
$ ifconfig eth0 192.168.22.231 netmask 255.255.255.0
3. 配置网关：
$ route add default gw 192.168.22.1
4. 配DNS：  
$ vim /etc/resolv.conf  
$ echo &amp;quot;nameserver 114.114.114.114&amp;quot; &amp;gt; /etc/resolv.cof
5. 重启网络使配置生效：  
6. 用文件配置ip信息
$ /etc/sysconfig/network-scripts/ifcfg-eth0

ps:添加静态路由
route add -net 10.211.55.0 netmask 255.255.255.0 dev eth3
//添加静态路由添加网络10.211.55.0，从eth0出去
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;第二种方法:73541a4387943c0c56a4988ab81ab165&#34;&gt;第二种方法&lt;/h2&gt;

&lt;h3 id=&#34;分1步:73541a4387943c0c56a4988ab81ab165&#34;&gt;分1步：&lt;/h3&gt;

&lt;p&gt;打开文件/etc/sysconfig/network-scripts/ifcfg-eth0,在里面添加相应信息:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;DEVICE=ethl
ONBOOT=yes
BOOTPROTO=static
IPADDR=
NETMASK=
GATEWAY=
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;打开ip转发:73541a4387943c0c56a4988ab81ab165&#34;&gt;打开ip转发&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;echo &amp;quot;1&amp;quot; &amp;gt;&amp;gt; /proc/sys/net/ipv4/ip_forward
或者vim /etc/sysctl.conf
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>Linux之权限(重点)</title>
      <link>http://wyb0.com/posts/linux-permission-settings/</link>
      <pubDate>Sun, 17 Apr 2016 10:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-permission-settings/</guid>
      <description>

&lt;p&gt;主要有三种参数：rwx
对于文件来说：分别是读/写/执行&lt;br /&gt;
对于目录来说：r读目录结构；w操作目录结构；x进入目录&lt;br /&gt;
如：drwxr&amp;ndash;r&amp;ndash; 3 root root 4096 Jun 25 08:35 .ssh&lt;br /&gt;
若账号vbird不属于root群组，则vbird可以查询此目录下的文件名，没有x权限所以不能切换到此目录中&lt;/p&gt;

&lt;h2 id=&#34;文件权限:60896f2886244ae9e28f443be765d95d&#34;&gt;文件权限&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&#34;chmod-x:60896f2886244ae9e28f443be765d95d&#34;&gt;chmod -x&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[root@localhost tmp]# ls -l
total 0
-rwxrwxrwx. 1 root root 0 Apr 16 20:32 a.txt
[root@localhost tmp]# chmod -x a.txt   去除ugo的x权限
[root@localhost tmp]# ls -l
total 0
-rw-rw-rw-. 1 root root 0 Apr 16 20:32 a.txt
[root@localhost tmp]# ls -l a.txt 
-rwxrw-rw-. 1 root root 9 Apr 16 20:42 a.txt
[root@localhost tmp]# cat a.txt 
echo aaa
[root@localhost tmp]# ./a.txt    直接执行了a.txt中的echo命令
aaa
[root@localhost tmp]# 
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;h3 id=&#34;chmod-r:60896f2886244ae9e28f443be765d95d&#34;&gt;chmod -R&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[root@localhost tmp]# ls -l a;ls -l a/a.txt 
total 0
-rw-r--r--. 1 root root 0 Apr 16 20:35 a.txt
-rw-r--r--. 1 root root 0 Apr 16 20:35 a/a.txt
[root@localhost tmp]# chmod -R o+x a  遍历更改a文件夹及a下所有文件的权限
[root@localhost tmp]# ls -l a;ls -l a/a.txt 
total 0
-rw-r--r-x. 1 root root 0 Apr 16 20:35 a.txt
-rw-r--r-x. 1 root root 0 Apr 16 20:35 a/a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;h3 id=&#34;chmod-7-a-txt:60896f2886244ae9e28f443be765d95d&#34;&gt;chmod 7 a.txt&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[root@localhost tmp]# ll a.txt 
-rw-rw-rw-. 1 root root 0 Apr 16 20:32 a.txt
[root@localhost tmp]# chmod 7 a.txt    //只更改其他人的权限，ug赋为0
[root@localhost tmp]# ll a.txt 
-------rwx. 1 root root 0 Apr 16 20:32 a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;文件夹权限:60896f2886244ae9e28f443be765d95d&#34;&gt;文件夹权限：&lt;/h2&gt;

&lt;p&gt;可读是指能看到里面的文件&lt;br/&gt;
可写是指能在里面删除、增加文件&lt;br/&gt;
文件夹可执行是指能cd进去&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;&lt;h3 id=&#34;不能进入没有x权限的文件夹:60896f2886244ae9e28f443be765d95d&#34;&gt;不能进入没有x权限的文件夹：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost Desktop]$ ls -l
total 4
dr--------. 2 wyb wyb 4096 Apr 17 01:25 aa
[wyb@localhost Desktop]$ cd aa/
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;h3 id=&#34;不能删除有777权限的文件:60896f2886244ae9e28f443be765d95d&#34;&gt;不能删除有777权限的文件：&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost Desktop]$ ls -l;ls -l aa/a.txt 
total 4
dr-xr-xr-x. 2 wyb wyb 4096 Apr 17 01:25 aa
-rwxrwxrwx. 1 wyb wyb 0 Apr 17 01:25 aa/a.txt
[wyb@localhost Desktop]$ rm aa/a.txt 
rm: cannot remove `aa/a.txt&#39;: Permission denied  //因为没有aa的x权限，所以不能删除aa下的文件
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;chown:60896f2886244ae9e28f443be765d95d&#34;&gt;chown：&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;普通用户不能将自己的文件改变成其他的拥有者。其操作权限一般为管理员。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;//将aaa.txt的所属由xiao改变为fans组，属主为xiaofang
xiao$ chown xiaofang:fans aaa.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&#34;一般用visudo添加sudo:60896f2886244ae9e28f443be765d95d&#34;&gt;一般用visudo添加sudo&lt;/h4&gt;
</description>
    </item>
    
    <item>
      <title>Linux之vim</title>
      <link>http://wyb0.com/posts/linux-vim/</link>
      <pubDate>Fri, 15 Apr 2016 21:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-vim/</guid>
      <description>

&lt;h3 id=&#34;vim的安装及配置:8b23eccba5c1dfb5572ad8245a1c04e2&#34;&gt;Vim的安装及配置：&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;安装vim&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;yum install vim
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;配置文件的位置&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;在目录 /etc/ 下面，有个名为vimrc的 文件，
这是系统中公共的vim配置文件，对所有用户都有效。
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;设置语法高亮显示&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;1) 打开vimrc，添加以下语句来使得语法高亮显示：
    syntax on
2) 如果此时语法还是没有高亮显示，那么在/etc目录下的profile文件中添加以下语句：
    export TERM=xterm-color
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;设置Windows风格的C/C++自动缩进（添加以下set语句到vimrc中）&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;1）设置Tab为4个空格
    set tabstop=4 # 设定tab长度为4
    set softtabstop=4 # 使按退格键时可以一次删除4个空格
    set shiftwidth=4 # 表示每一级缩进的长度，一般设置成跟softtabstop一样
    set expandtab/noexpandtab # 缩进用空格/制表符表示
2）自动缩进
    set autoindent/noautoindent # 设置每行的缩进值与上一行相等/不相等
3）使用 C/C++ 语言的自动缩进方式
    set cindent
4）在左侧显示文本的行号
    set nu
5）搜索设置
    set incsearch # 输入搜索内容时就显示搜索结果
    set hlsearch # 搜索时高亮显示被找到的文本
6）如果没有下列语句，就加上吧
    if &amp;amp;term==&amp;quot;xterm&amp;quot;
        set t_Co=8
        set t_Sb=^[[4%dm
        set t_Sf=^[[3%dm
    endif
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;vim编辑器的三种模式:8b23eccba5c1dfb5572ad8245a1c04e2&#34;&gt;Vim编辑器的三种模式&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;命令行模式&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;$vim 文件名 #直接进入命令行模式
Ctrl+ZZ# 可保存文件

5dd/4yy# 剪切5行/复制4行
p      # 粘贴到当前行后面
u      # 一直点的话会一直撤销，直到回复到文件最初状态

gg/G   # 光标移动到首行/末行
H/M/L  # 光标移动到屏幕显示的首行/中间/末行
0/$    # 光标移动到行首/行尾
w/b    # 光标跳到下一个/上一个单词

o      # 在下一行插入
Ctrl+g # 显示文本的信息

dt%      # 删除所有内容直到遇到 %
d0/d$或D # 删除从光标到行首/行尾的字符
3dw      # 删除3个单词

v+方向键       # 可以从当前光标向各方向选择字符或行
4+向下的方向键 # 光标向下移动4行

/和？# 向下和向上搜索
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;末行模式&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;:wq  # 推出并保存
:wq! # 强制退出并保存
:num # 跳到第n行
:$   # 移动到最后一行
:/aaaa #向下搜aaaa这个字符串  n可以定位到下一个匹配的字符，N向上
:?aaaa #向上搜索
:%s/set/ddd/g #将字符串set全部替换为ddd
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;插入模式&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;在命令行模式直接点击i即可进入
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
  </channel>
</rss>