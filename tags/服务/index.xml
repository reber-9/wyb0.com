<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>服务 on </title>
    <link>http://wyb0.com/tags/%E6%9C%8D%E5%8A%A1/</link>
    <description>Recent content in 服务 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017 Reber. All Rights Reserved.</copyright>
    <lastBuildDate>Fri, 10 Mar 2017 10:34:40 +0800</lastBuildDate>
    <atom:link href="http://wyb0.com/tags/%E6%9C%8D%E5%8A%A1/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>在vps上搭建Shadowsocks</title>
      <link>http://wyb0.com/posts/%E5%9C%A8vps%E4%B8%8A%E6%90%AD%E5%BB%BAShadowsocks/</link>
      <pubDate>Fri, 10 Mar 2017 10:34:40 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/%E5%9C%A8vps%E4%B8%8A%E6%90%AD%E5%BB%BAShadowsocks/</guid>
      <description>

&lt;blockquote&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/anime/anime005.jpg&#34; alt=&#34;某科学的超电磁炮&#34;&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;h3 id=&#34;0x00-环境:b1b2822ac73153f8fee4a8255ec12774&#34;&gt;0x00 环境&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Ubuntu 14.04.1 LTS&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-安装与配置:b1b2822ac73153f8fee4a8255ec12774&#34;&gt;0x01 安装与配置&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;reber@localhost:~$ sudo apt-get update
reber@localhost:~$ python --version
Python 2.7.6
reber@localhost:~$ sudo apt-get install python-gevent python-pip
reber@localhost:~$ sudo pip install shadowsocks
reber@localhost:~$ vim /home/reber/shadowsocks.json
    {
        &amp;quot;server&amp;quot;:&amp;quot;服务器 IP 地址&amp;quot;, # 服务器 IP (IPv4/IPv6)
        &amp;quot;server_port&amp;quot;:8388, # 监听的服务器端口
        &amp;quot;local_address&amp;quot;: &amp;quot;127.0.0.1&amp;quot;, # 本地监听的 IP 地址
        &amp;quot;local_port&amp;quot;:1080, # 本地端端口
        &amp;quot;password&amp;quot;:&amp;quot;mypassword&amp;quot;, # 密码
        #&amp;quot;port_password&amp;quot;:
        #{
        #    &amp;quot;40001&amp;quot;: &amp;quot;password1&amp;quot;,
        #    &amp;quot;40002&amp;quot;: &amp;quot;password2&amp;quot;,
        #    &amp;quot;40003&amp;quot;: &amp;quot;password3&amp;quot;
        #},
        #&amp;quot;_comment&amp;quot;:
        #{
        #    &amp;quot;40001&amp;quot;: &amp;quot;xiaoming&amp;quot;,
        #    &amp;quot;40002&amp;quot;: &amp;quot;lilei&amp;quot;,
        #    &amp;quot;40003&amp;quot;: &amp;quot;mike&amp;quot;
        #}
        &amp;quot;timeout&amp;quot;:300, # 超时时间（秒）
        &amp;quot;method&amp;quot;:&amp;quot;aes-256-cfb&amp;quot;, # 加密方式
        # 若Linux内核在3.7+，可开启fast_open降低延迟
        # 开启方法：echo 3 &amp;gt; /proc/sys/net/ipv4/tcp_fastopen
        &amp;quot;fast_open&amp;quot;: false, 
        &amp;quot;workers&amp;quot;: 1 # works数量，默认为 1
    }
reber@localhost:~$ sudo apt-get install python-m2crypto
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-服务端启动:b1b2822ac73153f8fee4a8255ec12774&#34;&gt;0x02 服务端启动&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# 前台运行
reber@localhost:~$ sudo ssserver -c /home/reber/shadowsocks.json
# 后台运行
reber@localhost:~$ sudo nohup ssserver -c /home/reber/shadowsocks.json &amp;gt; /dev/null 2&amp;gt;&amp;amp;1 &amp;amp;
# 关闭服务
reber@localhost:~$ sudo killall ssserver 
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;0x03-本地使用:b1b2822ac73153f8fee4a8255ec12774&#34;&gt;0x03 本地使用&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;添加如下配置

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/use_ss.png&#34; alt=&#34;使用Shadowsocks&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Linux之服务和计划任务</title>
      <link>http://wyb0.com/posts/Linux%E4%B9%8B%E6%9C%8D%E5%8A%A1%E5%92%8C%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</link>
      <pubDate>Tue, 19 Apr 2016 10:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B9%8B%E6%9C%8D%E5%8A%A1%E5%92%8C%E8%AE%A1%E5%88%92%E4%BB%BB%E5%8A%A1/</guid>
      <description>

&lt;h2 id=&#34;服务:27cc3293dbbe0ce67591fd2340661c04&#34;&gt;服务：&lt;/h2&gt;

&lt;p&gt;在后台运行的软件就叫服务
参数：
start
stop
restart&lt;/p&gt;

&lt;p&gt;apache启动后默认降权&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;service httpd start实际调用的是/etc/init.d/httpd这个shell脚本
而/etc/init.d是软连接文件夹，实际在/etc/rc.d/init.d
[wyb@localhost ~]$ ls -al /etc/init.d
lrwxrwxrwx. 1 root root 11 Apr 11 02:54 /etc/init.d -&amp;gt; rc.d/init.d
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;添加服务:27cc3293dbbe0ce67591fd2340661c04&#34;&gt;添加服务：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;将脚本放在/etc/init.d/下即可
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;若要自启则:27cc3293dbbe0ce67591fd2340661c04&#34;&gt;若要自启则：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;chkconfig --list   //查看chk管理的自启动项
chkconfig --add httpd   添加到chk管理里面
chkconfig --del httpd   将httpd移出chk管理
chkcofnig --level 35 httpd on  init的345将开启
chkcofnig --level 345 httpd off
/etc/rc.d/rc3.d和rc5.d里将有httpd
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;计划任务:27cc3293dbbe0ce67591fd2340661c04&#34;&gt;计划任务：&lt;/h2&gt;

&lt;p&gt;启动方式：
系统启动时将有一个脚本将cron服务开启，启动后cron命令会搜索全局型配置文件/etc/crontab和位于/var/spool/corn目录下以用户名命名的文件&lt;/p&gt;

&lt;p&gt;cron：每分钟醒来依次查看当前是否有需要运行的命令，最小单位就是分钟&lt;/p&gt;

&lt;h4 id=&#34;添加任务:27cc3293dbbe0ce67591fd2340661c04&#34;&gt;添加任务：&lt;/h4&gt;

&lt;p&gt;格式：分(0-59) 时 日 月 周(0-6) 命令&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;第一种方法：
crontab -e  //任何权限都可以运行这个命令，针对某个用户

[wyb@localhost spool]$ crontab -e   //进入编辑，实际是写入到/var/spool/cron/username这个文件中
no crontab for wyb - using an empty one
*/1 * * * * date &amp;gt;&amp;gt; /tmp/date.txt   //每一分钟都向date.txt写入
1 * * * * date &amp;gt;&amp;gt; /tmp/date1.txt        //在第一分钟时将数据写入
~
~
~
&amp;quot;/tmp/crontab.T8sDqC&amp;quot; 1L, 34C written
crontab: installing new crontab
[wyb@localhost spool]$ sudo ls /var/spool/cron/
wyb
[wyb@localhost spool]$ sudo cat /var/spool/cron/wyb
*/1 * * * * date &amp;gt;&amp;gt; /tmp/date.txt
1 * * * * date &amp;gt;&amp;gt; /tmp/date1.txt
[wyb@localhost spool]$ 

&lt;/code&gt;&lt;/pre&gt;

&lt;pre&gt;&lt;code&gt;第二种方法：
编辑/etc/crontab文件    //要具有root权限，针对系统任务
vim /etc/crontab会以root权限执行，不推荐使用
01 * * * *　用户名　命令 date &amp;gt;&amp;gt; /tmp/date2.txt在每个小时的第一分钟执行
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;查看用户任务:27cc3293dbbe0ce67591fd2340661c04&#34;&gt;查看用户任务：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost tmp]$ sudo cat /var/spool/cron/wyb   //用户的计划任务
*/1 * * * * date &amp;gt;&amp;gt; /tmp/date.txt
[wyb@localhost tmp]$ sudo tail -5 /etc/crontab   //系统计划任务
# |  |  |  .------- month (1 - 12) OR jan,feb,mar,apr ...
# |  |  |  |  .---- day of week (0 - 6) (Sunday=0 or 7) OR sun,mon,tue,wed,thu,fri,sat
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
*/1 * * * * wyb date &amp;gt;&amp;gt; /tmp/wyb.txt
[wyb@localhost tmp]$ crontab -l   //只能显示普通用户定义的任务
*/1 * * * * date &amp;gt;&amp;gt; /tmp/date.txt
[wyb@localhost tmp]$ crontab -r   //移除用户所有计划任务，不能移除系统定的计划任务，即不能移除在/etc/crontab中的任务
[wyb@localhost tmp]$ crontab -l
no crontab for wyb
[wyb@localhost tmp]$ sudo tail -3 /etc/crontab 
# |  |  |  |  |
# *  *  *  *  * user-name command to be executed
*/1 * * * * wyb date &amp;gt;&amp;gt; /tmp/wyb.txt
[wyb@localhost tmp]$ 
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>