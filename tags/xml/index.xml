<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Xml on Reber&#39;s Blog</title>
    <link>http://wyb0.com/tags/xml/</link>
    <description>Recent content in Xml on Reber&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2016-2017 Reber. All Rights Reserved.</copyright>
    <lastBuildDate>Sat, 09 Dec 2017 23:02:22 +0800</lastBuildDate>
    
	<atom:link href="http://wyb0.com/tags/xml/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>XXE漏洞</title>
      <link>http://wyb0.com/posts/xxe/</link>
      <pubDate>Sat, 09 Dec 2017 23:02:22 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/xxe/</guid>
      <description>0x00 XXE  XXE漏洞是针对使用XML交互的Web应用程序的攻击方法
XML文件作为配置文件(spring、Struts2等)、文档结构说明文件(PDF、RSS等)、图片格式文件(SVG header)应用比较广泛
 0x01 XML格式  &amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;utf-8&amp;quot;?&amp;gt; &amp;lt;!--xml声明--&amp;gt; &amp;lt;!--文档类型定义--&amp;gt; &amp;lt;!DOCTYPE note [ &amp;lt;!ELEMENT note (to,from,heading,body)&amp;gt; &amp;lt;!ELEMENT to (#PCDATA)&amp;gt; &amp;lt;!ELEMENT from (#PCDATA)&amp;gt; &amp;lt;!ELEMENT heading (#PCDATA)&amp;gt; &amp;lt;!ELEMENT body (#PCDATA)&amp;gt; ]&amp;gt; &amp;lt;!--文档元素--&amp;gt; &amp;lt;note&amp;gt; &amp;lt;to&amp;gt;Tom&amp;lt;/to&amp;gt; &amp;lt;from&amp;gt;John&amp;lt;/from&amp;gt; &amp;lt;heading&amp;gt;Reminder&amp;lt;/heading&amp;gt; &amp;lt;body&amp;gt;Hi,I’am John&amp;lt;/body&amp;gt; &amp;lt;/note&amp;gt;   0x02 内部声明与外部引用  &amp;lt;!--内部声明实体--&amp;gt; &amp;lt;!ENTITY 实体名称 &amp;quot;实体的值&amp;quot;&amp;gt; &amp;lt;!--引用外部实体--&amp;gt; &amp;lt;!ENTITY 实体名称 SYSTEM &amp;quot;URI&amp;quot;&amp;gt;   0x03 XXE漏洞  外部引用时可能会出现漏洞，几种payload：   &amp;lt;?xml version=&amp;quot;1.0&amp;quot;?&amp;gt; &amp;lt;!DOCTYPE a [ &amp;lt;!</description>
    </item>
    
    <item>
      <title>使用Python读写xml文件</title>
      <link>http://wyb0.com/posts/python-read-and-write-xml/</link>
      <pubDate>Thu, 20 Jul 2017 14:20:26 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/python-read-and-write-xml/</guid>
      <description>0x00 解析XML的方法  SAX (simple API for XML)
python 标准库包含SAX解析器，SAX用事件驱动模型，通过在解析XML的过程中触发一个个的事件并调用用户定义的回调函数来处理XML文件。
 DOM(Document Object Model)
将XML数据在内存中解析成一个树，通过对树的操作来操作XML。
 ElementTree(元素树)
ElementTree就像一个轻量级的DOM，具有方便友好的API。代码可用性好，速度快，消耗内存少。
   我在这里使用ElementTree  0x01 Element对象的属性  每个Element对象都具有以下属性：
  tag：string对象，表示数据代表的种类 attrib：dictionary对象，表示附有的属性 text：string对象，表示element的内容 tail：string对象，表示element闭合之后的尾迹 若干子元素（child elements）   &amp;gt;&amp;gt;&amp;gt; from xml.etree import ElementTree as ET &amp;gt;&amp;gt;&amp;gt; xml = &amp;quot;&amp;quot;&amp;quot;&amp;lt;books&amp;gt; ... &amp;lt;book id=&#39;37476&#39;&amp;gt;aaaa&amp;lt;/book&amp;gt; ... &amp;lt;book id=&#39;83727&#39;&amp;gt;bbbb&amp;lt;/book&amp;gt; ... &amp;lt;/books&amp;gt;&amp;quot;&amp;quot;&amp;quot; &amp;gt;&amp;gt;&amp;gt; root = ET.fromstring(xml) &amp;gt;&amp;gt;&amp;gt; root.tag &#39;books&#39; &amp;gt;&amp;gt;&amp;gt; child = root.getchildren() &amp;gt;&amp;gt;&amp;gt; child [&amp;lt;Element &#39;book&#39; at 0x106f59410&amp;gt;, &amp;lt;Element &#39;book&#39; at 0x106f59450&amp;gt;] &amp;gt;&amp;gt;&amp;gt; child[0].</description>
    </item>
    
    <item>
      <title>XML基础</title>
      <link>http://wyb0.com/posts/xml-basis/</link>
      <pubDate>Wed, 25 May 2016 13:59:59 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/xml-basis/</guid>
      <description>0x00 XML简介  xml的设计宗旨是传输数据，而并非显示数据 xms是不作为的，它被设计用来结构化、存储以及传输信息 xml只是纯文本，独立于软硬件和应用程序 xml可供任何软硬设备读取数据 xml可以自定义标签 xml具有自我描述性 xml是对html的补充 xml常用于简化数据的存储和共享   例子：John给George的便签
&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt; &amp;lt;note&amp;gt; //根元素 &amp;lt;to&amp;gt;George&amp;lt;/to&amp;gt; &amp;lt;from&amp;gt;John&amp;lt;/from&amp;gt; &amp;lt;heading&amp;gt;Reminder&amp;lt;/heading&amp;gt; &amp;lt;body&amp;gt;Don&#39;t forget the meeting!&amp;lt;/body&amp;gt; &amp;lt;/note&amp;gt;   0x01 XML树结构  必须有根节点 根节点可以有子节点   格式：
&amp;lt;root&amp;gt; &amp;lt;child&amp;gt; &amp;lt;subchild&amp;gt;.....&amp;lt;/subchild&amp;gt; &amp;lt;/child&amp;gt; &amp;lt;/root&amp;gt;  例子：
&amp;lt;books&amp;gt; &amp;lt;book&amp;gt; &amp;lt;name&amp;gt;Python黑帽子&amp;lt;/name&amp;gt; &amp;lt;date&amp;gt;2015&amp;lt;/date&amp;gt; &amp;lt;price&amp;gt;37￥&amp;lt;/price&amp;gt; &amp;lt;description&amp;gt; 用python写一些程序 &amp;lt;/description&amp;gt; &amp;lt;/book&amp;gt; &amp;lt;book&amp;gt; &amp;lt;name&amp;gt;Web安全深度剖析&amp;lt;/name&amp;gt; &amp;lt;date&amp;gt;2014&amp;lt;/date&amp;gt; &amp;lt;price&amp;gt;39￥&amp;lt;/price&amp;gt; &amp;lt;description&amp;gt; 讲述web渗透的基础知识 &amp;lt;/description&amp;gt; &amp;lt;/book&amp;gt; &amp;lt;book&amp;gt; &amp;lt;name&amp;gt;白帽子讲web安全&amp;lt;/name&amp;gt; &amp;lt;date&amp;gt;2013&amp;lt;/date&amp;gt; &amp;lt;price&amp;gt;44￥&amp;lt;/price&amp;gt; &amp;lt;description&amp;gt; 道哥力作 &amp;lt;/description&amp;gt; &amp;lt;/book&amp;gt; &amp;lt;/books&amp;gt;   0x02 XML语法规则  所有元素必有闭合标签 标签对大小写敏感 必须正确的嵌套 XML必须有根元素 XML的属性值必须加引号(能用子元素的就用子元素代替属性) 实体引用</description>
    </item>
    
  </channel>
</rss>