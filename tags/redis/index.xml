<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Redis on </title>
    <link>http://wyb0.com/tags/redis/</link>
    <description>Recent content in Redis on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 04 Aug 2016 15:52:26 +0800</lastBuildDate>
    
	<atom:link href="http://wyb0.com/tags/redis/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Redis未授权访问漏洞</title>
      <link>http://wyb0.com/posts/redis-unauthorized-access/</link>
      <pubDate>Thu, 04 Aug 2016 15:52:26 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/redis-unauthorized-access/</guid>
      <description> 0x00 Redis的未授权访问 若Redis服务器对公网开放，且未启用认证，则攻击者可以未授权访问服务器。 若Redis以root身份运行，黑客可以给root账户写入SSH公钥文件，通过SSH登录受害服务器。
0x01 向Redis服务器上传SSH公钥 0x02 通过计划任务反弹shell </description>
    </item>
    
    <item>
      <title>Redis的使用</title>
      <link>http://wyb0.com/posts/redis-bisis-use/</link>
      <pubDate>Wed, 03 Aug 2016 11:02:20 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/redis-bisis-use/</guid>
      <description>0x00 连接Redis # 客户端连接 $ redis-cli # 连接远程redis $ redis-cli -h host -p port -a password # 查看所有键值 127.0.0.1:6379&amp;gt; keys * # 选择数据库 127.0.0.1:6379&amp;gt; select 0 #可以选择0～15 # 获取redis安装目录 127.0.0.1:6379&amp;gt; config get dir 1) &amp;quot;dir&amp;quot; 2) &amp;quot;/var/lib/redis&amp;quot; # 备份(恢复数据时只需要将备份文件放在redis安装目录即可) 127.0.0.1:6379&amp;gt; save OK 127.0.0.1:6379&amp;gt; exit  0x01 数据类型  String(字符串)  string是redis最基本的类型，你可以理解成与Memcached一模一样的类型，一个key对应一个value。 string类型是二进制安全的。意思是redis的string可以包含任何数据。比如jpg图片或者序列化的对象 。 string类型是Redis最基本的数据类型，一个键最大能存储512MB。  Hash(哈希)  Redis hash 是一个键名对集合。 Redis hash是一个string类型的field和value的映射表，hash特别适合用于存储对象。  List(列表)  Redis 列表是简单的字符串列表，按照插入顺序排序。 可以添加一个元素到列表的头部（左边）或者尾部（右边）。  Set(集合)  Redis的Set是string类型的无序集合。 集合内元素是唯一的，后者会覆盖前者。 集合是通过哈希表实现的，所以添加，删除，查找的复杂度都是O(1)。  zset(有序集合)  Redis zset 和 set 一样也是string类型元素的集合,且不允许重复的成员。 zset每个元素都会关联一个double类型的分数。redis正是通过分数来为集合中的成员进行从小到大的排序。 zset的成员是唯一的,但分数(score)却可以重复。   0x02 String # 添加键值对 127.</description>
    </item>
    
    <item>
      <title>Redis的安装</title>
      <link>http://wyb0.com/posts/redis-install/</link>
      <pubDate>Wed, 03 Aug 2016 00:00:48 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/redis-install/</guid>
      <description>0x00 关于Redis Redis和MySQL这种关系型数据库不一样，它是非关系型数据库，是日志型、Key-Value数据库， 实现了master-slave(主从)同步,数据都是缓存在内存中的,所以可高速读写,但存储成本较高, 不适合做海量数据存储。  0x01 安装 可在http://download.redis.io/releases/ 下载
$ cd /opt $ wget http://download.redis.io/releases/redis-3.2.3.tar.gz $ tar -zxvf redis-3.2.3.tar.gz $ cd redis-3.2.3 $ make $ make install  0x02 产生的可执行文件 redis-server：redis服务器启动程序 redis-cli：redis命令行工具，也可为客户端 redis-stat：redis状态检测工具 redis-benchmark：redis性能检测工具(读写)  0x03 配置文件 $ vim /opt/redis-3.2.3/redis.conf daemonize yes # 当值为yes时可以后台运行 bind 127.0.0.1 # 绑定ip，配置后只接受来自该ip的请求 port 6379 # 监听端口 timeout 300 # 客户端连接超时时间，单位为秒 loglevel notice # 日志等级分为4级，debug、verbose、notice、warning logfile &amp;quot;/var/log/redis.log&amp;quot; # 日志文件位置 databases 16 # 数据库数量 sava 900 1 # 设置数据库镜像的频率 dbfilename dump.</description>
    </item>
    
  </channel>
</rss>