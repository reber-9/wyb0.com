<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>软件 on </title>
    <link>http://wyb0.com/tags/%E8%BD%AF%E4%BB%B6/</link>
    <description>Recent content in 软件 on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2016-2017 Reber. All Rights Reserved.</copyright>
    <lastBuildDate>Sat, 10 Sep 2016 16:24:18 +0800</lastBuildDate>
    <atom:link href="http://wyb0.com/tags/%E8%BD%AF%E4%BB%B6/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Tmux的使用</title>
      <link>http://wyb0.com/posts/tmux-usage/</link>
      <pubDate>Sat, 10 Sep 2016 16:24:18 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/tmux-usage/</guid>
      <description>

&lt;h3 id=&#34;0x00-tmux的快捷键前缀:68a83725f4a52a29a9c1ced103357370&#34;&gt;0x00 Tmux的快捷键前缀&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;Tmux 提供了一个快捷键前缀。当想要使用快捷键时，需要先按下快捷键前缀，然后再按下快捷键。比如想按快捷键c时，你需要：先按ctrl+b，松开后再按c&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-会话:68a83725f4a52a29a9c1ced103357370&#34;&gt;0x01 会话&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_new_session1.png&#34; alt=&#34;新建会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_new_session2.png&#34; alt=&#34;新建会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_view_all_session.png&#34; alt=&#34;查看当前所有会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_in_session1.png&#34; alt=&#34;进入会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_in_session2.png&#34; alt=&#34;进入会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_select_session.png&#34; alt=&#34;选择会话&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_select_session_.png&#34; alt=&#34;选择会话&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-窗口和窗格:68a83725f4a52a29a9c1ced103357370&#34;&gt;0x02 窗口和窗格&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_windows_and_panes.gif&#34; alt=&#34;窗口和窗格&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/tmux_windows.png&#34; alt=&#34;简介&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Sublime Text 3几个好用的插件</title>
      <link>http://wyb0.com/posts/sublime-text3-plugins/</link>
      <pubDate>Fri, 02 Sep 2016 23:07:44 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/sublime-text3-plugins/</guid>
      <description>

&lt;h3 id=&#34;0x00-package-control:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x00 Package Control&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;安装完这个插件后可以更容易的管理(安装、删除、查看等)其他插件&lt;/p&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;代码安装&lt;br /&gt;
ctrl+~快捷键调出console，将下面代码粘贴进去，然后Enter执行(注意单引号)&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;import urllib.request,os; pf = &#39;Package Control.sublime-package&#39;; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), &#39;wb&#39;).write(urllib.request.urlopen( &#39;http://sublime.wbond.net/&#39; + pf.replace(&#39; &#39;,&#39;%20&#39;)).read())
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;ul&gt;
&lt;li&gt;手动安装&lt;br /&gt;

&lt;ul&gt;
&lt;li&gt;点击&lt;a href=&#34;https://sublime.wbond.net/Package%20Control.sublime-package&#34;&gt;https://sublime.wbond.net/Package%20Control.sublime-package&lt;/a&gt; 下载文件&lt;/li&gt;
&lt;li&gt;将下载的文件放在root path/Data/Installed Packages下&lt;/li&gt;
&lt;li&gt;重启Sublime Text&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;li&gt;使用方法

&lt;ul&gt;
&lt;li&gt;Ctrl+Shift+P调出菜单然后选择相应操作

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_package_control1.png&#34; alt=&#34;插件Package Control1&#34;&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;Preferences -&amp;gt; Package Control也可调出

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_package_control2.png&#34; alt=&#34;插件Package Control2&#34;&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;选择Install Package后可以输入想安装的插件名搜索安装

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_install.png&#34; alt=&#34;插件安装&#34;&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;0x01-emmet:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x01 Emmet&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;前端必备插件，前身是Zen Coding，可高效编写HTML和CSS(需要依赖PyV8，会自动安装)

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_emmet.png&#34; alt=&#34;插件Emmet&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;
&lt;a href=&#39;http://emmet.io/&#39;&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_emmet_demo.png&#34; alt=&#34;插件Emmet示例&#34;&gt;
&lt;/div&gt;
&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-anaconda:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x02 Anaconda&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;可以自动补全并提示语法，还可跳转到定义、使用等

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_anaconda_set.png&#34; alt=&#34;插件Anaconda设置&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_anaconda_set_default.png&#34; alt=&#34;插件Anaconda设置默认选项&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_anaconda_set_user.png&#34; alt=&#34;插件Anaconda设置用户选项&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_anaconda_add_file.png&#34; alt=&#34;插件Anaconda处理补全问题&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;p&gt;效果如下：

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_anaconda.png&#34; alt=&#34;插件Anaconda&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x03-git:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x03 Git&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;在编辑器就可以执行git命令，有github的开发者必备

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_git.png&#34; alt=&#34;插件Git&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x04-gitgutter:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x04 GitGutter&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;在有了Git插件后，GitGutter 更好的帮助开发者查看文件之前的改动和差异，提升开发效率

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_gitgutter.png&#34; alt=&#34;插件GitGutter&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x05-markdown-preview:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x05 Markdown Preview&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;可以在本地预览文件

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_markdown_preview.png&#34; alt=&#34;插件Markdown Preview&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_markdown_preview_html.png&#34; alt=&#34;插件Markdown Preview预览&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x06-docblokr:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x06 DocBlokr&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;这个插件对于编码风格很严的编程语言很有帮助，可以生成标准的注释

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_docblocr1.gif&#34; alt=&#34;插件DocBlocr&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_docblocr2.gif&#34; alt=&#34;插件DocBlocr&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x07-autofilename:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x07 AutoFileName&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;快捷输入文件名

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_autofilename.png&#34; alt=&#34;插件AutoFileName&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x08-theme-flatland和theme-sodareloaded:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x08 Theme-Flatland和Theme-SoDaReloaded&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;两个很不错的主题插件，安装好之后：首选项 -&amp;gt; 设置-用户，修改文件

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_theme.png&#34; alt=&#34;主题插件&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x09-alignment:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x09 Alignment&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;插件安装好后选中要对齐的文本，然后按Ctrl+Alt+a即可对齐&amp;rdquo;=&amp;ldquo;,&amp;rdquo;+&amp;ldquo;, &amp;ldquo;-&amp;rdquo;, &amp;ldquo;&amp;amp;&amp;ldquo;, &amp;ldquo;|&amp;rdquo;, &amp;ldquo;&amp;lt;&amp;ldquo;,&amp;rdquo;&amp;gt;&amp;ldquo;等符号

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_alignment.gif&#34; alt=&#34;插件Alignment&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0a-converttoutf8:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x0A ConvertToUTF8&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;文件转码成utf-8&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0b-imesupport:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x0B IMESupport&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;解决Sublime Text中文输入法不能跟随光标的问题&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0c-光标所在行高亮显示:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x0C 光标所在行高亮显示&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;首选项-&amp;gt;设置-用户，在文件中添加 &amp;ldquo;highlight_line&amp;rdquo;:true&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x0e-后记:59d59e08de39166b1baca1887fa44fdc&#34;&gt;0x0E 后记&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;在安装插件时总出错提示&amp;rdquo;There are no packages available for installation&amp;rdquo;可以用上面提到的手动安装Package Control来解决，或者：

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_end1.png&#34; alt=&#34;后记1&#34;&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;有时Package Control不能下载插件时，可以直接下载插件，然后放在下面图示的文件夹中，然后重启Sublime Text使插件生效：

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/sublime_end2.png&#34; alt=&#34;后记2&#34;&gt;
&lt;/div&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Windows下用Proxifier实现全局代理</title>
      <link>http://wyb0.com/posts/windows-proxifier-implement-global-proxy/</link>
      <pubDate>Sun, 24 Jul 2016 21:33:59 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/windows-proxifier-implement-global-proxy/</guid>
      <description>

&lt;h3 id=&#34;0x00-环境:290d09a99cec652fa16113cf9df0b736&#34;&gt;0x00 环境&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;在windows下用Shadowsocks和Proxifier实现全局代理：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;System：Windows10 Pro x64
Shadowsocks：Shadowsocks v2.5.2.0 
Proxifier：Proxifier Portable Edition v3.29
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-配置shadowsocks:290d09a99cec652fa16113cf9df0b736&#34;&gt;0x01 配置Shadowsocks&lt;/h3&gt;

&lt;blockquote&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_set_shadowsocks.png&#34; alt=&#34;Windows下实现全局代理-设置shadowsocks.png&#34;&gt;
&lt;/div&gt;

&lt;/blockquote&gt;

&lt;h3 id=&#34;0x02-配置proxifier:290d09a99cec652fa16113cf9df0b736&#34;&gt;0x02 配置Proxifier&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Proxifier添加代理服务

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_proxifier_add_proxy_servers1.png&#34; alt=&#34;Windows下实现全局代理-添加代理服务1.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_proxifier_add_proxy_servers2.png&#34; alt=&#34;Windows下实现全局代理-添加代理服务2.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_proxifier_check_proxy.png&#34; alt=&#34;Windows下实现全局代理-检测添加的代理.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;Proxifier添加规则

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_proxifier_set_rules1.png&#34; alt=&#34;Windows下实现全局代理-设置规则1.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_proxifier_set_rules2.png&#34; alt=&#34;Windows下实现全局代理-设置规则2.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_proxifier_add_rules1.png&#34; alt=&#34;Windows下实现全局代理-添加规则1.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_proxifier_add_rules2.png&#34; alt=&#34;Windows下实现全局代理-添加规则2.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;测试全局代理设置成功与否

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_test1.png&#34; alt=&#34;Windows下实现全局代理-测试全局代理是否设置成功1.png&#34;&gt;
&lt;/div&gt;

&lt;br /&gt;&lt;br /&gt;

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/global_agent_test2.png&#34; alt=&#34;Windows下实现全局代理-测试全局代理是否设置成功2.png&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu下使用ShadowSocks</title>
      <link>http://wyb0.com/posts/ubuntu-use-shadowsocks/</link>
      <pubDate>Mon, 13 Jun 2016 09:14:45 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/ubuntu-use-shadowsocks/</guid>
      <description>

&lt;h4 id=&#34;环境:d659d85d332b95f9ca7d4cee2f8ed730&#34;&gt;环境：&lt;/h4&gt;

&lt;p&gt;ubuntu14.4&lt;/p&gt;

&lt;h2 id=&#34;安装shadowsocks-qt5:d659d85d332b95f9ca7d4cee2f8ed730&#34;&gt;安装shadowsocks-qt5&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&#34;language-sh&#34;&gt;sudo add-apt-repository ppa:hzwhuang/ss-qt5（添加源）
sudo apt-get update （更新你的软件库）
sudo apt-get install shadowsocks-qt5 (正式安装)
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;配置客户端:d659d85d332b95f9ca7d4cee2f8ed730&#34;&gt;配置客户端&lt;/h2&gt;


&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_open_client.png&#34; alt=&#34;打开shadowsocks客户端&#34;&gt;
&lt;/div&gt;



&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_add_config.png&#34; alt=&#34;shadowsocks添加配置&#34;&gt;
&lt;/div&gt;



&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_config.png&#34; alt=&#34;配置shadowsocks&#34;&gt;
&lt;/div&gt;


&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_connection.png&#34; alt=&#34;连接shadowsocks&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;配置火狐:d659d85d332b95f9ca7d4cee2f8ed730&#34;&gt;配置火狐&lt;/h2&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/firfox_config_agent.png&#34; alt=&#34;火狐配置代理&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;

&lt;h2 id=&#34;访问youtube:d659d85d332b95f9ca7d4cee2f8ed730&#34;&gt;访问YouTube&lt;/h2&gt;

&lt;p&gt;
&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/ss_go_youtube.png&#34; alt=&#34;访问YouTube&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>conky配置</title>
      <link>http://wyb0.com/posts/conky-configuration/</link>
      <pubDate>Sat, 04 Jun 2016 20:26:21 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/conky-configuration/</guid>
      <description>

&lt;h3 id=&#34;0x00-效果:d13c8b05485e8bf201817fef6c056b27&#34;&gt;0x00 效果&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;使用软件conky可以在linux上看到系统的运行状态，效果如下：

&lt;div class=&#34;pure-u-1&#34;&gt;
  &lt;img class=&#34;pure-img&#34; src=&#34;http://wyb0.com/img/post/Conky.png&#34; alt=&#34;conky效果图&#34;&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;0x01-安装与配置:d13c8b05485e8bf201817fef6c056b27&#34;&gt;0x01 安装与配置&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;先安装conky：&lt;br /&gt;
sudo apt-get install conky&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;在/home/username/下创建文件.conkyrc&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使conky开机自启&lt;br /&gt;
在/etc/profile最下面添加：/usr/bin/conky &amp;amp;&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;0x03-配置文件-conkyrc内容如下:d13c8b05485e8bf201817fef6c056b27&#34;&gt;0x03 配置文件.conkyrc内容如下&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;# set to yes if you want Conky to be forked in the background
background no
cpu_avg_samples 2
net_avg_samples 2
out_to_console no
# X font when Xft is disabled, you can pick one with program xfontsel
#font 7x12
#font 6x10
#font 7x13
#font 8x13
#font 7x12
#font *mintsmild.se*
#font -*-*-*-*-*-*-34-*-*-*-*-*-*-*
#font -artwiz-snap-normal-r-normal-*-*-100-*-*-p-*-iso8859-1
# Use Xft?
use_xft yes
# Xft font when Xft is enabled
xftfont Sans:size=11  
own_window_argb_visual yes
#own_window_colour hotpink
# Text alpha when using Xft
xftalpha 0.8
# on_bottom yes
# mail spool
mail_spool $MAIL
# Update interval in seconds
update_interval 1
# Create own window instead of using desktop (required in nautilus)
own_window yes
own_window_transparent yes
own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager
#own_window_type override
own_window_type normal
# Use double buffering (reduces flicker, may not work for everyone)
double_buffer yes
# Minimum size of text area
minimum_size 260 5
maximum_width 400
# Draw shades?
draw_shades no
# Draw outlines?
draw_outline no
# Draw borders around text
draw_borders no
# Stippled borders?
stippled_borders no
# border margins
border_margin 4
# border width
border_width 1
# Default colors and also border colors
default_color white
default_shade_color white
default_outline_color white
# Text alignment, other possible values are commented
#alignment top_left
#minimum_size 10 10
gap_x 10
gap_y 35
alignment top_right
#alignment bottom_left
#alignment bottom_right
# Gap between borders of screen and text
# Add spaces to keep things from moving about?  This only affects
# certain objects.
use_spacer none
# Subtract file system buffers from used memory?
no_buffers yes
# set to yes if you want all text to be in uppercase
uppercase no
# none, xmms, bmp, audacious, infopipe (default is none)
# xmms_player bmp


TEXT
${color red}SYSTEM ${hr 1}
#Time:$alignr${time %Y.%m.%d}$alignc   ${time %H:%M:%S}$alignr   Week:${time %w}
Hostname: $alignr$nodename
Kernel: $alignr$kernel
Machine:$alignr$machine
Uptime: $alignr$uptime
Temp: ${alignr}${acpitemp} °C
Battery:$alignr${battery BAT0}
#Battery:$alignr${battery_percent BAT0}%  
###############
${color green}NETWORK ${hr 1}
IP:${addr eth0}
GateWay:$gw_ip
Down ${downspeed eth0} /s ${alignr}Up ${upspeed eth0} /s
#${downspeedgraph eth0 25,107} ${alignr}${upspeedgraph eth0 25,107}
Total ${totaldown eth0} ${alignr}Total ${totalup eth0}
#############
${color #9932CC}MEMORY ${hr 1}
Ram ${alignr}$mem / $memmax ($memperc%)
${membar 4}
swap ${alignr}$swap / $swapmax ($swapperc%)
${swapbar 4}
Highest MEM $alignr MEM%
${top_mem name 1}$alignr ${top_mem mem 1}
${top_mem name 2}$alignr ${top_mem mem 2}
${top_mem name 3}$alignr ${top_mem mem 3}
##############
${color #ffd700}CPU ${hr 1}
Frequency: ${alignr}${freq dyn} MHz
Processes: ${alignr}$processes ($running_processes running)
Load: ${alignr}$loadavg
CPU1 ${alignr}${cpu cpu1}%
${cpubar 4 cpu1}
CPU2 ${alignr}${cpu cpu2}%
${cpubar 4 cpu2}
Highest CPU $alignr CPU%
${top name 1}$alignr${top cpu 1}
${top name 2}$alignr${top cpu 2}
${top name 3}$alignr${top cpu 3}
##############
${color grey}FILE SYSTEM ${hr 1}
Disk I/O:$diskio
Root: ${alignr}${fs_free /} / ${fs_size /}
${fs_bar 4 /}
Home: ${alignr}${fs_free /home} / ${fs_size /home}
${fs_bar 4 /home}
#############
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntu下安装sublime text 3</title>
      <link>http://wyb0.com/posts/ubuntu-insatll-sublime-text3/</link>
      <pubDate>Sun, 08 May 2016 00:04:42 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/ubuntu-insatll-sublime-text3/</guid>
      <description>

&lt;h4 id=&#34;环境:453f7660619cc72bf0985849e2926fb0&#34;&gt;环境：&lt;/h4&gt;

&lt;p&gt;ubuntu14.4&lt;/p&gt;

&lt;h2 id=&#34;安装:453f7660619cc72bf0985849e2926fb0&#34;&gt;安装&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;添加Sublime Text 3的仓库&lt;br /&gt;
sudo add-apt-repository ppa:webupd8team/sublime-text-3&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;更新软件库&lt;br /&gt;
sudo apt-get update&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装Sublime Text 3&lt;br /&gt;
sudo apt-get install sublime-text-installer&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;解决不能输入中文的问题:453f7660619cc72bf0985849e2926fb0&#34;&gt;解决不能输入中文的问题&lt;/h2&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;新建sublime_imfix.c(位于～目录)，写入如下内容&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;lt;gtk/gtkimcontext.h&amp;gt;
void gtk_im_context_set_client_window (GtkIMContext *context,GdkWindow  *window)
{
GtkIMContextClass *klass;
g_return_if_fail (GTK_IS_IM_CONTEXT (context));
klass = GTK_IM_CONTEXT_GET_CLASS (context);
if (klass-&amp;gt;set_client_window)
klass-&amp;gt;set_client_window (context, window);
g_object_set_data(G_OBJECT(context),&amp;quot;window&amp;quot;,window);
if(!GDK_IS_WINDOW (window))
return;
int width = gdk_window_get_width(window);
int height = gdk_window_get_height(window);
if(width != 0 &amp;amp;&amp;amp; height !=0)
gtk_im_context_focus_in(context);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将上一步的代码编译成共享库libsublime-imfix.so&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cd ~  
sudo apt-get install gtk+-2.0  
gcc -shared -o libsublime-imfix.so sublime_imfix.c  `pkg-config --libs --cflags gtk+-2.0` -fPIC
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;将libsublime-imfix.so拷贝到sublime_text所在文件夹&lt;br /&gt;
&lt;code&gt;sudo mv libsublime-imfix.so /opt/sublime_text/&lt;/code&gt;&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;修改文件/usr/bin/subl的内容&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;sudo vim /usr/bin/subl  
将  
#!/bin/sh  
exec /opt/sublime_text/sublime_text &amp;quot;$@&amp;quot;  
修改为  
#!/bin/sh  
LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text &amp;quot;$@&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;使用鼠标右键打开文件时能够使用中文输入&lt;br /&gt;
sudo vim /usr/share/applications/sublime_text.desktop&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;将[Desktop Entry]中的字符串  
Exec=/opt/sublime_text/sublime_text %F  
修改为  
Exec=bash -c &amp;quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text %F&amp;quot;  


将[Desktop Action Window]中的字符串  
Exec=/opt/sublime_text/sublime_text -n  
修改为  
Exec=bash -c &amp;quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text -n&amp;quot;  


将[Desktop Action Document]中的字符串  
Exec=/opt/sublime_text/sublime_text --command new_file  
修改为  
Exec=bash -c &amp;quot;LD_PRELOAD=/opt/sublime_text/libsublime-imfix.so exec /opt/sublime_text/sublime_text --command new_file&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&#34;插件:453f7660619cc72bf0985849e2926fb0&#34;&gt;插件&lt;/h2&gt;

&lt;blockquote&gt;
&lt;p&gt;|Anaconda|ConvertToUTF8|Emmet|&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Linux之文本处理软件awk</title>
      <link>http://wyb0.com/posts/linux-text-processing-software-awk/</link>
      <pubDate>Wed, 20 Apr 2016 15:54:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-text-processing-software-awk/</guid>
      <description>

&lt;p&gt;&lt;center&gt;
awk默认是以行为单位处理文本的，对test.txt中的每一行都执行后面 &amp;ldquo;{ }&amp;rdquo; 中的语句。
&lt;/center&gt;&lt;br/&gt;&lt;br/&gt;&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;若有一个需要重新格式化的字典test.txt(用户名、密码、地址)：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xiaosan sadasdw jiaozuo
234wer  asdfasd asdas
1111    aaaa    cccc
2222    aaaa    degd
1111    aaaa    cccc
3333    aaaa    dfger
21asd   sdfsd   sadasd
dwqx    asds    sasdfcv
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;要求：&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;1.里面有重复数据，使用命令去重
2.提取出用户名和密码 每一行前面加上id数字，递增。
3.只提取出密码作为爆破字典
4.某些公司都是一个公司前缀+姓名简写，所以为用户名一栏全部改为uv_用户名
5.提取出密码一列，有些密码爆破成功率高，所以增加一列，标出密码出现次数
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;去重:82cb9728d4bd305553ce02dec4025c54&#34;&gt;去重：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39;
[wyb@localhost ~]$ cat test.txt | uniq //作用和上面命令相同
aosan sadasdw jiaozuo
234wer  asdfasd asdas
1111    aaaa    cccc
2222    aaaa    degd
3333    aaaa    dfger
21asd   sdfsd   sadasd
dwqx    asds    sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重-添加id:82cb9728d4bd305553ce02dec4025c54&#34;&gt;去重、添加id：&lt;/h2&gt;

&lt;p&gt;一般字典不需要id、user、pass等标示符，这里只是为了便于观看&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;id:&amp;quot;NR&amp;quot;\tuser:&amp;quot;$1&amp;quot;\tpass:&amp;quot;$2&amp;quot;\taddress:&amp;quot;$3}&#39; | column -t  //最后一个命令可以将列对齐
id:1    user:aosan      pass:sadasdw    address:jiaozuo
id:2    user:234wer     pass:asdfasd    address:asdas
id:3    user:1111       pass:aaaa       address:cccc
id:4    user:2222       pass:aaaa       address:degd
id:5    user:3333       pass:aaaa       address:dfger
id:6    user:21asd      pass:sdfsd      address:sadasd
id:7    user:dwqx       pass:asds       address:sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重-添加id-添加公司前缀:82cb9728d4bd305553ce02dec4025c54&#34;&gt;去重、添加id、添加公司前缀：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;id:&amp;quot;NR&amp;quot;\tuser:uv_&amp;quot;$1&amp;quot;\tpass:&amp;quot;$2&amp;quot;\taddress:&amp;quot;$3}&#39;
id:1    user:uv_aosan   pass:sadasdw    address:jiaozuo
id:2    user:uv_234wer  pass:asdfasd    address:asdas
id:3    user:uv_1111    pass:aaaa       address:cccc
id:4    user:uv_2222    pass:aaaa       address:degd
id:5    user:uv_3333    pass:aaaa       address:dfger
id:6    user:uv_21asd   pass:sdfsd      address:sadasd
id:7    user:uv_dwqx    pass:asds       address:sasdfcv
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;去重然后输出密码:82cb9728d4bd305553ce02dec4025c54&#34;&gt;去重然后输出密码：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print &amp;quot;pass:&amp;quot;$2}&#39;
pass:sadasdw
pass:asdfasd
pass:aaaa
pass:aaaa
pass:aaaa
pass:sdfsd
pass:asds
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;输出密码-得到密码出现次数:82cb9728d4bd305553ce02dec4025c54&#34;&gt;输出密码、得到密码出现次数：&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;下面的&#39;a[$1]++&#39;是按第一列来去重的,若有两条数据只有第一列重复则成功，可以用$0按行来去重
[wyb@localhost ~]$ cat test.txt | awk &#39;!a[$1]++&#39; | awk -F &#39;\t&#39; &#39;{print $2}&#39; | awk &#39;{a[$1]++} END {for (j in a) print a[j],j}&#39;
1 sadasdw
1 sdfsd
1 asdfasd
1 asds
3 aaaa

uniq 只能去除挨着的重复数据，所以先sort升序排序，然后uniq -c统计重复，再sort -r降序排序
cat test.txt | awk &#39;{print $2}&#39; | sed &#39;1d&#39; |sort | uniq -c |sort -r
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;其他:82cb9728d4bd305553ce02dec4025c54&#34;&gt;其他：&lt;/h2&gt;

&lt;h4 id=&#34;对-a-1-的解释如下:82cb9728d4bd305553ce02dec4025c54&#34;&gt;对&amp;rsquo;!a[$1]++&amp;lsquo;的解释如下：&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;a[e54r56wer]为空，!a[e54r56wer]为真，可以输出，然后++&lt;/li&gt;
&lt;li&gt;若再来一个a[e54r56wer]，因为上一步已经++，此时值为1，!a[e54r56wer]为假，不输出，再++&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&#34;对for输出数组的解释如下:82cb9728d4bd305553ce02dec4025c54&#34;&gt;对for输出数组的解释如下：&lt;/h4&gt;

&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;awk &amp;lsquo;{a[$1]++} END {for (j in a) print a[j],j}&amp;rsquo; test.txt&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;在遍历完文件后，通过END把后面的句子连起来&lt;/li&gt;
&lt;li&gt;for (j in a) 是指打印数组a的下标，并定义下标为变量j&lt;/li&gt;
&lt;li&gt;最后print a[j],j就是打印数组下标和数组，这样就相同的$1排重并计数&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Linux之安装ettercap</title>
      <link>http://wyb0.com/posts/linux-install-ettercap/</link>
      <pubDate>Tue, 19 Apr 2016 20:03:07 +0800</pubDate>
      
      <guid>http://wyb0.com/posts/linux-install-ettercap/</guid>
      <description>

&lt;blockquote&gt;
&lt;p&gt;操作系统：CentOS&lt;br /&gt;
首先，ettercap安装时需要4个依赖包，而且安装包里面也已经提供了&lt;br /&gt;
执行：sudo yum groupinstall &amp;ldquo;Development tools&amp;rdquo;    &lt;em&gt;源码安装软件就需要安装这个&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;一-下载解压:64159d09041fb8e703b24c4e7a1ab35d&#34;&gt;一、下载解压&lt;/h3&gt;

&lt;blockquote&gt;
&lt;p&gt;可用wget下载&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;二-查看需要的依赖项:64159d09041fb8e703b24c4e7a1ab35d&#34;&gt;二、查看需要的依赖项&lt;/h3&gt;

&lt;blockquote&gt;
&lt;pre&gt;&lt;code&gt;[wyb@localhost ettercap-0.8.2]$ vim INSTALL

 #### Bundled libraries  
 Ettercap now bundles the following libraries with the source distribution:  
   libnet 1.1.6  
   curl 7.41.0  
   luajit 2.0.3  
   check 0.9.14  
[wyb@localhost ettercap-0.8.2]$ cd bundled_deps/  
[wyb@localhost bundled_deps]$ ls  
check  curl  libnet  luajit
&lt;/code&gt;&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;h3 id=&#34;三-安装依赖包:64159d09041fb8e703b24c4e7a1ab35d&#34;&gt;三、安装依赖包&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装check&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost check]$ cd check-0.9.14
[wyb@localhost check-0.9.14]$ ls
[wyb@localhost check-0.9.14]$ ./configure 
[wyb@localhost check-0.9.14]$ make
[wyb@localhost check-0.9.14]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装curl&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost check-0.9.14]$ cd ..
[wyb@localhost curl-7.41.0]$ cd curl/
[wyb@localhost curl-7.41.0]$ cd curl-7.41.0
[wyb@localhost curl-7.41.0]$ make
[wyb@localhost curl-7.41.0]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装libnet&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost curl-7.41.0]$ cd ../../libnet/
[wyb@localhost libnet]$ tar -zxvf libnet-1.1.6.tar.gz
[wyb@localhost libnet]$ cd libnet-1.1.6
[wyb@localhost libnet-1.1.6]$ ./configure 
[wyb@localhost libnet-1.1.6]$ make
[wyb@localhost libnet-1.1.6]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装luajit&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost luajit]$ tar -zxvf LuaJIT-2.0.3.tar.gz 
[wyb@localhost luajit]$ make
[wyb@localhost luajit]$ sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;安装ettercap&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;[wyb@localhost ettercap-0.8.2]$ cd ettercap-0.8.2 
[wyb@localhost ettercap-0.8.2]$ mkdir build                   
[wyb@localhost ettercap-0.8.2]$ cd build  
[wyb@localhost build]$ cmake ../    *cmake ettercap时提示未安装cmake*  
-bash: cmake: command not found  
[wyb@localhost build]$ sudo yum install cmake   *安装cmake*  
[wyb@localhost build]$ cmake ../    *提示未安装curses*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
-- Check for working C compiler: /usr/bin/cc -- works  
.....  
.....  
CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:108 (message):  
  Could NOT find Curses (missing: CURSES_LIBRARY CURSES_INCLUDE_PATH)  
.....  
.....  
[wyb@localhost build]$ yum search curses    *查找curses*  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Determining fastest mirrors  
 * base: mirrors.yun-idc.com  
 * extras: mirrors.opencas.cn  
 * updates: mirrors.btte.net
============================= N/S Matched: curses   ==============================  
ncurses.x86_64 : Ncurses support utilities  
ncurses-devel.i686 : Development files for the ncurses library  
ncurses-devel.x86_64 : Development files for the ncurses library  
ncurses-libs.x86_64 : Ncurses libraries  
ncurses-libs.i686 : Ncurses libraries  
ncurses-static.x86_64 : Static libraries for the ncurses library  
ocaml-curses.x86_64 : OCaml bindings for ncurses    
ocaml-curses-devel.x86_64 : Development files for ocaml-curses  
ncurses-base.x86_64 : Descriptions of common terminals  
ncurses-term.x86_64 : Terminal descriptions  
  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.  
[wyb@localhost build]$ sudo yum install ncurses ncurses-devel   *安装ncurses开发包*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *出错，缺少依赖包GTK*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
......  
......  
CMake Error at /usr/share/cmake/Modules/FindGTK2.cmake:429 (message):  
  Could not find GTK2 include directory  
....  
....  
[wyb@localhost build]$ yum search gtk  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Loading mirror speeds from cached hostfile  
 * base: mirrors.yun-idc.com  
.....  
.....  
gtk2.x86_64 : The GIMP ToolKit (GTK+), a library for creating GUIs for X  
gtk2.i686 : The GIMP ToolKit (GTK+), a library for creating GUIs for X  
gtk2-devel.i686 : Development files for GTK+   
.... 
....  
[wyb@localhost build]$ sudo yum install gtk2 gtk2-devel *安装gtk及开发包* 
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *缺少依赖包OpenSSL*  
-- The C compiler identification is GNU 4.4.7  
-- Check for working C compiler: /usr/bin/cc  
-- Check for working C compiler: /usr/bin/cc -- works  
-- Detecting C compiler ABI info  
-- Detecting C compiler ABI info - done  
-- Check if the system is big endian  
.....  
.....  
CMake Error at /usr/share/cmake/Modules/FindPackageHandleStandardArgs.cmake:108 (message):  
  Could NOT find OpenSSL, try to set the path to OpenSSL root folder in the  
  system variable OPENSSL_ROOT_DIR (missing: OPENSSL_LIBRARIES OPENSSL_INCLUDE_DIR)    
.....  
.....  
[wyb@localhost build]$ yum search openssl   *查找openssl*  
[wyb@localhost build]$ sudo yum install openssl openssl-devel   *安装openss及其开发包*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *依赖libpcap*  
......  
......  
-- Looking for inet_aton  
-- Looking for inet_aton - found  
CMake Error at cmake/Modules/EttercapLibCheck.cmake:191 (message):  
  libpcap not found!  
....  
....  
[wyb@localhost build]$ yum search libpcap   *查找libpcap*  
Loaded plugins: fastestmirror, refresh-packagekit, security  
Loading mirror speeds from cached hostfile  
 * base: mirrors.yun-idc.com   
 * extras: mirrors.opencas.cn  
 * updates: mirrors.btte.net  
============================= N/S Matched: libpcap =============================  
libpcap-devel.i686 : Libraries and header files for the libpcap library  
libpcap-devel.x86_64 : Libraries and header files for the libpcap library  
libpcap.x86_64 : A system-independent interface for user-level packet capture  
libpcap.i686 : A system-independent interface for user-level packet capture  
  Name and summary matches only, use &amp;quot;search all&amp;quot; for everything.  
[wyb@localhost build]$ sudo yum install libpcap-devel   *安装libpcap-devel*  
[wyb@localhost build]$ rm -rf *     *清除上次cmake产生的文件*  
[wyb@localhost build]$ cmake ../    *cmake成功*  
[wyb@localhost build]$ make *make*  
....  
....  
Linking C executable etterlog  
[100%] Built target etterlog  
Scanning dependencies of target man  
[100%] Built target man  
[wyb@localhost build]$ sudo make install    *make install*  
.....  
.....   
-- Installing: /usr/local/share/man/man8/ettercap_curses.8  
-- Installing: /usr/local/share/man/man8/ettercap-pkexec.8  
-- Installing: /usr/local/share/man/man5/etter.conf.5  
[wyb@localhost build]$ cd  
[wyb@localhost ~]$ ettercap -v  *查看版本且能查看，证明安装成功*  
ettercap 0.8.2 copyright 2001-2015 Ettercap Development Team  
ettercap 0.8.2  
[wyb@localhost ~]$
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
    </item>
    
  </channel>
</rss>